{"version":3,"file":"component---src-templates-term-tsx-content-file-path-terms-campaign-service-provider-csp-index-md-634aeb3124c9c372a968.js","mappings":"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","sources":["webpack://landing/./terms/campaign-service-provider-csp/index.md","webpack://landing/./src/templates/term.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Campaign Service Providers (CSPs) are the primary users of \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/the-campaign-registry-tcr/\"\n  }, \"The Campaign Registry (TCR)\"), \" and the owners of their registered \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/brand/\"\n  }, \"Brands\"), \" and \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/campaign/\"\n  }, \"Campaigns\"), \". As a CSP, you work with multiple Brands (your customers) to create and launch A2P text messaging Campaigns (your customers’ use-cases).\"), \"\\n\", React.createElement(_components.p, null, \"CSPs are directly connected with TCR and have full management control of Brand and Campaign submission timeframes, insight and visibility into their status, and the ability to advise customers immediately.\"), \"\\n\", React.createElement(_components.p, null, \"In early 2024, TCR launched a free \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/news/cnp-migration-tool-for-10dlc/\"\n  }, \"Campaign Migration Tool\"), \" exclusively for CSPs in which you can quickly and easily migrate Campaigns from one \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/connectivity-provider-cnp/\"\n  }, \"Connectivity Partner (CNP)\"), \" to another – without having to re-register, repay the $15 vetting fee, and await approval. This self-serve tool is the first of its kind in TCR and is a game changer for CSPs.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Telgorithm/website/landing/terms/campaign-service-provider-csp/index.md\";\nimport {Link} from 'gatsby';\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {PrimaryButton} from '../components/common/Buttons/Buttons';\nimport Layout from '../components/common/Layout/Layout';\nimport CustomLink from '../components/common/Link';\nimport {GatsbySeoComponent, TopLevelPageJSONLDSchemas} from '../components/common/SEO';\nimport {StyledBackground, TermButtons, TermContainer, TermDefinitionContainer, TermTitle, StyledTermPage, TermDefinition} from '../components/term/styled';\nimport {InternalLinks} from '../utils/links';\nimport {Text} from '../components/common/Text';\nimport {mapTermNodeToGlossaryTerm} from '../mappers';\nconst TermPage = _ref => {\n  var _data$mdx, _data$mdx2, _allTerms, _data$mdx4, _data$mdx4$fields, _data$mdx5, _data$mdx5$fields;\n  let {data, children} = _ref;\n  const {title, metaTitle} = (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : _data$mdx.frontmatter;\n  const description = data === null || data === void 0 ? void 0 : (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : _data$mdx2.excerpt;\n  const allTerms = data.allMdx.edges.map(edge => mapTermNodeToGlossaryTerm(edge.node));\n  const currentTermIndex = allTerms.findIndex(item => {\n    var _data$mdx3;\n    return item.id === ((_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : _data$mdx3.id);\n  });\n  const nextTerm = (_allTerms = allTerms[currentTermIndex + 1]) !== null && _allTerms !== void 0 ? _allTerms : allTerms[0];\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    title: title + \" | Telgorithm\"\n  }, React.createElement(\"meta\", {\n    name: \"title\",\n    content: metaTitle !== null && metaTitle !== void 0 ? metaTitle : title\n  }), React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: metaTitle !== null && metaTitle !== void 0 ? metaTitle : title\n  }), React.createElement(\"meta\", {\n    property: \"twitter:title\",\n    content: metaTitle !== null && metaTitle !== void 0 ? metaTitle : title\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    property: \"twitter:description\",\n    content: description\n  })), React.createElement(TopLevelPageJSONLDSchemas, {\n    url: 'https://www.telgorithm.com/glossary/' + ((_data$mdx4 = data.mdx) === null || _data$mdx4 === void 0 ? void 0 : (_data$mdx4$fields = _data$mdx4.fields) === null || _data$mdx4$fields === void 0 ? void 0 : _data$mdx4$fields.slug)\n  }), React.createElement(GatsbySeoComponent, {\n    canonicalUrl: 'https://www.telgorithm.com/glossary/' + ((_data$mdx5 = data.mdx) === null || _data$mdx5 === void 0 ? void 0 : (_data$mdx5$fields = _data$mdx5.fields) === null || _data$mdx5$fields === void 0 ? void 0 : _data$mdx5$fields.slug)\n  }), React.createElement(Layout, {\n    disabledContainer: true\n  }, React.createElement(StyledTermPage, null, React.createElement(StyledBackground, null), React.createElement(TermContainer, null, React.createElement(TermTitle, null, React.createElement(Text.Regular.Normal.md, null, \"Term\"), React.createElement(Text.Title.Bold.xl, null, title)), React.createElement(TermDefinitionContainer, null, React.createElement(Text.Regular.Normal.md, null, \"Definition\"), React.createElement(TermDefinition, null, children)), React.createElement(TermButtons, null, React.createElement(Link, {\n    to: InternalLinks.Glossary\n  }, React.createElement(PrimaryButton, null, \"Back To Glossary\")), React.createElement(CustomLink, {\n    arrow: true,\n    address: nextTerm === null || nextTerm === void 0 ? void 0 : nextTerm.url\n  }, \"View Next Term\"))))));\n};\nTermPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(TermPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"2188261531\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","TermPage","_ref","_data$mdx","_data$mdx2","_allTerms","_data$mdx4","_data$mdx4$fields","_data$mdx5","_data$mdx5$fields","data","children","title","metaTitle","mdx","frontmatter","description","excerpt","allTerms","allMdx","edges","map","edge","mapTermNodeToGlossaryTerm","node","currentTermIndex","findIndex","item","_data$mdx3","id","nextTerm","Helmet","name","content","property","TopLevelPageJSONLDSchemas","url","fields","slug","GatsbySeoComponent","canonicalUrl","Layout","disabledContainer","StyledTermPage","StyledBackground","TermContainer","TermTitle","Text","TermDefinitionContainer","TermDefinition","TermButtons","Link","to","InternalLinks","PrimaryButton","CustomLink","arrow","address","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}