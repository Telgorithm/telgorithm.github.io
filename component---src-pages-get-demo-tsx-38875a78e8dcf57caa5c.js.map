{"version":3,"file":"component---src-pages-get-demo-tsx-38875a78e8dcf57caa5c.js","mappings":"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","sources":["webpack://landing/./src/components/common/GetDemoForm/index.tsx","webpack://landing/./src/components/common/GetDemoForm/styled.ts","webpack://landing/./src/components/common/Table/index.tsx","webpack://landing/./src/components/common/Table/styled.ts","webpack://landing/./src/components/common/Divider/index.tsx","webpack://landing/./src/components/common/NumberInput/index.tsx","webpack://landing/./src/components/get-demo/styled.ts","webpack://landing/./src/components/get-demo/index.tsx","webpack://landing/./src/pages/get-demo.tsx"],"sourcesContent":["import { StaticImage } from 'gatsby-plugin-image';\r\nimport {\r\n  StyledGetDemoFormContainer,\r\n} from './styled';\r\nimport React, { FC, useContext, useEffect } from 'react';\r\nimport { AppContext } from '../Layout/Layout';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport useFetchHubSpotForms from '../../../hooks/useFetchHubSpotForms';\r\nimport { colors } from '../../../utils/colors';\r\n\r\ntype Props = {\r\n  formId: string;\r\n}\r\n\r\nexport const GetDemoForm:FC<Props> = ({ formId }) => {\r\n  const appContext = useContext(AppContext);\r\n\r\n  useFetchHubSpotForms(\r\n    [appContext.hubSpot.isHubSpotFormsLoaded],\r\n    !appContext.hubSpot.isHubSpotFormsLoaded,\r\n    appContext.hubSpot.setIsHubSpotFormsLoaded,\r\n  );\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    window.hbspt?.forms.create({\r\n      region: 'na1',\r\n      portalId: '21630623',\r\n      formId: formId,\r\n      target: '#hubSpotGetADemoForm',\r\n      onFormSubmit: function () {\r\n        //@ts-ignore\r\n        gtag_report_conversion();\r\n      },\r\n      onFormReady: function (form: Element) {\r\n        const gclidField = form.querySelector('input[name=\"gclid_field\"]');\r\n        if (gclidField) {\r\n          gclidField.id = 'gclid_field'\r\n        }\r\n      },\r\n    });\r\n  }, [appContext.hubSpot.isHubSpotFormsLoaded]);\r\n\r\n  return (\r\n    <StyledGetDemoFormContainer id=\"hubSpotGetADemoForm\">\r\n      {!appContext.hubSpot.isHubSpotFormsLoaded && (\r\n        <ClipLoader color={colors.primary.lightOrange} />\r\n      )}\r\n    </StyledGetDemoFormContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"../../../utils/colors\";\r\nimport { device } from \"../../../utils/layoutBreakpoints\";\r\n\r\nexport const StyledGetDemoFormContainer = styled.div`\r\n  font-size: 0.8rem;\r\n  line-height: 1.1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 15px;\r\n  width: 100%;\r\n  label {\r\n    font-weight: 500;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    width: 100%;\r\n  }\r\n\r\n  input,\r\n  textarea {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    background-color: ${colors.primary.white};\r\n    color: ${colors.primary.black};\r\n    border: 1px solid ${colors.secondary.gray300};\r\n    font-family: 'Rubik';\r\n    border-radius: 5px;\r\n    &::placeholder {\r\n      color: ${colors.primary.gray500};\r\n      font-family: 'Rubik';\r\n    }\r\n    &:focus {\r\n      outline: none;\r\n      border: 1px solid ${colors.primary.blue};\r\n    }\r\n  }\r\n\r\n  input {\r\n    height: 36px;\r\n    padding: 10px 15px;\r\n  }\r\n\r\n  textarea {\r\n    height: 100px;\r\n    padding: 10px 15px;\r\n    resize: none;\r\n  }\r\n\r\n  fieldset {\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    gap: 10px;\r\n    legend {\r\n      font-weight: 500;\r\n      margin-bottom: 10px;\r\n    }\r\n    label {\r\n      cursor: pointer;\r\n      background: ${colors.primary.white};\r\n      border: 1px solid ${colors.secondary.gray300};\r\n      border-radius: 8px;\r\n      padding: 10px 15px;\r\n      text-align: center;\r\n      box-sizing: border-box;\r\n    }\r\n    input {\r\n      display: none;\r\n      &:checked + label {\r\n        color: ${colors.primary.white};\r\n        background-color: ${colors.primary.blue};\r\n      }\r\n    }\r\n\r\n    @media ${device.tablet} {\r\n      flex-direction: row;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledGetDemoContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  background-color: ${colors.secondary.gray100};\r\n  border-radius: 16px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  position: relative;\r\n  z-index: 2;\r\n  min-height: 630px;\r\n\r\n  & > div:first-child {\r\n    padding: 25px 25px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    & > div:first-child {\r\n      padding: 50px 50px;\r\n    }\r\n  }\r\n`;\r\n","import React, {PropsWithChildren} from 'react';\nimport {Table, TableHeader, TableBody, TableRow, TableHeaderCell, TableBodyCell, TableContainer, TableWrapper} from \"./styled\";\n\ntype TableProps = PropsWithChildren<{}>;\n\ntype SubComponents = {\n  Header: typeof TableHeader;\n  Body: typeof TableBody;\n  Row: typeof TableRow;\n  HeaderCell: typeof TableHeaderCell;\n  BodyCell: typeof TableBodyCell;\n  Container: typeof TableContainer;\n  Wrapper: typeof TableWrapper;\n};\n\nconst TableComponent: React.FC<TableProps> & SubComponents = ({children}: TableProps) => {\n  return (\n    <Table>\n      {children}\n    </Table>\n  );\n};\n\nTableComponent.Header = TableHeader;\nTableComponent.Body = TableBody;\nTableComponent.Row = TableRow;\nTableComponent.HeaderCell = TableHeaderCell;\nTableComponent.BodyCell = TableBodyCell;\nTableComponent.Container = TableContainer;\nTableComponent.Wrapper = TableWrapper;\n\nexport default TableComponent;\n","import styled from \"styled-components\";\nimport { device } from \"../../../utils/layoutBreakpoints\";\nimport { colors, opacityToHex } from \"../../../utils/colors\";\n\nexport const TableHeaderCell = styled.th`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 600;\n  line-height: 22px;\n  text-align: left;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableBodyCell = styled.td`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  vertical-align: middle;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  ${TableBodyCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n      border-top-left-radius: 8px;\n      border-bottom-left-radius: 8px;\n    }\n\n    &:last-child {\n      padding-right: 24px;\n      border-top-right-radius: 8px;\n      border-bottom-right-radius: 8px;\n    }\n  }\n\n  ${TableHeaderCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n    }\n  }\n`;\n\nexport const TableHeader = styled.thead``;\n\nexport const TableBody = styled.tbody`\n  ${TableRow}:nth-child(2n+1) {\n    background-color: ${colors.primary.blue + opacityToHex[\"0.1\"]};\n  }\n`;\n\nexport const Table = styled.table`\n  table-layout: fixed;\n\n  @media ${device.laptop} {\n    margin: 0;\n    width: 100%;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  overflow-x: hidden;\n  position: relative;\n  @media ${device.tablet} {\n    width: auto;\n  }\n  @supports (-webkit-touch-callout: none) {\n    &::after {\n      position: absolute;\n      content: \"\";\n      display: block;\n      bottom: 2px;\n      left: 0;\n      width: 100%;\n      height: 5px;\n      background-color: ${colors.primary.gray500};\n      border-radius: 5px;\n      z-index: -1;\n      @media ${device.tablet} {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  overflow-x: scroll;\n  scrollbar-color: ${colors.secondary.gray700};\n  padding-bottom: 10px;\n\n  /* Chrome, Edge, and Safari */\n  &::-webkit-scrollbar {\n    width: 12px;\n    height: 10px !important;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${colors.secondary.gray300};\n    border-radius: 5px;\n    height: 5px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n    border-radius: 10px;\n    height: 5px !important;\n  }\n  &:hover::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n  }\n\n  @media ${device.tablet} {\n    overflow-x: auto;\n    table {\n      min-width: auto;\n    }\n  }\n  table {\n    min-width: 850px;\n    width: 100%;\n    table-layout: auto;\n  }\n`;\n","import styled from 'styled-components';\nimport {colors} from \"../../../utils/colors\";\n\nconst Divider = styled.div<{isLight?: boolean}>`\n  width: 100%;\n  border-bottom: ${props => '1px solid ' + (props.isLight ? colors.secondary.gray200 : colors.secondary.gray300)};\n`;\n\nexport default Divider;\n","import React, {useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\n\nconst Input = styled.input<{textAlign?: string}>`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  width: calc(100% - 24px);\n  padding: 6px 12px;\n  text-align: ${props => props.textAlign ?? \"left\"};\n  border: 1px solid #C3C5CD;\n  border-radius: 8px;\n`;\n\ntype NumberInputProps = {\n  onChange?: (value : number | null) => void;\n  initialValue?: number;\n  disabled?: boolean;\n};\n\nconst NumberInput = ({onChange, initialValue, disabled} : NumberInputProps) => {\n  const [value, setValue] = useState<string | null>(initialValue ? String(initialValue) : '0');\n\n  useEffect(() => {\n    handleChange({currentTarget: {\n      value: initialValue || 0\n    }});\n  }, [initialValue])\n\n  const addCommas = (num: number) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  const removeNonNumeric = (num: string) =>\n    num.toString().replace(/[^0-9]/g, \"\");\n\n  const handleChange = (event : React.FormEvent<HTMLInputElement>) => {\n    const stringValue = removeNonNumeric(event.currentTarget.value);\n\n    if (!isNaN(Number(stringValue))) {\n      const number = Number(stringValue);\n      setValue(addCommas(number));\n      onChange && onChange(number);\n    } else {\n      setValue(null);\n      onChange && onChange(null);\n    }\n  }\n\n  return (\n    <Input\n      type=\"text\"\n      value={value ?? ''}\n      onInput={handleChange}\n      maxLength={13}\n      onFocus={(e) => e.currentTarget.select()}\n      disabled={disabled}\n    />\n  );\n};\n\nexport default NumberInput;\n","import styled from 'styled-components';\r\nimport { colors } from '../../utils/colors';\r\nimport { device } from '../../utils/layoutBreakpoints';\r\n\r\nexport const GetDemoBackgroundImagesWrapper = styled.div`\r\n  display: none;\r\n  width: 50%;\r\n  height: 100%;\r\n  @media ${device.laptop} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const GetDemoBackgroundImages = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  & > div {\r\n    max-width: 300px;\r\n    height: auto;\r\n    position: absolute;\r\n    &:first-child {\r\n      right: 200px;\r\n    }\r\n    &:nth-child(2) {\r\n      right: -40px;\r\n      top: 250px;\r\n    }\r\n    &:nth-child(3) {\r\n      top: 300px;\r\n      left: -100px;\r\n      z-index: 1;\r\n    }\r\n    &:nth-child(4) {\r\n      right: 80px;\r\n      top: 580px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GetDemoPageWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  background-color: ${colors.secondary.azureishWhite};\r\n`;\r\n\r\nexport const GetDemoContentContainer = styled.div`\r\n  max-width: 1268px;\r\n  margin: auto;\r\n  padding: 30px 40px 80px;\r\n  display: flex;\r\n  height: 100%;\r\n  & > div:first-child {\r\n    width: 100%;\r\n    @media ${device.laptop} {\r\n      width: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GetDemoPageHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  @media ${device.laptop} {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n","import { StaticImage } from 'gatsby-plugin-image';\r\nimport {\r\n  GetDemoBackgroundImagesWrapper,\r\n  GetDemoBackgroundImages,\r\n} from './styled';\r\nimport React from 'react';\r\n\r\nexport const BackgroundImages = () => {\r\n  return (\r\n    <GetDemoBackgroundImagesWrapper>\r\n      <GetDemoBackgroundImages>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/automatedNumberPorting.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/messageTimeRouting.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/phoneNumberVerification.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/advancedErrorReporting.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n      </GetDemoBackgroundImages>\r\n    </GetDemoBackgroundImagesWrapper>\r\n  );\r\n};\r\n","import * as React from 'react';\r\nimport { Layout, Text } from '../components/common';\r\nimport {\r\n  GatsbySeoComponent,\r\n  MetaData,\r\n  TopLevelPageJSONLDSchemas,\r\n} from '../components/common/SEO';\r\nimport { useInView } from 'react-cool-inview';\r\nimport {\r\n  GetDemoContentContainer,\r\n  GetDemoPageHeader,\r\n  GetDemoPageWrapper,\r\n} from '../components/get-demo/styled';\r\nimport { BackgroundImages } from '../components/get-demo';\r\nimport { GetDemoForm } from '../components/common/GetDemoForm';\r\nimport { StyledGetDemoContainer } from '../components/common/GetDemoForm/styled';\r\n\r\nconst GetDemoPage = () => {\r\n  const { observe, inView } = useInView({});\r\n  return (\r\n    <>\r\n      <MetaData title=\"Get Demo | Telgorithm\" description=\"Demo Our SMS & MMS APIs\" />\r\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/get-demo/\" />\r\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/get-demo/\" />\r\n      <Layout disabledContainer>\r\n        <GetDemoPageWrapper>\r\n          <GetDemoContentContainer>\r\n            <div>\r\n              <GetDemoPageHeader>\r\n                <Text.Title.Bold.xl>Demo Our SMS & MMS APIs</Text.Title.Bold.xl>\r\n                <Text.Regular.Bold.md>\r\n                  Complete the form below to request a free demo.\r\n                </Text.Regular.Bold.md>\r\n              </GetDemoPageHeader>\r\n              <StyledGetDemoContainer ref={observe}>\r\n                <div>\r\n                  <GetDemoForm formId='26faf862-980b-40dc-b461-f4cda7841e47'></GetDemoForm>\r\n                </div>\r\n              </StyledGetDemoContainer>\r\n            </div>\r\n            <BackgroundImages />\r\n          </GetDemoContentContainer>\r\n        </GetDemoPageWrapper>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetDemoPage;\r\n"],"names":["GetDemoForm","_ref","formId","appContext","useContext","AppContext","useFetchHubSpotForms","hubSpot","isHubSpotFormsLoaded","setIsHubSpotFormsLoaded","useEffect","_window$hbspt","window","hbspt","forms","create","region","portalId","target","onFormSubmit","gtag_report_conversion","onFormReady","form","gclidField","querySelector","id","React","StyledGetDemoFormContainer","ClipLoader","color","colors","styled","displayName","componentId","device","StyledGetDemoContainer","TableComponent","children","Table","Header","TableHeader","Body","TableBody","Row","TableRow","HeaderCell","TableHeaderCell","BodyCell","TableBodyCell","Container","TableContainer","Wrapper","TableWrapper","opacityToHex","props","isLight","Input","_props$textAlign","textAlign","onChange","initialValue","disabled","value","setValue","useState","String","handleChange","currentTarget","event","stringValue","toString","replace","isNaN","Number","number","num","addCommas","type","onInput","maxLength","onFocus","e","select","GetDemoBackgroundImagesWrapper","GetDemoBackgroundImages","GetDemoPageWrapper","GetDemoContentContainer","GetDemoPageHeader","BackgroundImages","StaticImage","src","placeholder","alt","__imageData","require","GetDemoPage","observe","inView","useInView","MetaData","title","description","GatsbySeoComponent","canonicalUrl","TopLevelPageJSONLDSchemas","url","Layout","disabledContainer","Text","ref"],"sourceRoot":""}