{"version":3,"file":"component---src-pages-glossary-tsx-f3bae8ef30ead7164cb8.js","mappings":"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","sources":["webpack://landing/./src/components/common/Text/index.tsx","webpack://landing/./src/components/glossary/styled.ts","webpack://landing/./src/hooks/useOnKeyDown.tsx","webpack://landing/./src/pages/glossary.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { device } from '../../../utils/layoutBreakpoints';\nimport { colors } from '../../../utils/colors';\n\nexport const SectionTitleText = styled.h2`\n  font-size: 32px;\n  font-family: 'Poppins';\n  font-weight: 600;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 52px;\n    line-height: 64.1px;\n  }\n`;\n\nexport const TitleBoldMedium = styled.h2`\n  color: ${colors.primary.black};\n  font-size: 22px;\n  font-family: 'Poppins';\n  font-weight: 600;\n  line-height: 28px;\n\n  @media ${device.laptop} {\n    font-size: 32px;\n    line-height: 38px;\n  }\n`;\n\nconst TitleBoldSmall = styled(TitleBoldMedium)`\n  font-size: 18px;\n  line-height: 24px;\n\n  @media ${device.laptop} {\n    font-size: 22px;\n    line-height: 28px;\n  }\n`;\n\nconst TitleBoldExtraSmall = styled(TitleBoldMedium)`\n  font-size: 14px;\n  line-height: 20px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nconst TitleBoldLarge = styled.h2`\n  color: ${colors.primary.black};\n  font-size: 26px;\n  font-family: 'Poppins';\n  font-weight: 700;\n  line-height: 32px;\n\n  @media ${device.laptop} {\n    font-size: 40px;\n    line-height: 48px;\n  }\n`;\n\nconst TitleNormalLarge = styled(TitleBoldLarge)`\n  font-weight: 400;\n`;\n\nconst TitleNormalMedium = styled(TitleBoldMedium)`\n  font-weight: 400;\n`;\n\nconst TitleBoldExtraLarge = styled.h1`\n  color: ${colors.primary.black};\n  font-size: 32px;\n  font-family: 'Poppins';\n  font-weight: 700;\n  line-height: 38px;\n  letter-spacing: -0.5px;\n\n  @media ${device.laptop} {\n    font-size: 48px;\n    line-height: 52px;\n  }\n`;\n\nexport const RegularNormalExtraSmall = styled.span`\n  color: ${colors.primary.black};\n  font-size: 12px;\n  font-family: 'Rubik';\n  font-weight: 400;\n  line-height: 14px;\n\n  @media ${device.laptop} {\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nexport const RegularNormalSmall = styled.span`\n  color: ${colors.primary.black};\n  font-size: 14px;\n  font-family: 'Rubik';\n  font-weight: 400;\n  line-height: 16px;\n\n  @media ${device.laptop} {\n    font-size: 16px;\n    line-height: 20px;\n  }\n`;\n\nconst RegularNormalMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 400;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nconst RegularNormalLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 18px;\n  font-family: 'Rubik';\n  font-weight: 400;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 20px;\n    line-height: 24px;\n  }\n`;\n\nconst RegularBoldMedium = styled.span<{ color?: string }>`\n  color: ${(props) => props.color ?? colors.primary.black};\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 20px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\n\nexport const RegularBoldExtraSmall = styled.span<{ color?: string }>`\n  color: ${(props) => props.color ?? colors.primary.black};\n  font-size: 12px;\n  font-family: 'Rubik';\n  font-weight: 600;\n  line-height: 14px;\n\n  @media ${device.laptop} {\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nconst RegularBoldSmall = styled(RegularBoldMedium)`\n  font-size: 12px;\n  font-family: 'Rubik';\n  line-height: 14px;\n\n  @media ${device.laptop} {\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nexport const RegularBoldLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 18px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 24px;\n\n  @media ${device.laptop} {\n    font-size: 20px;\n    line-height: 24px;\n  }\n`;\n\nexport const RegularBoldExtraLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 28px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 32px;\n    line-height: 40px;\n  }\n`;\n\nconst RegularExtraBoldMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 700;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nconst RegularExtraBoldLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 18px;\n  font-family: 'Rubik';\n  font-weight: 700;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 20px;\n    line-height: 24px;\n  }\n`;\n\nconst TitleNormalSmall = styled(TitleNormalMedium)`\n  font-size: 18px;\n  font-weight: 400;\n  line-height: 24px;\n\n  @media ${device.laptop} {\n    font-size: 26px;\n    line-height: 32px;\n  }\n`;\n\nexport const Text = {\n  Title: {\n    Normal: {\n      sm: TitleNormalSmall,\n      md: TitleNormalMedium,\n      lg: TitleNormalLarge,\n    },\n    Bold: {\n      xs: TitleBoldExtraSmall,\n      sm: TitleBoldSmall,\n      md: TitleBoldMedium,\n      lg: TitleBoldLarge,\n      xl: TitleBoldExtraLarge,\n    },\n  },\n  Regular: {\n    Normal: {\n      xs: RegularNormalExtraSmall,\n      sm: RegularNormalSmall,\n      md: RegularNormalMedium,\n      lg: RegularNormalLarge,\n    },\n    Bold: {\n      xs: RegularBoldExtraSmall,\n      sm: RegularBoldSmall,\n      md: RegularBoldMedium,\n      lg: RegularBoldLarge,\n      xl: RegularBoldExtraLarge,\n    },\n    ExtraBold: {\n      sm: {},\n      md: RegularExtraBoldMedium,\n      lg: RegularExtraBoldLarge,\n    },\n  },\n};\n","import styled, { css } from 'styled-components';\nimport { colors } from '../../utils/colors';\nimport { device } from '../../utils/layoutBreakpoints';\nimport { Container } from '../common/Container/Container';\nimport { StyledTextInput } from '../common/Form/styled';\n\nexport const GlossaryPageContentContainer = styled(Container)`\n  max-width: 1000px;\n`;\n\nexport const HeroSection = styled.section`\n  background-color: ${colors.secondary.gray100};\n  box-sizing: border-box;\n  padding: 40px 20px;\n\n  @media ${device.laptop} {\n    height: 400px;\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n\n  ${GlossaryPageContentContainer} {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n`;\n\nexport const HeroInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  @media ${device.laptop} {\n    gap: 30px;\n  }\n`;\n\nexport const SearchIconContainer = styled.div`\n  position: absolute;\n  left: 20px;\n  top: calc(50% - 10px);\n`;\n\nexport const SearchButton = styled.button`\n  cursor: pointer;\n  position: absolute;\n  right: 10px;\n  top: calc(50% - 10px);\n  border: none;\n  background: none;\n  span {\n    color: ${colors.primary.blue};\n    font-weight: 600;\n  }\n  &:hover {\n    span {\n      color: ${colors.primary.lightOrange};\n    }\n  }\n`;\n\nexport const SearchContainer = styled.div`\n  position: relative;\n\n  svg {\n    width: 13px;\n    height: 13px;\n  }\n\n  ${StyledTextInput} {\n    padding-left: 40px;\n    padding-right: 80px;\n    height: 45px;\n    border-radius: 8px;\n    font-size: 12px;\n    &::placeholder {\n      color: ${colors.primary.gray500};\n      font-size: 0.9rem;\n    }\n    @media ${device.laptop} {\n      height: 60px;\n      padding-left: 50px;\n      font-size: 16px;\n    }\n  }\n\n  @media ${device.laptop} {\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n\nexport const Alphabet = styled.div`\n  padding: 50px 0;\n  display: none;\n  width: 100%;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  @media ${device.mobileL} {\n    justify-content: unset;\n  }\n  @media ${device.tablet} {\n    justify-content: space-between;\n  }\n  a {\n    h2 {\n      transition: 0.5s;\n      &:hover {\n        color: ${colors.secondary.orange};\n        transition: 0.5s;\n      }\n    }\n  }\n  @media ${device.laptop} {\n    display: flex;\n  }\n`;\n\nexport const TermsGroup = styled.div`\n  border-top: 1px solid ${colors.secondary.gray300};\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px 0;\n  @media ${device.tablet} {\n    padding: 60px 0;\n  }\n`;\n\nexport const TermsContainer = styled.div`\n  ${TermsGroup}:first-child {\n    border-top: none;\n  }\n  @media ${device.laptop} {\n    ${TermsGroup}:first-child {\n      border-top: 1px solid ${colors.secondary.gray300};\n    }\n  }\n`;\n\nexport const TermFirstLetter = styled.div``;\n\nexport const TermsList = styled.div<{ termsAmount: number }>`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  @media ${device.tablet} {\n    display: grid;\n    gap: 20px;\n  }\n  ${(props) =>\n    props.termsAmount > 2 &&\n    css`\n      a:nth-child(2) {\n        grid-column-start: 2;\n      }\n    `}\n  a > span {\n    transition: 0.5s;\n    &:hover {\n      color: ${colors.secondary.orange};\n      transition: 0.5s;\n    }\n  }\n`;\n","import { useCallback, useEffect } from 'react';\n\nconst useOnKeyDown = (\n  keyCode: string,\n  callback: () => void,\n  condition: boolean,\n) => {\n  const keyFunction = useCallback((event : KeyboardEvent) => {\n    if (event.code === keyCode) {\n      callback();\n    }\n  }, [callback]);\n\n  useEffect(() => {\n    if (condition) {\n      document.addEventListener('keydown', keyFunction);\n    }\n\n    return () => {\n      document.removeEventListener('keydown', keyFunction);\n    };\n  }, [keyFunction, condition]);\n};\n\nexport const useOnEnterDown = (\n  callback: () => void,\n  condition = true,\n) => useOnKeyDown('Enter', callback, condition);","import React, { useEffect, useState } from 'react';\nimport Layout from '../components/common/Layout/Layout';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport { mapTermNodeToGlossaryTerm } from '../mappers';\nimport { useLunr } from 'react-lunr';\nimport { GlossaryTerm } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport { Text } from '../components/common/Text';\nimport {\n  Alphabet,\n  GlossaryPageContentContainer,\n  HeroInfo,\n  HeroSection,\n  SearchButton,\n  SearchContainer,\n  SearchIconContainer,\n  TermFirstLetter,\n  TermsContainer,\n  TermsGroup,\n  TermsList,\n} from '../components/glossary/styled';\nimport { TextInput } from '../components/common/Form';\nimport SearchIcon from '../components/common/Icons/SearchIcon/SearchIcon';\nimport { NoResultsText } from '../components/common/styled';\nimport { useOnEnterDown } from '../hooks/useOnKeyDown';\n\nconst termsByAlphabetTemplate = JSON.stringify({\n  A: [],\n  B: [],\n  C: [],\n  D: [],\n  E: [],\n  F: [],\n  G: [],\n  H: [],\n  I: [],\n  J: [],\n  K: [],\n  L: [],\n  M: [],\n  N: [],\n  O: [],\n  P: [],\n  Q: [],\n  R: [],\n  S: [],\n  T: [],\n  U: [],\n  V: [],\n  W: [],\n  X: [],\n  Y: [],\n  Z: [],\n  '#': [],\n});\n\nconst GlossaryPage = ({ data }: PageProps<Queries.GlossaryPageQuery>) => {\n  const [tempSearchString, setTempSearchString] = useState('');\n  const [searchString, setSearchString] = useState<string>('');\n\n  const rawTerms: GlossaryTerm[] = React.useMemo(() => {\n    return data.allMdx.edges.map((edge) => mapTermNodeToGlossaryTerm(edge.node));\n  }, []);\n\n  const filteredTerms: GlossaryTerm[] = useLunr(\n    searchString.trim(),\n    data.localSearchTerms?.index,\n    data.localSearchTerms?.store,\n  ) as GlossaryTerm[];\n\n  const terms = searchString ? filteredTerms : rawTerms;\n\n  const getTermsForRender = () => {\n    const newState = { ...JSON.parse(termsByAlphabetTemplate) };\n    terms.forEach((term) => {\n      const firstLetter = term.title[0].toUpperCase();\n      if (newState[firstLetter as string]) {\n        newState[firstLetter as string]?.push(term);\n      } else {\n        newState['#'].push(term);\n      }\n    });\n    return newState;\n  };\n\n  const [termsByAlphabet, setTermsByAlphabet] = useState<Record<string, GlossaryTerm[]>>(\n    getTermsForRender(),\n  );\n\n  useEffect(() => {\n    setTermsByAlphabet(getTermsForRender());\n  }, [terms]);\n\n  const onSearchClick = () => {\n    setSearchString(tempSearchString);\n  };\n\n  useOnEnterDown(onSearchClick);\n\n  useEffect(() => {\n    if (!tempSearchString) {\n      setSearchString('');\n    }\n  }, [tempSearchString]);\n\n  return (\n    <>\n      <MetaData\n        title=\"Glossary | Telgorithm\"\n        description=\"Browse through our glossary for definitions to common terms in the A2P text messaging space.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/glossary/\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/glossary/\" />\n      <Layout disabledContainer>\n        <HeroSection>\n          <GlossaryPageContentContainer>\n            <HeroInfo>\n              <Text.Title.Bold.xl>Telgorithm’s Glossary</Text.Title.Bold.xl>\n              <Text.Regular.Bold.lg>\n                Browse through our glossary for definitions to common terms in the A2P\n                text messaging space.\n              </Text.Regular.Bold.lg>\n            </HeroInfo>\n            <SearchContainer>\n              <SearchIconContainer>\n                <SearchIcon></SearchIcon>\n              </SearchIconContainer>\n              <TextInput\n                value={tempSearchString}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setTempSearchString(e.currentTarget.value)\n                }\n              ></TextInput>\n              <SearchButton onClick={onSearchClick}>\n                <Text.Regular.Normal.xs>Search</Text.Regular.Normal.xs>\n              </SearchButton>\n            </SearchContainer>\n          </GlossaryPageContentContainer>\n        </HeroSection>\n        <GlossaryPageContentContainer>\n          <Alphabet>\n            {Object.keys(termsByAlphabet).map((letter) =>\n              termsByAlphabet[letter].length > 0 ? (\n                <Link to={`#terms_${letter}`} key={letter}>\n                  <Text.Title.Bold.md key={letter}>{letter}</Text.Title.Bold.md>\n                </Link>\n              ) : (\n                <Text.Title.Bold.md key={letter}>{letter}</Text.Title.Bold.md>\n              ),\n            )}\n          </Alphabet>\n          {terms.length ? (\n            <TermsContainer>\n              {Object.keys(termsByAlphabet)\n                .filter((letter) => termsByAlphabet[letter].length)\n                .map((letter) => (\n                  <TermsGroup key={letter} id={`terms_${letter}`}>\n                    <TermFirstLetter>\n                      <Text.Title.Bold.md>{letter}</Text.Title.Bold.md>\n                    </TermFirstLetter>\n                    <TermsList termsAmount={termsByAlphabet[letter].length}>\n                      {termsByAlphabet[letter].map((item) => (\n                        <Link to={item.url} key={item.id}>\n                          <Text.Regular.Normal.md>{item.title}</Text.Regular.Normal.md>\n                        </Link>\n                      ))}\n                    </TermsList>\n                  </TermsGroup>\n                ))}\n            </TermsContainer>\n          ) : (\n            <NoResultsText>No results for \"{searchString}\"</NoResultsText>\n          )}\n        </GlossaryPageContentContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default GlossaryPage;\n\nexport const query = graphql`\n  query GlossaryPage {\n    localSearchTerms {\n      index\n      store\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"//terms//\" } } }\n      sort: {frontmatter: {title: ASC}}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["SectionTitleText","styled","displayName","componentId","device","TitleBoldMedium","colors","TitleBoldSmall","withConfig","TitleBoldExtraSmall","TitleBoldLarge","TitleNormalLarge","TitleNormalMedium","TitleBoldExtraLarge","RegularNormalExtraSmall","RegularNormalSmall","RegularNormalMedium","RegularNormalLarge","RegularBoldMedium","props","_props$color","color","RegularBoldExtraSmall","_props$color2","RegularBoldSmall","RegularBoldLarge","RegularBoldExtraLarge","RegularExtraBoldMedium","RegularExtraBoldLarge","Text","Title","Normal","sm","md","lg","Bold","xs","xl","Regular","ExtraBold","GlossaryPageContentContainer","Container","HeroSection","HeroInfo","SearchIconContainer","SearchButton","SearchContainer","StyledTextInput","Alphabet","TermsGroup","TermsContainer","TermFirstLetter","TermsList","termsAmount","css","useOnEnterDown","callback","condition","useOnKeyDown","keyCode","keyFunction","useCallback","event","code","useEffect","document","addEventListener","removeEventListener","termsByAlphabetTemplate","JSON","stringify","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","_ref","_data$localSearchTerm","_data$localSearchTerm2","data","tempSearchString","setTempSearchString","useState","searchString","setSearchString","rawTerms","React","allMdx","edges","map","edge","mapTermNodeToGlossaryTerm","node","filteredTerms","useLunr","trim","localSearchTerms","index","store","terms","getTermsForRender","newState","parse","forEach","term","firstLetter","title","toUpperCase","_newState","push","termsByAlphabet","setTermsByAlphabet","onSearchClick","MetaData","description","TopLevelPageJSONLDSchemas","url","GatsbySeoComponent","canonicalUrl","Layout","disabledContainer","SearchIcon","TextInput","value","onChange","e","currentTarget","onClick","Object","keys","letter","length","Link","to","key","filter","id","item","NoResultsText"],"sourceRoot":""}