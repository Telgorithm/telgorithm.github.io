{"version":3,"file":"component---src-pages-product-tsx-c6d89474ee1f0b08d1a4.js","mappings":"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","sources":["webpack://landing/./src/components/common/Icons/Arrows/RightArrow.tsx","webpack://landing/./src/components/common/Icons/SuccessCircleEmptyIcon/index.tsx","webpack://landing/./src/components/common/Link/styled.ts","webpack://landing/./src/components/common/Link/index.tsx","webpack://landing/./src/components/common/Icons/DislikeIcon/index.tsx","webpack://landing/./src/components/home/Clients.tsx","webpack://landing/./src/components/common/LinkWithArrow/LinkWithArrow.tsx","webpack://landing/./src/components/product/styled.ts","webpack://landing/./src/components/product/index.tsx","webpack://landing/./src/pages/product.tsx","webpack://landing/./node_modules/shortid/index.js","webpack://landing/./node_modules/shortid/lib/alphabet.js","webpack://landing/./node_modules/shortid/lib/build.js","webpack://landing/./node_modules/shortid/lib/generate.js","webpack://landing/./node_modules/shortid/lib/index.js","webpack://landing/./node_modules/shortid/lib/is-valid.js","webpack://landing/./node_modules/shortid/lib/random/random-byte-browser.js","webpack://landing/./node_modules/shortid/lib/random/random-from-seed.js","webpack://landing/./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack://landing/./node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import React from \"react\";\nimport {SvgProps} from \"../../../../types\";\n\nconst RightArrow = ({ color } : SvgProps) => {\n  return (\n    <svg\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M18.5371 14.1121L13.2371 8.81213C13.1209 8.69497 12.9827 8.60198 12.8303 8.53852C12.678 8.47506 12.5146 8.44238 12.3496 8.44238C12.1846 8.44238 12.0212 8.47506 11.8689 8.53852C11.7166 8.60198 11.5783 8.69497 11.4621 8.81213C11.2293 9.04633 11.0986 9.36315 11.0986 9.69338C11.0986 10.0236 11.2293 10.3404 11.4621 10.5746L15.8871 14.9996L11.4621 19.4246C11.2293 19.6588 11.0986 19.9756 11.0986 20.3059C11.0986 20.6361 11.2293 20.9529 11.4621 21.1871C11.5789 21.303 11.7174 21.3946 11.8697 21.4568C12.022 21.5191 12.1851 21.5506 12.3496 21.5496C12.5141 21.5506 12.6772 21.5191 12.8295 21.4568C12.9818 21.3946 13.1203 21.303 13.2371 21.1871L18.5371 15.8871C18.6543 15.7709 18.7473 15.6327 18.8107 15.4804C18.8742 15.328 18.9069 15.1646 18.9069 14.9996C18.9069 14.8346 18.8742 14.6712 18.8107 14.5189C18.7473 14.3666 18.6543 14.2283 18.5371 14.1121Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default RightArrow;\n","import React from 'react';\n\nconst SuccessCircleEmptyIcon = () => {\n  return (\n    <svg\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.3203 24.7617C10.6484 24.7617 9.07422 24.4414 7.59766 23.8008C6.12109 23.168 4.82031 22.2891 3.69531 21.1641C2.57031 20.0391 1.6875 18.7422 1.04688 17.2734C0.414062 15.7969 0.0976562 14.2188 0.0976562 12.5391C0.0976562 10.8672 0.414062 9.29688 1.04688 7.82812C1.6875 6.35156 2.56641 5.05078 3.68359 3.92578C4.80859 2.80078 6.10938 1.92188 7.58594 1.28906C9.0625 0.648437 10.6367 0.328125 12.3086 0.328125C13.9805 0.328125 15.5547 0.648437 17.0312 1.28906C18.5156 1.92188 19.8164 2.80078 20.9336 3.92578C22.0586 5.05078 22.9414 6.35156 23.582 7.82812C24.2227 9.29688 24.543 10.8672 24.543 12.5391C24.543 14.2188 24.2227 15.7969 23.582 17.2734C22.9414 18.7422 22.0586 20.0391 20.9336 21.1641C19.8164 22.2891 18.5195 23.168 17.043 23.8008C15.5664 24.4414 13.9922 24.7617 12.3203 24.7617ZM12.3203 22.0781C13.6406 22.0781 14.875 21.832 16.0234 21.3398C17.1797 20.8477 18.1953 20.168 19.0703 19.3008C19.9453 18.4258 20.6289 17.4141 21.1211 16.2656C21.6133 15.1094 21.8594 13.8672 21.8594 12.5391C21.8594 11.2188 21.6094 9.98438 21.1094 8.83594C20.6172 7.67969 19.9336 6.66406 19.0586 5.78906C18.1914 4.91406 17.1797 4.23047 16.0234 3.73828C14.875 3.24609 13.6367 3 12.3086 3C10.9883 3 9.75 3.24609 8.59375 3.73828C7.44531 4.23047 6.43359 4.91406 5.55859 5.78906C4.69141 6.66406 4.01172 7.67969 3.51953 8.83594C3.03516 9.98438 2.79297 11.2188 2.79297 12.5391C2.79297 13.8672 3.03516 15.1094 3.51953 16.2656C4.01172 17.4141 4.69531 18.4258 5.57031 19.3008C6.44531 20.168 7.45703 20.8477 8.60547 21.3398C9.76172 21.832 11 22.0781 12.3203 22.0781ZM11.0547 18.1055C10.8281 18.1055 10.6211 18.0547 10.4336 17.9531C10.2539 17.8516 10.082 17.7031 9.91797 17.5078L7.21094 14.2266C6.99219 13.9531 6.88281 13.6758 6.88281 13.3945C6.88281 13.082 6.99219 12.8164 7.21094 12.5977C7.42969 12.3789 7.69141 12.2695 7.99609 12.2695C8.18359 12.2695 8.35156 12.3086 8.5 12.3867C8.64844 12.4648 8.79688 12.5938 8.94531 12.7734L11.0312 15.3984L15.4727 8.23828C15.7383 7.81641 16.0703 7.60547 16.4688 7.60547C16.7656 7.60547 17.0312 7.70312 17.2656 7.89844C17.5 8.09375 17.6172 8.34766 17.6172 8.66016C17.6172 8.79297 17.5859 8.92969 17.5234 9.07031C17.4688 9.21094 17.3984 9.34766 17.3125 9.48047L12.168 17.4961C11.8945 17.9023 11.5234 18.1055 11.0547 18.1055Z\"\n        fill=\"#2CBF6D\"\n      />\n    </svg>\n  );\n};\n\nexport default SuccessCircleEmptyIcon;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { colors } from '../../../utils/colors';\nimport { device } from '../../../utils/layoutBreakpoints';\n\nexport const LinkElementExternal = styled.a<{ color?: string; inline?: boolean }>`\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 22px;\n  color: ${(props) => props.color ?? colors.primary.blue};\n  display: ${(props) => (props.inline ? 'inline' : 'flex')};\n  align-items: center;\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  transition: 0.5s;\n  &:hover {\n    color: ${colors.secondary.orange};\n    transition: 0.5s;\n  }\n`;\n\nexport const LinkElementInternal = styled(Link)<{ color?: string }>`\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 28px;\n  color: ${(props) => props.color ?? colors.primary.blue};\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  line-height: 22px;\n  transition: 0.5s;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  &:hover {\n    color: ${colors.secondary.orange};\n    transition: 0.5s;\n  }\n`;\n","import React, { PropsWithChildren } from 'react';\nimport { LinkElementInternal, LinkElementExternal } from './styled';\nimport RightArrow from '../Icons/Arrows/RightArrow';\nimport { colors } from '../../../utils/colors';\nimport shortid from 'shortid';\n\ntype LinkProps = PropsWithChildren<{\n  address: string;\n  arrow?: boolean;\n  external?: boolean;\n  color?: string;\n  inline?: boolean;\n}>;\n\nconst CustomLink = ({ address, arrow, children, external, color, inline }: LinkProps) => {\n  if (external) {\n    return (\n      <LinkElementExternal\n        href={address}\n        target=\"_blank\"\n        id={shortid.generate()}\n        color={color}\n        rel=\"noreferrer\"\n        inline={inline}\n      >\n        {children}\n        {arrow && <RightArrow color={color ?? colors.primary.blue} />}\n      </LinkElementExternal>\n    );\n  }\n\n  return (\n    <LinkElementInternal to={address} color={color}>\n      {children}\n      {arrow && <RightArrow color={color ?? colors.primary.blue} />}\n    </LinkElementInternal>\n  );\n};\n\nexport default CustomLink;\n","import React from 'react';\r\n\r\nconst DislikeIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"25\"\r\n      height=\"27\"\r\n      viewBox=\"0 0 25 27\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M24.709 9.18262C24.709 10.5498 24.4689 11.7909 23.9888 12.9058C23.5086 14.0207 22.8535 14.9077 22.0234 15.5669C21.1934 16.2261 20.2534 16.5557 19.2036 16.5557H17.2383C16.6279 17.3044 16.0583 18.0246 15.5293 18.7163C15.0085 19.3999 14.5202 20.0672 14.0645 20.7183C13.6087 21.3693 13.1815 22.0203 12.7827 22.6714C12.3921 23.3224 12.0177 23.9897 11.6597 24.6733C11.269 25.422 10.8499 25.9632 10.4023 26.2969C9.95475 26.6387 9.42578 26.8096 8.81543 26.8096C8.25391 26.8096 7.75342 26.6794 7.31396 26.4189C6.88265 26.1667 6.54085 25.8127 6.28857 25.3569C6.04443 24.9093 5.92236 24.3966 5.92236 23.8188C5.92236 23.241 6.01188 22.651 6.19092 22.0488C6.36995 21.4466 6.57747 20.8647 6.81348 20.3032C7.05762 19.7336 7.27327 19.2209 7.46045 18.7651C7.65576 18.3013 7.76562 17.9269 7.79004 17.6421C7.79818 17.5444 7.76969 17.4712 7.70459 17.4224C7.63949 17.3735 7.54997 17.3491 7.43604 17.3491H3.29785C2.67936 17.3491 2.12598 17.2026 1.6377 16.9097C1.15755 16.6167 0.775065 16.2261 0.490234 15.7378C0.205404 15.2495 0.0629883 14.7002 0.0629883 14.0898C0.0629883 13.3656 0.225749 12.7471 0.55127 12.2344C0.437337 12.0228 0.351888 11.7868 0.294922 11.5264C0.237956 11.266 0.209473 10.9974 0.209473 10.7207C0.209473 10.3057 0.278646 9.9069 0.416992 9.52441C0.555339 9.14193 0.75472 8.81234 1.01514 8.53564C0.860514 8.1613 0.783203 7.74626 0.783203 7.29053C0.783203 6.28141 1.18604 5.45133 1.9917 4.80029C1.91846 4.57243 1.88184 4.33236 1.88184 4.08008C1.88184 3.33952 2.13005 2.68441 2.62646 2.11475C3.13102 1.54508 3.80241 1.15446 4.64062 0.942871C5.05566 0.845215 5.56836 0.771973 6.17871 0.723145C6.78906 0.674316 7.46452 0.649902 8.20508 0.649902H9.77979C10.7645 0.649902 11.7004 0.755697 12.5874 0.967285C13.4826 1.17887 14.3127 1.47591 15.0776 1.8584H18.7764C19.8994 1.8584 20.9045 2.19206 21.7915 2.85938C22.6867 3.51855 23.3947 4.40153 23.9155 5.5083C24.4445 6.61507 24.709 7.83984 24.709 9.18262ZM17.519 9.29248C17.519 8.03923 17.1935 6.93245 16.5425 5.97217C15.8914 5.00374 14.9759 4.24691 13.7959 3.70166C12.6159 3.15641 11.2406 2.87972 9.66992 2.87158H8.36377C7.64762 2.86344 7.02507 2.87972 6.49609 2.92041C5.96712 2.9611 5.53988 3.02214 5.21436 3.10352C4.84814 3.20117 4.57959 3.33545 4.40869 3.50635C4.24593 3.67725 4.16455 3.87663 4.16455 4.10449C4.15641 4.22656 4.16455 4.33643 4.18896 4.43408C4.22152 4.53174 4.29069 4.71484 4.39648 4.9834C4.486 5.17871 4.50228 5.37809 4.44531 5.58154C4.38835 5.78499 4.25814 5.94368 4.05469 6.05762C3.39551 6.40755 3.06592 6.82666 3.06592 7.31494C3.06592 7.4777 3.09033 7.62826 3.13916 7.7666C3.19613 7.90495 3.28564 8.08398 3.40771 8.30371C3.52165 8.54785 3.54606 8.78792 3.48096 9.02393C3.42399 9.25993 3.28971 9.45524 3.07812 9.60986C2.65495 9.92725 2.44336 10.2975 2.44336 10.7207C2.44336 10.9079 2.47591 11.0788 2.54102 11.2334C2.61426 11.388 2.72819 11.5752 2.88281 11.7949C3.0293 11.9577 3.09033 12.1489 3.06592 12.3687C3.04964 12.5884 2.96012 12.7796 2.79736 12.9424C2.45557 13.2842 2.28467 13.6504 2.28467 14.041C2.28467 14.3503 2.38639 14.6066 2.58984 14.8101C2.79329 15.0135 3.05371 15.1152 3.37109 15.1152H7.41162C8.16846 15.1152 8.79508 15.3228 9.2915 15.7378C9.79606 16.1528 10.0483 16.7062 10.0483 17.3979C10.0483 17.87 9.95068 18.3826 9.75537 18.936C9.5682 19.4894 9.34847 20.0509 9.09619 20.6206C8.84391 21.1903 8.62012 21.7355 8.4248 22.2563C8.23763 22.7853 8.14404 23.2533 8.14404 23.6602C8.14404 23.9124 8.20508 24.1037 8.32715 24.2339C8.44922 24.3722 8.60791 24.4414 8.80322 24.4414C8.97412 24.4414 9.12467 24.3885 9.25488 24.2827C9.38509 24.1769 9.53564 23.9572 9.70654 23.6235C10.2681 22.4924 10.8866 21.4303 11.562 20.4375C12.2456 19.4447 12.9251 18.5169 13.6006 17.6543C14.2842 16.7835 14.9108 15.9657 15.4805 15.2007C15.985 14.5252 16.3838 13.8864 16.6768 13.2842C16.9779 12.682 17.1935 12.0635 17.3237 11.4287C17.4539 10.7939 17.519 10.0819 17.519 9.29248ZM22.5239 9.18262C22.5239 8.24674 22.3571 7.39225 22.0234 6.61914C21.6979 5.84603 21.2625 5.22754 20.7173 4.76367C20.1802 4.29167 19.5861 4.03532 18.9351 3.99463C18.7479 3.99463 18.5526 3.99463 18.3491 3.99463C18.1538 3.99463 17.9626 3.99463 17.7754 3.99463C18.4183 4.71077 18.9066 5.51644 19.2402 6.41162C19.582 7.3068 19.7529 8.26302 19.7529 9.28027C19.7529 10.2406 19.6634 11.1357 19.4844 11.9658C19.3053 12.7878 19.0205 13.5894 18.6299 14.3706C18.7682 14.3625 18.9025 14.3584 19.0327 14.3584C19.1711 14.3584 19.3053 14.3584 19.4355 14.3584C19.9889 14.3258 20.4976 14.0736 20.9614 13.6016C21.4334 13.1296 21.8118 12.5111 22.0967 11.7461C22.3815 10.973 22.5239 10.1185 22.5239 9.18262Z\"\r\n        fill=\"#FF4D49\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default DislikeIcon;\r\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Container } from '../common/Container/Container';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { device, size } from '../../utils/layoutBreakpoints';\nimport { colors, opacityToHex } from '../../utils/colors';\n\nconst StyledPartners = styled.section`\n  padding-top: 12px;\n  text-align: center;\n\n  @media ${device.laptop} {\n    padding-top: 10px;\n  }\n\n  .slick-track {\n    display: flex;\n    align-items: flex-end;\n    object-fit: contain;\n  }\n  .slick-slide {\n    margin: 0 10px;\n    box-sizing: border-box;\n  }\n`;\n\nconst Title = styled.h2`\n  font-size: 18px;\n  font-weight: 700;\n  text-align: center;\n  letter-spacing: -0.1px;\n  width: 100%;\n\n  @media ${device.laptop} {\n    text-align: left;\n    font-size: 20px;\n    width: auto;\n  }\n`;\n\nconst ClientsContent = styled.div`\n  display: flex;\n  align-items: center;\n  flex-flow: column wrap;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  background-color: ${colors.primary.black + opacityToHex[0.05]};\n  border-radius: 8px;\n  padding: 16px;\n  box-shadow: inset 0px 1px 40px ${colors.primary.black + opacityToHex[0.15]};\n  overflow: hidden;\n  max-width: 600px;\n  margin: 0 auto;\n  \n  @media ${device.laptop} {\n    max-width: unset;\n    margin: unset;\n  }\n\n  & > h2,\n  & > div {\n    transition: all 1s cubic-bezier(0.3, 1.5, 0.66, 1);\n  }\n\n  &.hide-logos {\n    & > h2,\n    & > div {\n      opacity: 0;\n      transform: translateX(80px);\n    }\n  }\n\n  & > div:nth-child(2) {\n    transition-delay: 0.125s;\n    img {\n      max-height: 26px;\n    }\n  }\n  & > div:nth-child(3) {\n    transition-delay: 0.25s;\n    img {\n      max-height: 20px;\n    }\n  }\n  & > div:nth-child(4) {\n\n    transition-delay: 0.375s;\n    img {\n      max-height: 24px;\n    }\n  }\n  & > div:nth-child(5) {\n    transition-delay: 0.5s;\n    img {\n      max-height: 18px;\n    }\n  }\n\n  @media ${device.laptop} {\n    justify-content: space-between;\n    flex-direction: row;\n    flex-wrap: no-wrap;\n    height: 64px;\n    padding: 0 6% 0 40px;\n\n    & > div:nth-child(2) {\n      img {\n        max-height: 38px;\n      }\n    }\n    & > div:nth-child(3) {\n      img {\n        max-height: 32px;\n      }\n    }\n    & > div:nth-child(4) {\n      img {\n        max-height: 40px;\n      }\n    }\n    & > div:nth-child(5) {\n      img {\n        max-height: 26px;\n      }\n    }\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  width: 45%;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n  padding: 20px 0 0 0;\n  img {\n    max-height: 50px;\n    user-select: none;\n    object-fit: contain;\n  }\n\n  @media ${device.laptop} {\n    width: auto;\n    padding: 0;\n  }\n`;\n\nconst Partners = () => {\n\n  const [animationClass, setAnimationClass] = useState<string>('hide-logos');\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setAnimationClass('');\n    }, 100);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return (\n    <StyledPartners>\n      <Container>\n        <ClientsContent className={animationClass} >\n          <Title>Trusted by Software Providers Like</Title>\n          <ImageWrapper>\n            <StaticImage\n              src=\"../../images/Logo/Clients/Constant-Contact.png\"\n              alt=\"Constant Contact logo\"\n              placeholder=\"none\"\n              objectFit=\"contain\"\n              height={38}\n            ></StaticImage>\n          </ImageWrapper>\n          <ImageWrapper>\n            <StaticImage\n              src=\"../../images/Logo/Clients/Boulevard.png\"\n              alt=\"Boulevard logo\"\n              placeholder=\"none\"\n              objectFit=\"contain\"\n              height={32}\n            ></StaticImage>\n          </ImageWrapper>\n          <ImageWrapper>\n            <StaticImage\n              src=\"../../images/Logo/Clients/Riptide.png\"\n              alt=\"Riptide logo\"\n              placeholder=\"none\"\n              objectFit=\"contain\"\n              height={30}\n            ></StaticImage>\n          </ImageWrapper>\n          <ImageWrapper>\n            <StaticImage\n              src=\"../../images/Logo/Clients/Walla.png\"\n              alt=\"Walla logo\"\n              placeholder=\"none\"\n              objectFit=\"contain\"\n              height={26}\n            ></StaticImage>\n          </ImageWrapper>\n        </ClientsContent>\n      </Container>\n    </StyledPartners>\n  );\n};\n\nexport default Partners;\n","import { GatsbyLinkProps, Link } from \"gatsby\";\nimport React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\nimport RightArrow from \"../Icons/Arrows/RightArrow\";\n\ntype CustomGatsbyLinkProps = Omit<GatsbyLinkProps<{}>, \"ref\"> & {\n  color?: string;\n  disabled?: boolean;\n};\n\nconst StyledLinkWithArrow = styled(Link)<CustomGatsbyLinkProps>`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${(props) => props.color ?? colors.primary.blue};\n  display: flex;\n  align-items: center;\n  filter: ${(props) => props.disabled ? \"grayscale()\" : \"none\"};\n  transition: 0.5s;\n  &:hover {\n    transition: 0.5s;\n    color: ${(props) => props.disabled ? props.color ?? colors.primary.blue : colors.secondary.orange};\n  }\n`;\n\nconst LinkWithArrow: FC<CustomGatsbyLinkProps> = (props) => {\n  return (\n    <StyledLinkWithArrow {...props}>\n      {props.children}\n      <RightArrow color={props.color ?? colors.primary.blue }/>\n    </StyledLinkWithArrow>\n  );\n};\n\nexport default LinkWithArrow;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { colors } from '../../utils/colors';\nimport { device } from '../../utils/layoutBreakpoints';\nimport { Text } from '../common/Text';\nimport { PrimaryButton } from '../common/Buttons/Buttons';\n\nexport const HeroSection = styled.section`\n  background-color: ${colors.secondary.azureishWhite};\n  padding-bottom: 80px;\n  @media ${device.laptop} {\n    padding-top: 40px;\n    padding-bottom: 120px;\n  }\n  @media ${device.desktop} {\n    padding-bottom: 230px;\n  }\n\n  img {\n    user-select: none;\n  }\n`;\n\nexport const HeroInfo = styled.div`\n  padding-top: 40px;\n  text-align: center;\n  font-family: 'Rubik';\n  display: flex;\n  flex-direction: column;\n  transition: all 0.3s;\n\n  gap: 50px;\n\n  @media ${device.laptop} {\n    flex-direction: row;\n    justify-content: space-between;\n    text-align: left;\n    h1 {\n      font-size: 2rem;\n    }\n  }\n\n  @media ${device.desktop} {\n    flex-direction: row;\n    justify-content: space-between;\n    text-align: left;\n    h1 {\n      font-size: 2.5rem;\n    }\n  }\n\n  p {\n    line-height: 1.2rem;\n    font-weight: 500;\n  }\n  button {\n    align-self: center;\n    border-radius: 10px;\n    height: 50px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  & > p:first-child {\n    font-size: 0.8rem;\n    font-weight: 700;\n    @media ${device.laptop} {\n      font-size: 1.2rem;\n    }\n  }\n  @media ${device.laptop} {\n    margin-left: 0;\n    width: 100%;\n    gap: 25px;\n  }\n`;\n\nexport const LinksWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  margin-top: 15px;\n  position: relative;\n  z-index: 1;\n  button {\n    width: 100%;\n  }\n  & > div:first-child {\n    width: 80%;\n  }\n\n  @media ${device.mobileL} {\n    & > div:first-child {\n      width: 50vw;\n    }\n  }\n  @media ${device.tablet} {\n    & > div:first-child {\n      width: 50%;\n    }\n  }\n  @media ${device.laptop} {\n    flex-direction: row;\n    gap: 50px;\n    & > div:first-child {\n      width: 40%;\n    }\n  }\n`;\n\nexport const DesktopHeroImage = styled.div`\n  position: relative;\n  display: none;\n\n  @media ${device.laptop} {\n    display: block;\n    top: 100px;\n    width: 90%;\n    left: -70px;\n    top: 20px;\n    transform: scale(1.3);\n  }\n\n  @media ${device.desktop} {\n    top: 100px;\n    width: 90%;\n    left: -40px;\n    top: 10px;\n    transform: scale(1.2);\n  }\n`;\n\nexport const MobileHeroImage = styled.div`\n  display: block;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 25px;\n  div {\n    max-width: 80%;\n  }\n  @media ${device.tablet} {\n    div {\n      max-width: 60%;\n    }\n  }\n\n  @media ${device.laptop} {\n    display: none;\n  }\n`;\n\nexport const SolvedProblemsSection = styled.section`\n  background-color: ${colors.secondary.gray100};\n  img {\n    user-select: none;\n  }\n\n  padding-bottom: 80px;\n\n  @media ${device.desktop} {\n    margin-bottom: -80px;\n  }\n`;\n\nexport const SolvedProblemsContainter = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  gap: 50px;\n  padding: 25px 25px 40px 25px;\n  background-color: ${colors.primary.white};\n  border-radius: 16px;\n  justify-content: center;\n  position: relative;\n  top: -50px;\n  box-shadow: 0px 20px 60px 0px #282a3b;\n  align-items: center;\n\n  @media ${device.laptop} {\n    padding: 50px 50px;\n    top: -70px;\n  }\n\n  @media ${device.desktop} {\n    top: -170px;\n    padding: 50px 100px;\n    gap: 50px;\n  }\n`;\n\nexport const SolvedProblemItem = styled.div`\n  display: flex;\n  gap: 15px;\n  width: 100%;\n  justify-content: flex-start;\n  align-items: center;\n  text-align: left;\n  span {\n    width: 80%;\n  }\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n  div {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n\n  @media ${device.tablet} {\n    span {\n      width: 90%;\n    }\n  }\n`;\n\nexport const SolvedProblemsTable = styled.table`\n  border-collapse: collapse;\n  display: none;\n  td {\n    height: 75px;\n    box-sizing: border-box;\n    padding: 15px 25px;\n    border: 1px solid ${colors.secondary.gray300};\n    vertical-align: middle;\n  }\n\n  tr:first-child {\n    td {\n      border-top: 0;\n    }\n  }\n\n  tr {\n    td:first-child {\n      border-left: 0;\n    }\n    td:last-child {\n      border-right: 0;\n    }\n  }\n\n  tr:last-child {\n    td {\n      border-bottom: 0;\n    }\n  }\n\n  @media ${device.laptop} {\n    display: table;\n  }\n`;\n\nexport const SolvedProblemsItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  & > div {\n    text-align: left;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 25px;\n  }\n`;\n\nexport const SolvedProblemsTitle = styled.div`\n  width: 100%;\n  font-weight: 700;\n  text-align: left;\n  h2 {\n    font-size: 32px;\n    line-height: 36px;\n  }\n  @media ${device.laptop} {\n    text-align: center;\n  }\n`;\n\nexport const SolvedProblemsFooterNote = styled.p`\n  width: 100%;\n  text-align: left;\n  @media ${device.laptop} {\n    text-align: center;\n    width: 65%;\n    span {\n      font-size: 24px;\n      line-height: 32px;\n    }\n  }\n`;\n\nexport const ProductFeauturesSection = styled.section`\n  background-color: ${colors.primary.white};\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding: 50px 25px 0 25px;\n  img {\n    user-select: none;\n  }\n  @media ${device.laptop} {\n    padding: 50px 50px 0 50px;\n  }\n`;\n\nexport const ProductFeatureHeader = styled.div`\n  text-align: left;\n  margin-bottom: 20px;\n  h2 {\n    font-weight: 700;\n  }\n  h2 {\n    font-size: 32px;\n    line-height: 38px;\n  }\n  @media ${device.tablet} {\n    text-align: center;\n  }\n  @media ${device.laptop} {\n    h2 {\n      font-size: 44px;\n      line-height: 60px;\n    }\n  }\n`;\n\nexport const ProductFeatureImage = styled.div`\n  width: 30%;\n  img {\n    max-width: 100%;\n  }\n`;\n\nexport const ProductFeatureDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  ${Text.Regular.Normal.xs} {\n    color: ${colors.primary.gray500};\n  }\n`;\n\nexport const ProductFeature = styled.div`\n  padding: 40px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n  border-bottom: 1px solid ${colors.secondary.gray300};\n  ${ProductFeatureImage} {\n    display: none;\n  }\n  ${ProductFeatureDescription} {\n    width: 100%;\n  }\n  @media ${device.tablet} {\n    ${ProductFeatureDescription} {\n      width: 50%;\n    }\n    ${ProductFeatureImage} {\n      display: block;\n    }\n  }\n  @media ${device.laptop} {\n    padding: 20px 0;\n    ${ProductFeatureDescription} {\n      width: 60%;\n    }\n  }\n`;\n\nexport const ProductFeaturesItemsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  ${ProductFeature}:nth-child(2n) {\n    flex-direction: row-reverse;\n  }\n  ${ProductFeature}:last-child {\n    border: none;\n  }\n`;\n\nexport const UseCasesSection = styled.section`\n  background-color: ${colors.secondary.azureishWhite};\n  & > div {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n  padding: 25px 0;\n  @media ${device.laptop} {\n    padding: 50px 0;\n  }\n`;\n\nexport const UseCases = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 10px;\n  li {\n    &:before {\n      display: inline-block;\n      content: '';\n      width: 8px;\n      height: 8px;\n      background-color: ${colors.secondary.orange};\n      margin-right: 10px;\n      border-radius: 50%;\n    }\n  }\n`;\n\nexport const HighlitedText = styled.span`\n  display: inline-block;\n  color: ${colors.primary.white};\n  padding: 0 5px;\n  background-color: ${colors.secondary.green};\n`;\n\nexport const SolvedProblemsMobileSlider = styled.div`\n  width: 100%;\n  .slick-prev:before,\n  .slick-next:before {\n    font-size: 30px;\n    color: ${colors.primary.gray500};\n  }\n  .slick-prev {\n    left: -20px;\n  }\n\n  .slick-next {\n    right: -20px;\n  }\n\n  .slick-arrow {\n    top: 300px;\n    width: 35px;\n    height: 35px;\n  }\n\n  @media ${device.tablet} {\n    .slick-arrow {\n      top: 220px;\n    }\n  }\n\n  @media ${device.laptop} {\n    display: none;\n  }\n`;\n\nexport const SolvedProblemSlideContainer = styled.div`\n  width: 100%;\n`;\n\nexport const SolvedProblemSlide = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 0px 10px;\n  border-radius: 8px;\n  align-items: flex-start;\n  height: 300px;\n  @media ${device.tablet} {\n    height: 200px;\n  }\n  & > div {\n    height: 150px;\n    width: 100%;\n    padding-top: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 15px;\n    &:first-child {\n      border-bottom: 1px solid ${colors.secondary.gray300};\n    }\n    @media ${device.tablet} {\n      height: 100px;\n    }\n  }\n`;\n\nexport const ClientsContainer = styled.div`\n  position: relative;\n  @media ${device.laptop} {\n    bottom: 10px;\n  }\n  @media ${device.desktop} {\n    bottom: 100px;\n  }\n`;\n\nexport const FooterButtonsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 50px;\n  margin-top: 50px;\n  width: 100%;\n`;\n\nexport const ActionFooterButtonsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  @media ${device.tablet} {\n    flex-direction: row;\n    gap: 50px;\n  }\n  align-items: center;\n`;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React, { FC } from 'react';\nimport { InternalLinks } from '../../utils/links';\nimport { PrimaryButton } from '../common/Buttons/Buttons';\nimport { Container } from '../common/Container/Container';\nimport LinkWithArrow from '../common/LinkWithArrow/LinkWithArrow';\nimport { Text } from '../common/Text';\nimport {\n  HeroSection,\n  HeroInfo,\n  Wrapper,\n  LinksWrapper,\n  DesktopHeroImage,\n  ActionFooterButtonsWrapper,\n} from './styled';\nimport { Link } from 'gatsby';\n\nexport const ProductPageHeroSection: FC = () => {\n  return (\n    <HeroSection>\n      <Container>\n        <HeroInfo>\n          <Wrapper>\n            <Text.Title.Bold.xl>\n              Next Gen SMS & MMS API for Software Platforms\n            </Text.Title.Bold.xl>\n            <p>\n              <Text.Regular.Bold.lg>\n                The only API to automate A2P texting compliance & message management for\n                <Text.Regular.ExtraBold.lg>\n                  &nbsp;99% deliverability.\n                </Text.Regular.ExtraBold.lg>\n              </Text.Regular.Bold.lg>\n            </p>\n            <ActionHeroButtons />\n          </Wrapper>\n          <DesktopHeroImage>\n            <StaticImage\n              src={'../../images/Product/laptop.png'}\n              alt=\"Laptop\"\n              placeholder=\"none\"\n            ></StaticImage>\n          </DesktopHeroImage>\n        </HeroInfo>\n      </Container>\n    </HeroSection>\n  );\n};\n\nexport const ActionHeroButtons = () => {\n  return (\n    <LinksWrapper>\n      <div>\n        <Link to={InternalLinks.PaygTrial}>\n          <PrimaryButton>Request a Trial</PrimaryButton>\n        </Link>\n      </div>\n      <p>\n        <LinkWithArrow to=\"#unique-product-features\">\n          Browse product features\n        </LinkWithArrow>\n      </p>\n    </LinksWrapper>\n  );\n};\n\nexport const ActionFooterButtons = () => {\n  return (\n    <ActionFooterButtonsWrapper>\n      <div>\n        <Link to={InternalLinks.PaygTrial}>\n          <PrimaryButton>Request a Trial</PrimaryButton>\n        </Link>\n      </div>\n      <p>\n        <LinkWithArrow to={InternalLinks.Pricing}>See Pricing</LinkWithArrow>\n      </p>\n    </ActionFooterButtonsWrapper>\n  );\n};\n","import { StaticImage } from 'gatsby-plugin-image';\nimport * as React from 'react';\nimport Slider from 'react-slick';\nimport { Text } from '../components/common';\nimport { Container } from '../components/common/Container/Container';\nimport DislikeIcon from '../components/common/Icons/DislikeIcon/';\nimport SuccessCircleEmptyIcon from '../components/common/Icons/SuccessCircleEmptyIcon';\nimport Layout from '../components/common/Layout/Layout';\nimport CustomLink from '../components/common/Link';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport Clients from '../components/home/Clients';\nimport { ActionFooterButtons, ProductPageHeroSection } from '../components/product';\nimport {\n  ClientsContainer,\n  FooterButtonsContainer,\n  ProductFeature,\n  ProductFeatureDescription,\n  ProductFeatureHeader,\n  ProductFeatureImage,\n  ProductFeaturesItemsWrapper,\n  ProductFeauturesSection,\n  SolvedProblemItem,\n  SolvedProblemSlide,\n  SolvedProblemSlideContainer,\n  SolvedProblemsContainter,\n  SolvedProblemsMobileSlider,\n  SolvedProblemsSection,\n  SolvedProblemsTable,\n  SolvedProblemsTitle,\n  UseCases,\n  UseCasesSection,\n} from '../components/product/styled';\nimport { StaticPageFrontmatter } from '../types/StaticPageFrontmatter';\n\ntype SolvedProblem = {\n  problem: string;\n  solution: string;\n};\n\nconst solvedProblems: SolvedProblem[] = [\n  {\n    problem: 'Unreliable SMS/MMS Message Deliverability',\n    solution: 'Rate Limit Management (Smart Queueing) for 99% Deliverability on Average',\n  },\n  {\n    problem: 'Slow, Manual TCR Registration for 10DLC',\n    solution: 'Automated TCR 10DLC Registration as a Campaign Service Provider (CSP)',\n  },\n  {\n    problem: 'Disruptions Caused by Brand or Campaign Rejections on 10DLC',\n    solution:\n      'Expedited Campaign Vetting Approvals & Expert Guidance to Solve for & Avoid Rejections',\n  },\n  {\n    problem: 'General Lack of Support or Guidance',\n    solution: 'Free On-Demand Customer Support from Industry Experts',\n  },\n  {\n    problem: 'High Overhead, High Cost API Integration',\n    solution: 'Fast & Easy API Integration for Zero Disruptions',\n  },\n  {\n    problem: 'Customer Disruptions While Porting/Migrating Active Phone Numbers',\n    solution: 'Automated Number Porting for Instant & In-Bulk Number Migration',\n  },\n  {\n    problem: 'High Cost of Switching API Providers',\n    solution: 'Competitive Per-message Pricing',\n  },\n];\n\nconst ProductPage = () => {\n  const settings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: false,\n    arrows: true,\n  };\n\n  const title = 'SMS & MMS Text Messaging API for Software Platforms | Telgorithm';\n\n  return (\n    <>\n      <MetaData\n        title={title}\n        description=\"Automate the A2P 10DLC journey and experience guaranteed message deliverability.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/product/\" />\n      <GatsbySeoComponent\n        title={title}\n        canonicalUrl=\"https://www.telgorithm.com/product/\"\n      />\n      <Layout disabledContainer>\n        <ProductPageHeroSection />\n        <SolvedProblemsSection>\n          <Container>\n            <SolvedProblemsContainter>\n              <SolvedProblemsTable>\n                <tbody>\n                  <tr>\n                    <td>\n                      <SolvedProblemsTitle>\n                        <Text.Title.Bold.md>If you’ve experienced…</Text.Title.Bold.md>\n                      </SolvedProblemsTitle>\n                    </td>\n                    <td>\n                      <SolvedProblemsTitle>\n                        <Text.Title.Bold.md>\n                          Telgorithm can solve with…\n                        </Text.Title.Bold.md>\n                      </SolvedProblemsTitle>\n                    </td>\n                  </tr>\n                  {solvedProblems.map((item) => (\n                    <tr key={item.problem}>\n                      <td>\n                        <SolvedProblemItem>\n                          <DislikeIcon />\n                          <Text.Regular.Normal.md>{item.problem}</Text.Regular.Normal.md>\n                        </SolvedProblemItem>\n                      </td>\n                      <td>\n                        <SolvedProblemItem>\n                          <SuccessCircleEmptyIcon />\n                          <Text.Regular.Normal.md>{item.solution}</Text.Regular.Normal.md>\n                        </SolvedProblemItem>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </SolvedProblemsTable>\n              <SolvedProblemsMobileSlider>\n                <Slider {...settings}>\n                  {solvedProblems.map((item) => (\n                    <SolvedProblemSlideContainer key={item.problem}>\n                      <SolvedProblemSlide>\n                        <div>\n                          <Text.Regular.Bold.lg>\n                            If you’ve experienced…\n                          </Text.Regular.Bold.lg>\n                          <SolvedProblemItem>\n                            <DislikeIcon />\n                            <Text.Regular.Normal.md>\n                              {item.problem}\n                            </Text.Regular.Normal.md>\n                          </SolvedProblemItem>\n                        </div>\n                        <div>\n                          <Text.Regular.Bold.lg>\n                            Telgorithm can solve with...\n                          </Text.Regular.Bold.lg>\n                          <SolvedProblemItem>\n                            <SuccessCircleEmptyIcon />\n                            <Text.Regular.Normal.md>\n                              {item.solution}\n                            </Text.Regular.Normal.md>\n                          </SolvedProblemItem>\n                        </div>\n                      </SolvedProblemSlide>\n                    </SolvedProblemSlideContainer>\n                  ))}\n                </Slider>\n              </SolvedProblemsMobileSlider>\n            </SolvedProblemsContainter>\n            <ClientsContainer>\n              <Clients />\n            </ClientsContainer>\n          </Container>\n        </SolvedProblemsSection>\n        <ProductFeauturesSection>\n          <Container>\n            <ProductFeatureHeader id=\"unique-product-features\">\n              <Text.Title.Bold.md>Unique Product Features</Text.Title.Bold.md>\n            </ProductFeatureHeader>\n            <ProductFeaturesItemsWrapper>\n              <ProductFeature id=\"automated-registration\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>\n                    Automated TCR Registration for 10DLC\n                  </Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      Telgorithm is partnered with{' '}\n                      <CustomLink\n                        address=\"https://www.campaignregistry.com/\"\n                        inline\n                        external\n                      >\n                        The Campaign Registry\n                      </CustomLink>{' '}\n                      for an API-based registration to eliminate the need for another\n                      manual setup to save your team time & cut down the risk of human\n                      errors. We provide expert guidance throughout the process to avoid\n                      rejections and achieve approvals fast.\n                    </Text.Regular.Normal.md>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/automatedRegistration.png'}\n                    alt=\"Automated Registration\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n              <ProductFeature id=\"automated-number-migration\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>Automated Number Porting</Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      Port active/existing phone numbers from another API provider to\n                      Telgorithm  instantly and in bulk to avoid customer disruptions.\n                      Telgorithm does not charge for Number Porting. <br />\n                      <br />\n                      Because we are a Hosted Messaging provider, you can stay with your\n                      current provider for voice and port just your SMS/MMS to \n                      Telgorithm. We can host your messaging on those very same numbers\n                      concurrently. \n                    </Text.Regular.Normal.md>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/automatedNumberMigration.png'}\n                    alt=\"Automated Number Porting\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n              <ProductFeature id=\"smart-queueing\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>Automated Rate Limit Management</Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      Telgorithm is the only provider with automated rate limit management\n                      technology (we call it Smart Queueing) that enables you to send\n                      messages at max rates without ever exceeding your limits. This is\n                      how our customers achieve 99%+ message deliverability on average.\n                    </Text.Regular.Normal.md>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/smartQueueing.png'}\n                    alt=\"Smart Queueing\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n              <ProductFeature id=\"message-prioritization\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>Message Prioritization</Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      Ensure your highest priority messages are sent first. In the event\n                      that your messages need to be queued, your most urgent Campaigns can\n                      be programmed to deliver first, giving you peace of mind that they\n                      won’t be delayed.\n                    </Text.Regular.Normal.md>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/messagePrioritization.png'}\n                    alt=\"Message Prioritization\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n              <ProductFeature id=\"time-routing\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>Message Time Routing</Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      With Time Routing, you can proactively determine what happens with\n                      the messages that are queued. You can rescind or “expire” the\n                      messages from the queue that no longer need to be sent, or schedule\n                      them to be sent during a specific time period. This enables you to\n                      use your rate limits efficiently, save on costs and provide a better\n                      customer experience.\n                    </Text.Regular.Normal.md>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/timeRouting.png'}\n                    alt=\"Time Routing\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n              <ProductFeature id=\"advanced-reporting\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>Advanced Error Reporting</Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      Forget error codes. If your customer runs into an error, you’ll\n                      automatically receive a transparent report with a detailed\n                      description to help you instantly resolve & avoid opening a support\n                      ticket (although we’re always here to help).\n                    </Text.Regular.Normal.md>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/advancedReporting.png'}\n                    alt=\"Advanced Reporting\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n              <ProductFeature id=\"number-verification\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>Phone Number Verification</Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      Your customer can verify that the phone numbers they are texting are\n                      real & in service prior to sending the message. This tool ensures\n                      that you keep your lists tidy, only pay for messages delivered to\n                      real numbers, & prevent a poor customer experience & avoid low\n                      deliverability score.\n                    </Text.Regular.Normal.md>\n                    <br />\n                    <br />\n                    <Text.Regular.Normal.xs>\n                      Offered at $0.0009/number\n                    </Text.Regular.Normal.xs>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/numberVerification.png'}\n                    alt=\"Number Verification\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n              <ProductFeature id=\"group-messaging\">\n                <ProductFeatureDescription>\n                  <Text.Title.Bold.md>Group messaging</Text.Title.Bold.md>\n                  <p>\n                    <Text.Regular.Normal.md>\n                      Build out threaded group text messages with as many parties as\n                      needed for seamless customer experiences.\n                    </Text.Regular.Normal.md>\n                  </p>\n                </ProductFeatureDescription>\n                <ProductFeatureImage>\n                  <StaticImage\n                    src={'../images/Product/features/groupMessaging.png'}\n                    alt=\"Group messaging\"\n                    placeholder=\"none\"\n                  ></StaticImage>\n                </ProductFeatureImage>\n              </ProductFeature>\n            </ProductFeaturesItemsWrapper>\n          </Container>\n        </ProductFeauturesSection>\n        <Container>\n          <FooterButtonsContainer>\n            <ActionFooterButtons />\n          </FooterButtonsContainer>\n        </Container>\n        <UseCasesSection>\n          <Container>\n            <Text.Regular.Bold.xl>Supported SMS & MMS Use Cases:</Text.Regular.Bold.xl>\n            <UseCases>\n              <li>\n                <Text.Regular.Normal.md>Alerts</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Confirmation Messages</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Customer Support</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Group Messaging</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Marketing & Promotions</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Product & Service Offers</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Reminders</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>\n                  Shipment or Delivery Notifications\n                </Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Scheduling</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Surveys & Feedback</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>Text-to-Pay</Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>\n                  2-Factor Authentication (2FA)\n                </Text.Regular.Normal.md>\n              </li>\n              <li>\n                <Text.Regular.Normal.md>2-Way Communication</Text.Regular.Normal.md>\n              </li>\n            </UseCases>\n          </Container>\n        </UseCasesSection>\n      </Layout>\n    </>\n  );\n};\n\nexport default ProductPage;\n\nexport const frontmatter: StaticPageFrontmatter = {\n  title: 'SMS & MMS Text Messaging API',\n  metaTitle:\n    'Automate the A2P 10DLC journey and experience guaranteed message deliverability',\n  excerpt:\n    'The only API to automate A2P texting compliance & message management for 99% deliverability',\n  slug: '/product',\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["_ref","color","React","width","height","viewBox","fill","xmlns","d","SuccessCircleEmptyIcon","LinkElementExternal","styled","displayName","componentId","props","_props$color","colors","inline","device","LinkElementInternal","Link","withConfig","_props$color2","address","arrow","children","external","href","target","id","shortid","rel","RightArrow","to","DislikeIcon","StyledPartners","Title","ClientsContent","opacityToHex","ImageWrapper","Partners","animationClass","setAnimationClass","useState","useEffect","timer","setTimeout","clearTimeout","Container","className","StaticImage","src","alt","placeholder","objectFit","__imageData","require","StyledLinkWithArrow","disabled","_props$color3","HeroSection","HeroInfo","Wrapper","LinksWrapper","DesktopHeroImage","SolvedProblemsSection","SolvedProblemsContainter","SolvedProblemItem","SolvedProblemsTable","SolvedProblemsTitle","ProductFeauturesSection","ProductFeatureHeader","ProductFeatureImage","ProductFeatureDescription","Text","ProductFeature","ProductFeaturesItemsWrapper","UseCasesSection","UseCases","SolvedProblemsMobileSlider","SolvedProblemSlideContainer","SolvedProblemSlide","ClientsContainer","FooterButtonsContainer","ActionFooterButtonsWrapper","ProductPageHeroSection","ActionHeroButtons","InternalLinks","PrimaryButton","LinkWithArrow","ActionFooterButtons","solvedProblems","problem","solution","ProductPage","settings","infinite","speed","slidesToShow","slidesToScroll","autoplay","arrows","title","MetaData","description","TopLevelPageJSONLDSchemas","url","GatsbySeoComponent","canonicalUrl","Layout","disabledContainer","map","item","key","Slider","Clients","CustomLink","frontmatter","metaTitle","excerpt","slug","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","number","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}