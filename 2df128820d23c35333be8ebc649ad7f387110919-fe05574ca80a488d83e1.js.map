{"version":3,"file":"2df128820d23c35333be8ebc649ad7f387110919-fe05574ca80a488d83e1.js","mappings":"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","sources":["webpack://landing/./src/images/CarrierFees/Logos/AtAndT.png","webpack://landing/./src/images/CarrierFees/Logos/TMobile.png","webpack://landing/./src/images/CarrierFees/Logos/Verizon.png","webpack://landing/./src/images/CarrierFees/Logos/CampaignRegistry.png","webpack://landing/./src/images/CarrierFees/Logos/USCellularLogo.png","webpack://landing/./src/components/carrier-fees/index.tsx","webpack://landing/./src/images/CarrierFees/background.png","webpack://landing/./src/components/carrier-fees/styled.ts","webpack://landing/./src/pages/carrier-fees.tsx"],"sourcesContent":["export default __webpack_public_path__ + \"static/AtAndT-ed27e2a14ce532f60de2992235e45aea.png\";","export default __webpack_public_path__ + \"static/TMobile-8af6a91678594654f58081459fdc8906.png\";","export default __webpack_public_path__ + \"static/Verizon-16a955737fbdc580fbb7fc1aeb835139.png\";","export default __webpack_public_path__ + \"static/CampaignRegistry-9a6443feedcb4768dfa53bc0793ecf04.png\";","export default __webpack_public_path__ + \"static/USCellularLogo-4a37ae302950c28cd3ad2a749e2b46e1.png\";","import React from 'react';\nimport { FC } from 'react';\nimport { CarrierFeesTabsNames } from '../../pages/carrier-fees';\nimport { CarrierFeesByCompany } from '../../types';\nimport { Table, Text } from '../common';\nimport {\n  CarrierFeesFootNotes,\n  CarrierFeesTable,\n  CarrierFeesTables,\n  CarrierFeeTablesDescription,\n  CompanyLogo,\n  StyledCarrierFeesTabItem,\n  StyledCarrierFeesTabs,\n} from './styled';\nimport AtAndTLogo from '../../images/CarrierFees/Logos/AtAndT.png';\nimport TMobileLogo from '../../images/CarrierFees/Logos/TMobile.png';\nimport VerizonLogo from '../../images/CarrierFees/Logos/Verizon.png';\nimport TCRLogo from '../../images/CarrierFees/Logos/CampaignRegistry.png';\nimport USCellularLogo from '../../images/CarrierFees/Logos/USCellularLogo.png';\nimport shortid from 'shortid';\nimport CustomLink from '../common/Link';\n\ntype CarrierFeesByCompanyProps = {\n  carrierFees: CarrierFeesByCompany;\n};\n\nconst mapCompanyNameToLogoSrc: Record<string, string> = {\n  'AT&T': AtAndTLogo,\n  'T-Mobile': TMobileLogo,\n  Verizon: VerizonLogo,\n  'U.S. Cellular': USCellularLogo,\n  TCR: TCRLogo,\n};\n\nexport const renderCarrierFeesTable = (table: {\n  link?: string;\n  title: string;\n  items: Record<string, string>[];\n}) => {\n  const headers = Object.keys(table.items[0]);\n\n  return (\n    <Table.Container>\n      <Table.Wrapper>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              {headers.map((header) => (\n                <Table.HeaderCell key={shortid.generate()}>{header}</Table.HeaderCell>\n              ))}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {table.items.map((item) => (\n              <Table.Row key={shortid.generate()}>\n                {Object.values(item).map((value, index) => (\n                  <Table.BodyCell key={shortid.generate()}>\n                    {table.link && index === 0 ? (\n                      <CustomLink address={table.link}>{value}</CustomLink>\n                    ) : (\n                      value\n                    )}\n                  </Table.BodyCell>\n                ))}\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Table.Wrapper>\n    </Table.Container>\n  );\n};\n\nexport const RenderCarrierFeesByCompany: FC<CarrierFeesByCompanyProps> = ({\n  carrierFees,\n}) => {\n  return (\n    <CarrierFeesTables>\n      {mapCompanyNameToLogoSrc[carrierFees.companyName] && (\n        <CompanyLogo>\n          <img\n            src={mapCompanyNameToLogoSrc[carrierFees.companyName]}\n            alt={carrierFees.companyName}\n          ></img>\n        </CompanyLogo>\n      )}\n      {carrierFees.description && (\n        <CarrierFeeTablesDescription>\n          <Text.Regular.Normal.md>{carrierFees.description}</Text.Regular.Normal.md>\n        </CarrierFeeTablesDescription>\n      )}\n      {carrierFees.tables.map((table) => {\n        return (\n          <CarrierFeesTable key={shortid.generate()}>\n            <Text.Title.Bold.md>{table.title}</Text.Title.Bold.md>\n            {renderCarrierFeesTable(table)}\n          </CarrierFeesTable>\n        );\n      })}\n      <CarrierFeesFootNotes>\n        {carrierFees?.footNotes.map((footNote) => (\n          <p key={shortid.generate()}>{footNote}</p>\n        ))}\n      </CarrierFeesFootNotes>\n    </CarrierFeesTables>\n  );\n};\n\nconst CarrierFeesTabItem = (props: {\n  title: string;\n  isActive?: boolean;\n  onClick: () => void;\n}) => {\n  return (\n    <StyledCarrierFeesTabItem isActive={props.isActive} onClick={props.onClick}>\n      {props.title}\n    </StyledCarrierFeesTabItem>\n  );\n};\n\ntype CarrierFeesTabsProps = {\n  activeTab: CarrierFeesTabsNames;\n  setActiveTab: (activeTabe: CarrierFeesTabsNames) => void;\n};\n\nexport const CarrierFeesTabs: FC<CarrierFeesTabsProps> = ({\n  activeTab,\n  setActiveTab,\n}) => {\n  return (\n    <StyledCarrierFeesTabs>\n      <CarrierFeesTabItem\n        title={'AT&T'}\n        isActive={activeTab === CarrierFeesTabsNames.AtAndT}\n        onClick={() => setActiveTab(CarrierFeesTabsNames.AtAndT)}\n      />\n      <CarrierFeesTabItem\n        title={'T-Mobile'}\n        isActive={activeTab === CarrierFeesTabsNames.TMobile}\n        onClick={() => setActiveTab(CarrierFeesTabsNames.TMobile)}\n      />\n      <CarrierFeesTabItem\n        title={'Verizon'}\n        isActive={activeTab === CarrierFeesTabsNames.Verizon}\n        onClick={() => setActiveTab(CarrierFeesTabsNames.Verizon)}\n      />\n      <CarrierFeesTabItem\n        title={'U.S. Cellular'}\n        isActive={activeTab === CarrierFeesTabsNames.USCellular}\n        onClick={() => setActiveTab(CarrierFeesTabsNames.USCellular)}\n      />\n      <CarrierFeesTabItem\n        title={'TCR'}\n        isActive={activeTab === CarrierFeesTabsNames.TCR}\n        onClick={() => setActiveTab(CarrierFeesTabsNames.TCR)}\n      />\n      <CarrierFeesTabItem\n        title={'Other'}\n        isActive={activeTab === CarrierFeesTabsNames.Other}\n        onClick={() => setActiveTab(CarrierFeesTabsNames.Other)}\n      />\n    </StyledCarrierFeesTabs>\n  );\n};\n","export default __webpack_public_path__ + \"static/background-a4717e784a621976acd24f06b98544f9.png\";","import styled, { css } from \"styled-components\";\nimport { colors, opacityToHex } from \"../../utils/colors\";\nimport background from \"../../images/CarrierFees/background.png\";\nimport { device } from \"../../utils/layoutBreakpoints\";\nimport { TableContainer } from \"../common/Table/styled\";\n\nexport const CarrierFeesHeader = styled.div`\n  @media ${device.tablet} {\n    background-color: ${colors.secondary.gray100};\n    border-radius: 8px;\n  }\n\n  margin-bottom: 50px;\n  @media ${device.tablet} {\n    margin-bottom: 80px;\n  }\n`;\n\nexport const CarrierFeesDescriptionWrapper = styled.div`\n  background-size: cover;\n  border-radius: 8px;\n  @media ${device.tablet} {\n    background-image: url(${background});\n    background-size: cover;\n    background-position: 60%;\n    height: 350px;\n  }\n  @media ${device.laptop} {\n    height: 400px;\n  }\n`;\n\nexport const CarrierFeesImage = styled.div`\n  @media ${device.tablet} {\n    display: none;\n  }\n`;\n\nexport const CarrierFeesDescription = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  @media ${device.tablet} {\n    width: 60%;\n    padding: 40px 40px;\n  }\n  @media ${device.desktop} {\n    padding: 50px 100px;\n  }\n`;\n\nexport const StyledCarrierFeesTabItem = styled.div<{ isActive?: boolean }>`\n  position: relative;\n  width: 20%;\n  text-align: center;\n  padding: 15px 10px;\n  cursor: pointer;\n  transition: 0.5s;\n  &:hover {\n    color: ${colors.primary.black};\n    transition: 0.5s;\n  }\n  ${(props) => {\n    if (props.isActive)\n      return css`\n        background-color: ${colors.primary.white};\n        border-radius: 12px;\n        box-shadow: 0px 0px 0px 1px rgba(0, 0, 0, 0.05),\n          0px 6px 16px rgba(0, 0, 0, 0.1);\n        color: ${colors.primary.black};\n        &::after {\n          opacity: 0;\n          transition: 0.5s;\n        }\n      `;\n  }}\n`;\n\nexport const StyledCarrierFeesTabs = styled.div`\n  justify-content: space-between;\n  font-weight: 600;\n  font-size: 0.65rem;\n  line-height: 1.1rem;\n  color: ${colors.primary.gray500};\n  padding: 20px;\n  width: 100%;\n  box-sizing: border-box;\n  display: none;\n  ${StyledCarrierFeesTabItem}:not(:last-child)::after {\n    content: \"\";\n    display: block;\n    height: 28px;\n    width: 2px;\n    background-color: ${colors.secondary.gray300 + opacityToHex[\"0.5\"]};\n    left: 100%;\n    top: 13px;\n    position: absolute;\n    transition: 0.5s;\n  }\n\n  @media ${device.laptop} {\n    font-size: 0.85rem;\n  }\n\n  @media ${device.tablet} {\n    display: flex;\n  }\n`;\n\nexport const CarrierFeesTabsDropdown = styled.div`\n  margin-top: 30px;\n  @media ${device.tablet} {\n    display: none;\n  }\n`;\n\nexport const CarrierFeesTables = styled.div`\n  ${TableContainer} {\n    margin-bottom: 40px;\n    margin-top: 25px;\n    ${device.tablet} {\n      margin-bottom: 60px;\n    }\n  }\n`;\n\nexport const CompanyLogo = styled.div`\n  img {\n    max-height: 50px;\n  }\n  margin-bottom: 50px;\n`;\n\nexport const CarrierFeesContainer = styled.div`\n  @media ${device.laptop} {\n    padding: 0 100px;\n  }\n`;\n\nexport const CarrierFeesFootNotes = styled.div`\n  color: ${colors.primary.gray500};\n  font-size: 0.6rem;\n  line-height: 0.9rem;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  @media ${device.laptop} {\n    margin-top: 80px;\n    font-size: 0.7rem;\n  }\n`\nexport const CarrierFeeTablesDescription = styled.div`\n  margin-bottom: 25px;\n`\n\nexport const CarrierFeesTable = styled.div`\n  margin-bottom: 20px;\n`","import * as React from 'react';\nimport '../styles/index.css';\nimport { Layout, Text, Divider } from '../components/common';\nimport { StaticImage } from 'gatsby-plugin-image';\nimport { CarrierFeesTabs, RenderCarrierFeesByCompany } from '../components/carrier-fees';\nimport {\n  CarrierFeesDescription,\n  CarrierFeesHeader,\n  CarrierFeesDescriptionWrapper,\n  CarrierFeesImage,\n  CarrierFeesTabsDropdown,\n  CarrierFeesContainer,\n} from '../components/carrier-fees/styled';\nimport { ContentContainer } from '../components/common/Container/Container';\nimport { DropdownInput } from '../components/common/Form';\nimport data from '../../data/CarrierFees.json';\nimport { CarrierFeesByCompany } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport { StaticPageFrontmatter } from '../types/StaticPageFrontmatter';\n\nexport enum CarrierFeesTabsNames {\n  AtAndT = 'AT&T',\n  TMobile = 'T-Mobile',\n  Verizon = 'Verizon',\n  USCellular = 'U.S. Cellular',\n  TCR = 'TCR',\n  Other = 'Other',\n}\n\nconst CarrierFeesPage = () => {\n  const carriersFeesData = JSON.parse(data.code) as unknown as CarrierFeesByCompany[];\n\n  const emptyCarrierFees: CarrierFeesByCompany = {\n    companyName: '',\n    tables: [],\n    footNotes: [],\n  };\n\n  const ATandT = carriersFeesData.find((data) => data.companyName === 'AT&T');\n  const TMobile = carriersFeesData.find((data) => data.companyName === 'T-Mobile');\n  const Verizon = carriersFeesData.find((data) => data.companyName === 'Verizon');\n  const USCellular = carriersFeesData.find(\n    (data) => data.companyName === 'U.S. Cellular',\n  );\n  const TCR = carriersFeesData.find((data) => data.companyName === 'TCR');\n  const Other = carriersFeesData.find((data) => data.companyName === 'Other');\n\n  const [activeTab, setActiveTab] = React.useState<CarrierFeesTabsNames>(\n    CarrierFeesTabsNames.AtAndT,\n  );\n\n  const mapTabNameToData = {\n    [CarrierFeesTabsNames.AtAndT]: ATandT,\n    [CarrierFeesTabsNames.TMobile]: TMobile,\n    [CarrierFeesTabsNames.Verizon]: Verizon,\n    [CarrierFeesTabsNames.USCellular]: USCellular,\n    [CarrierFeesTabsNames.TCR]: TCR,\n    [CarrierFeesTabsNames.Other]: Other,\n  };\n\n  const dateOptions = { month: 'long', year: 'numeric' } as Intl.DateTimeFormatOptions;\n  const currentDateString = new Date().toLocaleDateString('en-US', dateOptions);\n\n  return (\n    <>\n      <MetaData\n        pageTitle=\"Carrier Fees | Telgorithm\"\n        title=\"Carrier Pass Through-Fees | June 2024\"\n        description=\"Carrier & Other Pass-Through Fees.\"\n\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/carrier-fees/\"/>\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/carrier-fees/\" />\n      <Layout disabledContainer>\n        <CarrierFeesImage>\n          <StaticImage\n            src=\"../images/CarrierFees/mobileBackground.png\"\n            alt=\"Carrier Fees\"\n            objectFit=\"contain\"\n          ></StaticImage>\n        </CarrierFeesImage>\n        <ContentContainer>\n          <CarrierFeesHeader>\n            <CarrierFeesDescriptionWrapper>\n              <CarrierFeesDescription>\n                <Text.Title.Bold.xl>Carrier & Other Pass-Through Fees</Text.Title.Bold.xl>\n                <Text.Regular.Normal.md>\n                  Carrier pass-through fees are subject to change. The tables shown below\n                  are as of{' '}\n                  <Text.Regular.Bold.md>{currentDateString}</Text.Regular.Bold.md> and are\n                  shown for informational purposes only. Carrier pass-through fees will be\n                  collected by Telgorithm and remitted to mobile network operators on\n                  behalf of its Customers through the monthly Fees invoice process.\n                </Text.Regular.Normal.md>\n              </CarrierFeesDescription>\n            </CarrierFeesDescriptionWrapper>\n            <CarrierFeesTabs\n              activeTab={activeTab}\n              setActiveTab={setActiveTab}\n            ></CarrierFeesTabs>\n            <CarrierFeesTabsDropdown>\n              <DropdownInput\n                value={activeTab}\n                onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                  setActiveTab(event.currentTarget.value as CarrierFeesTabsNames)\n                }\n              >\n                <option value={CarrierFeesTabsNames.AtAndT}>\n                  {CarrierFeesTabsNames.AtAndT}\n                </option>\n                <option value={CarrierFeesTabsNames.TMobile}>\n                  {CarrierFeesTabsNames.TMobile}\n                </option>\n                <option value={CarrierFeesTabsNames.Verizon}>\n                  {CarrierFeesTabsNames.Verizon}\n                </option>\n                <option value={CarrierFeesTabsNames.USCellular}>\n                  {CarrierFeesTabsNames.USCellular}\n                </option>\n                <option value={CarrierFeesTabsNames.TCR}>\n                  {CarrierFeesTabsNames.TCR}\n                </option>\n                <option value={CarrierFeesTabsNames.Other}>\n                  {CarrierFeesTabsNames.Other}\n                </option>\n              </DropdownInput>\n            </CarrierFeesTabsDropdown>\n          </CarrierFeesHeader>\n          <CarrierFeesContainer>\n            <RenderCarrierFeesByCompany\n              carrierFees={mapTabNameToData[activeTab] ?? emptyCarrierFees}\n            ></RenderCarrierFeesByCompany>\n          </CarrierFeesContainer>\n        </ContentContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default CarrierFeesPage;\n\nexport const frontmatter: StaticPageFrontmatter = {\n  title: \"Carrier & Other Pass-Through Fees\",\n  metaTitle: \"Carrier pass-through fees will be collected by Telgorithm and remitted to mobile network operators on behalf of its Customers through the monthly Fees invoice process.\",\n  excerpt: \"Verizon, AT&T, TMobile, USCellular, The Campaign Registry, TCR\",\n  slug: '/carrier-fees/',\n};\n\n"],"names":["mapCompanyNameToLogoSrc","AtAndTLogo","TMobileLogo","Verizon","VerizonLogo","USCellularLogo","TCR","TCRLogo","renderCarrierFeesTable","table","headers","Object","keys","items","React","Table","map","header","key","shortid","item","values","value","index","link","CustomLink","address","RenderCarrierFeesByCompany","_ref","carrierFees","CarrierFeesTables","companyName","CompanyLogo","src","alt","description","CarrierFeeTablesDescription","Text","tables","CarrierFeesTable","title","CarrierFeesFootNotes","footNotes","footNote","CarrierFeesTabItem","props","StyledCarrierFeesTabItem","isActive","onClick","CarrierFeesTabs","_ref2","activeTab","setActiveTab","StyledCarrierFeesTabs","CarrierFeesTabsNames","CarrierFeesHeader","styled","displayName","componentId","device","colors","CarrierFeesDescriptionWrapper","background","CarrierFeesImage","CarrierFeesDescription","css","opacityToHex","CarrierFeesTabsDropdown","TableContainer","CarrierFeesContainer","CarrierFeesPage","_mapTabNameToData$act","carriersFeesData","JSON","parse","data","ATandT","find","TMobile","USCellular","Other","AtAndT","mapTabNameToData","currentDateString","Date","toLocaleDateString","month","year","MetaData","pageTitle","TopLevelPageJSONLDSchemas","url","GatsbySeoComponent","canonicalUrl","Layout","disabledContainer","StaticImage","objectFit","__imageData","require","ContentContainer","DropdownInput","onChange","event","currentTarget","frontmatter","metaTitle","excerpt","slug"],"sourceRoot":""}