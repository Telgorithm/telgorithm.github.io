{"version":3,"file":"component---src-templates-policy-tsx-content-file-path-policies-acceptable-use-policy-index-md-1975370e24d7d5f3f82d.js","mappings":"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","sources":["webpack://landing/./policies/acceptable-use-policy/index.md","webpack://landing/./src/templates/policy.tsx","webpack://landing/./src/components/policies/styled.ts","webpack://landing/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Acceptable Use Policy\"), \"\\n\", React.createElement(_components.p, null, \"This Acceptable Use Policy (“AUP”) describes rules that apply to any party (“Customer”) using the Application-to-Person (A2P) type messaging platform (“Telgorithm Platform”) provided by Telgorithm Inc. (“Telgorithm”) and any user of any software application or service made available by Customer that interfaces with the Telgorithm Platform (“End User”). The examples described in this AUP are not exhaustive. Customer is responsible for its End Users’ compliance with this AUP. \"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Inappropriate Content or Users.\"), \" Do not use the Telgorithm Platform to transmit or store any content or communications (commercial or otherwise) that is illegal, harmful, unwanted, inappropriate, objectionable, confirmed to be criminal misinformation, or otherwise poses a threat to the public. This prohibition includes use of the Telgorithm Platform by a hate group or content or communications that originate from a hate group or are exploitive, abusive, or hate speech.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Prohibited Activities.\"), \" Do not use the Telgorithm Platform to engage in or encourage any activity that is illegal, deceptive, harmful, violating others’ rights, or harmful to Telgorithm’s business operations or reputation, including:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Violations of Laws.\"), \" Violating any applicable laws, regulations, or industry standards or guidance (collectively, “Applicable Laws”). This includes violating Applicable Laws requiring (a) consent be obtained prior to transmitting, recording, collecting, or monitoring data or communications or (b) compliance with opt-out requests for any data or communications.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Interference with the Telgorithm Platform.\"), \" Interfering with or otherwise negatively impacting any aspect of the Telgorithm Platform or any third-party networks that are linked to the Telgorithm Platform.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Reverse Engineering.\"), \" Reverse engineering, copying, disassembling, or decompiling any component of the Telgorithm Platform.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Falsification of Identity or Origin.\"), \" Creating a false identity or any attempt to mislead others as to the identity of the sender or the origin of any data or communications.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Service Integrity Violations.\"), \" Do not violate the integrity of the Telgorithm Platform, including:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Bypassing Service Limitations.\"), \" Attempting to bypass, exploit, defeat, or disable limitations or restrictions placed on the Telgorithm Platform.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Security Vulnerabilities.\"), \" Finding security vulnerabilities to exploit the Telgorithm Platform or attempting to bypass any security mechanism or filtering capabilities.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Disabling the Telgorithm Platform.\"), \" Any denial of service (DoS) attack on the Telgorithm Platform or any other conduct that attempts to disrupt, disable, or overload the Telgorithm Platform.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Harmful Code or Bots.\"), \" Transmitting code, files, scripts, agents, or programs intended to do harm, including viruses or malware, or using automated means, such as bots, to gain access to or use the Telgorithm Platform.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"Unauthorized Access.\"), \" Attempting to gain unauthorized access to the Telgorithm Platform.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Data Safeguards.\"), \" Customer is responsible for determining whether the Telgorithm Platform offers appropriate safeguards for Customer’s use of the Telgorithm Platform, including, but not limited to, any safeguards required by Applicable Laws, prior to transmitting or processing, or prior to permitting End Users to transmit or process, any data or communications via the Telgorithm Platform.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"The Campaign Registry Guidelines.\"), \" Customer must adhere to and stay in compliance with all registration guidelines set forth by The Campaign Registry as provided by Telgorithm.\"), \"\\n\", React.createElement(_components.h2, null, \"Telgorithm’s Messaging Policy\"), \"\\n\", React.createElement(_components.p, null, \"This Messaging Policy is part of this AUP and applies to SMS and MMS messaging channels. To ensure all messages are received, unhindered by filtering or other similar blockers, Telgorithm strives to work with Customers so that messages are sent with the consent of the message recipient, and that those messages comply with all applicable laws and communications industry guidelines or standards.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Messaging.\"), \" Telgorithm treats all messaging transmitted via Telgorithm Platform, regardless of use case or phone number type (e.g., long code or toll-free), as A2P messaging. All A2P messages originating from Telgorithm are subject to this Messaging Policy, which covers rules and /or prohibitions regarding:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Consent (“opt-in”);\"), \"\\n\", React.createElement(_components.li, null, \"Revocation of Consent (“opt-out”);\"), \"\\n\", React.createElement(_components.li, null, \"Sender Identification;\"), \"\\n\", React.createElement(_components.li, null, \"Messaging Usage; and\"), \"\\n\", React.createElement(_components.li, null, \"Enforcement.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"If Customer provides its own End Users with the ability to send messages through Telgorithm Platform, for example as an independent software vendor, Customer is responsible for the messaging activity of its End Users. Customer must ensure that any messaging activity generated by its End Users is in compliance with Telgorithm’s policies.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Consent/Opt-in.\"), \" Consent cannot be bought, sold, or exchanged. For example, Customer cannot obtain the consent of message recipients by purchasing a phone list from another party. Aside from Alternative Consent Requirements noted below, Customer must meet each of the consent requirements listed below. If Customer is a software or platform provider using Telgorithm Platform for messaging within its application or service, Customer must require its End Users to adhere to these same requirements.\"), \"\\n\", React.createElement(_components.h2, null, \"Consent Requirements\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Prior to sending the first message, Customer must obtain agreement from the message recipient to communicate with them – this is referred to as “consent”. Customer must make clear to the individual they are agreeing to receive messages of the type that is being sent. Customer needs to keep a record of the consent, such as a copy of the document or form that the message recipient signed or a timestamp of completion of a sign-up flow.\"), \"\\n\", React.createElement(_components.li, null, \"If Customer does not send an initial message to that individual within a reasonable period after receiving consent (or as set forth by local regulations or best practices), then Customer must reconfirm consent in the first message sent to that recipient.\"), \"\\n\", React.createElement(_components.li, null, \"The consent applies only to the specific use or campaign that the recipient has consented to. Customer cannot treat such consent as blanket consent for messages from other brands or companies Customer may have, or additional messages about other uses or campaigns.\"), \"\\n\", React.createElement(_components.li, null, \"Proof of opt-in consent should be retained as set forth by local regulation or best practices after an End User opts out of receiving messages.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Alternative Consent Requirements.\"), \" While consent is always required and the consent requirements noted above are generally the safest path, consent can be received differently in the following scenarios:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Contact initiated by an individual. Customer is free to respond to a message first initiated by an individual without consent. For example, if an individual texts a Customer’s phone number asking for Customer’s hours of operation, Customer may respond directly to that individual, relaying the open hours. In such a case, the individual’s inbound message to Customer constitutes both consent and proof of consent. Such consent is limited only to that particular conversation. Unless Customer obtains additional consent, it shall not send messages that are outside the scope of that particular conversation.\"), \"\\n\", React.createElement(_components.li, null, \"Informational content to an individual based on a prior relationship. Customer may send a message to an individual with a prior relationship, provided that individual provided their phone number to Customer, and has taken some action to trigger the potential communication, and has not expressed a preference to not receive messages. Actions can include a button press, alert setup, appointments, or order placements. Examples of acceptable messages in these scenarios include appointment reminders, receipts, one-time passwords, order/shipping/reservation confirmations, drivers coordinating pick up locations with riders, and repair persons confirming service call times. The message cannot attempt to promote a product, convince someone to buy something, or advocate for a social cause.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Periodic Messages and Ongoing Consent.\"), \" To send messages to a recipient on an ongoing basis, Customer should confirm the recipient’s consent by offering them a clear reminder of how to unsubscribe from those messages using standard opt-out language (defined below). Customer must also respect the message recipient’s preferences in terms of frequency of contact. Customer also needs to proactively ask individuals to reconfirm their consent as set forth by local regulations and best practices.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Identifying Yourself as the Sender.\"), \" Customer must identify itself as the sender in every message it sends , except in follow-up messages of an ongoing conversation.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Opt-out.\"), \" The initial message sent to an individual needs to include the following language: “Reply STOP to unsubscribe,” or the equivalent using another standard opt-out keyword, such as STOPALL, UNSUBSCRIBE, CANCEL, END, and QUIT.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Individuals must have the ability to revoke consent at any time by replying with a standard opt-out keyword. When an individual opts out, Customer may deliver one final message to confirm that the opt-out has been processed, but any subsequent messages are not allowed. To send any additional messages to an individual who has opted out, Customer must obtain consent again.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Usage Limitations\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Prohibited Content.\"), \" The key to ensuring that messaging remains a great channel for communication and innovation is preventing abusive use of messaging platforms. That means Telgorithm never allows certain types of content on Telgorithm Platform, even if a Customer obtains consent from recipients for that content. Telgorithm prohibits sending any content that is illegal, harmful, unwanted, inappropriate, objectionable, confirmed to be criminal misinformation, or otherwise poses a threat to the public, even if the content is permissible by law. Other prohibited uses include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Anything that is illegal in the jurisdiction where the message recipient lives. \"), \"\\n\", React.createElement(_components.li, null, \"Hate speech, harassment, exploitative, abusive, or any communications that originate from a hate group.\"), \"\\n\", React.createElement(_components.li, null, \"Fraudulent messages.\"), \"\\n\", React.createElement(_components.li, null, \"Malicious content, such as malware or viruses.\"), \"\\n\", React.createElement(_components.li, null, \"Any content that is designed to intentionally evade filters (e.g., Snowshoeing, etc).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Country-Specific Rules.\"), \" All messages should comply with the rules applicable to the country in which the message recipient lives. \"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Age and Geographic Gating.\"), \" Additional restrictions apply to messages that include content in any way related to alcohol, firearms, gambling, tobacco, or other adult content. In addition to obtaining consent from every message recipient, Customer must ensure that no message recipient is younger than the legal age of consent based on where the recipient is located. Customer also must ensure that the message \", React.createElement(_components.strong, null, \"content\"), \" complies with all applicable laws of the jurisdiction in which the message recipient is located or applicable communications industry guidelines or standards. Customer needs to be able to provide proof that it has in place measures to ensure compliance with such restrictions.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Messaging Policy Violation Detection and Prevention Evasion.\"), \" Customers may not use our Telgorithm Platform to evade Telgorithm’s or a telecommunications provider’s unwanted messaging detection and prevention mechanisms. Examples of prohibited practices include:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Content designed to evade detection. As noted above, Telgorithm does not allow content which has been specifically designed to evade detection by unwanted messaging detection and prevention mechanisms. This includes intentionally misspelled words or non-standard opt-out phrases which have been specifically created with the intent to evade these mechanisms.\"), \"\\n\", React.createElement(_components.li, null, \"Snowshoeing. Telgorithm does not permit snowshoeing, which is defined as spreading similar or identical messages across many phone numbers with the intent or effect of evading unwanted messaging detection and prevention mechanisms.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Violations of AUP.\"), \" When a violation of these principles is identified, where possible, Telgorithm will work with Customers in good faith to get them back into compliance with this policy. However, for protection of the continued ability of all Customers and End Users to freely use Telgorithm Platform for legitimate purposes, violations of this AUP by Customer or any End User may result in the immediate suspension or termination of Customer’s or End User’s use of the Telgorithm Platform, or civil and/or criminal liability. In any such event, Customer is still liable for any and all outstanding charges accumulated through the user of the Telgorithm Platform, including uses in violation of this AUP, the laws of any applicable jurisdiction, or applicable communications industry guidelines or standards. In addition, Telgorithm may investigate incidents that are contrary to this AUP and provide requested information to third parties who have provided notice to Telgorithm stating that they have been harmed by Customer or its End Users’ failure to abide by this AUP. Telgorithm’s failure to enforce this policy does not amount to a waiver of any of its rights hereunder. Violations of this AUP, including any prohibited content or communications, may be reported to https://www.telgorithm.com/help. Customer agrees to immediately report any violation of this AUP to Telgorithm and provide cooperation, as requested by Telgorithm, to investigate and/or remedy that violation. \"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Changes To This AUP.\"), \" Telgorithm reserves the right to change this AUP from time to time without notice by posting changes at https://www.telgorithm.com/policies/acceptable-use-policy/ and revising the “Last Updated” date of this AUP.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Telgorithm/website/landing/policies/acceptable-use-policy/index.md\";\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport Layout from '../components/common/Layout/Layout';\nimport {GatsbySeoComponent, TopLevelPageJSONLDSchemas} from '../components/common/SEO';\nimport {PolicyContent, PolicyContentContainer} from '../components/policies/styled';\nconst PolicyPage = _ref => {\n  var _data$mdx, _data$mdx$frontmatter, _data$mdx2, _data$mdx2$fields, _data$mdx3, _data$mdx3$fields;\n  let {data, children} = _ref;\n  const title = ((_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title) + \" | Telgorithm\";\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, null, React.createElement(\"meta\", {\n    property: \"twitter:title\",\n    content: title\n  })), React.createElement(TopLevelPageJSONLDSchemas, {\n    url: 'https://www.telgorithm.com/policies/' + ((_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : (_data$mdx2$fields = _data$mdx2.fields) === null || _data$mdx2$fields === void 0 ? void 0 : _data$mdx2$fields.slug)\n  }), React.createElement(GatsbySeoComponent, {\n    canonicalUrl: 'https://www.telgorithm.com/policies/' + ((_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : (_data$mdx3$fields = _data$mdx3.fields) === null || _data$mdx3$fields === void 0 ? void 0 : _data$mdx3$fields.slug),\n    title: title\n  }), React.createElement(Layout, null, React.createElement(PolicyContentContainer, null, React.createElement(PolicyContent, null, children))));\n};\nPolicyPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PolicyPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"1618164362\";\n","import styled from \"styled-components\";\nimport { colors } from \"../../utils/colors\";\nimport { device } from \"../../utils/layoutBreakpoints\";\n\nexport const PolicyContentContainer = styled.div`\n max-width: 100%;\n  @media ${device.laptop} {\n    padding: 0 150px;\n  }\n`\n\nexport const PolicyContent = styled.div`\n    margin-bottom: 40px;\n  font-weight: 400;\n  font-size: 0.8rem;\n  line-height: 1.1rem;\n\n  a {\n    color: ${colors.primary.blue}\n  }\n\n  ol {\n    list-style: decimal;\n    padding-left: 15px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n  }\n  \n  ul {\n    list-style: inside;\n    padding-left: 25px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n  }\n\n  strong {\n    font-weight: 600;\n  }\n\n  p {\n    margin-bottom: 15px;\n    margin-top: 15px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-family: \"Poppins\";\n    font-weight: 600;\n    margin-bottom: 15px;\n  }\n\n\n\n  h1 {\n    font-weight: 600;\n    font-size: 1.6rem;\n    line-height: 1.9rem;\n    margin-bottom: 15px;\n  }\n\n  h2 {\n    font-size: 1.4rem;\n    line-height: 1.7rem;\n  }\n\n  h3 {\n    font-size: 1.2rem;\n    line-height: 1.5rem;\n  }\n\n  h4 {\n    font-size: 1rem;\n    line-height: 1.3rem;\n  }\n\n  h5 {\n    font-size: 0.8rem;\n    line-height: 1.1rem;\n  }\n\n  h6 {\n    font-size: 0.7rem;\n    line-height: 1rem;\n  }\n\n\n\n  @media ${device.laptop} {\n    font-size: 0.9rem;\n    line-height: 1.3rem;\n\n    h1 {\n      font-size: 2rem;\n      line-height: 2.6rem;\n      margin-bottom: 15px;\n    }\n\n    h2 {\n      font-size: 1.8rem;\n      line-height: 2.4rem;\n    }\n\n    h3 {\n      font-size: 1.6rem;\n      line-height: 2.2rem;\n    }\n\n    \n    h4 {\n      font-size: 1.4rem;\n      line-height: 2rem;\n    }\n\n    h5 {\n      font-size: 1.2rem;\n      line-height: 1.8rem;\n    }\n\n    h6 {\n      font-size: 1rem;\n      line-height: 1.6rem;\n    }\n  }\n`","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","strong","ul","li","h2","_provideComponents","components","React","wrapper","MDXLayout","PolicyPage","_ref","_data$mdx","_data$mdx$frontmatter","_data$mdx2","_data$mdx2$fields","_data$mdx3","_data$mdx3$fields","data","children","title","mdx","frontmatter","Helmet","property","content","TopLevelPageJSONLDSchemas","url","fields","slug","GatsbySeoComponent","canonicalUrl","Layout","PolicyContentContainer","PolicyContent","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","styled","displayName","componentId","device","colors","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}