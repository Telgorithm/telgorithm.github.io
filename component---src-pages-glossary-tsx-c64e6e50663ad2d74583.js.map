{"version":3,"file":"component---src-pages-glossary-tsx-c64e6e50663ad2d74583.js","mappings":"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","sources":["webpack://landing/./src/components/common/Icons/DropdownArrowIcon/DropdownArrowIcon.tsx","webpack://landing/./src/components/common/Form/index.tsx","webpack://landing/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://landing/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack://landing/./src/components/common/Form/styled.ts","webpack://landing/./src/components/common/Text/index.tsx","webpack://landing/./src/components/glossary/styled.ts","webpack://landing/./src/hooks/useOnKeyDown.tsx","webpack://landing/./src/pages/glossary.tsx"],"sourcesContent":["import React from \"react\";\nimport { colors } from \"../../../../utils/colors\";\n\nconst DropdownArrowIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"14\"\n      height=\"8\"\n      viewBox=\"0 0 14 8\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M7.88787 7.53749L13.1879 2.23749C13.305 2.12129 13.398 1.98303 13.4615 1.83071C13.5249 1.67839 13.5576 1.515 13.5576 1.34999C13.5576 1.18497 13.5249 1.02159 13.4615 0.869269C13.398 0.716945 13.305 0.578693 13.1879 0.46249C12.9537 0.229676 12.6369 0.098999 12.3066 0.098999C11.9764 0.098999 11.6596 0.229676 11.4254 0.46249L7.00037 4.88749L2.57537 0.462489C2.34117 0.229675 2.02435 0.0989985 1.69412 0.0989985C1.36389 0.0989985 1.04707 0.229675 0.812868 0.462489C0.697017 0.579289 0.605361 0.717809 0.543156 0.870106C0.480949 1.0224 0.449419 1.18548 0.45037 1.34999C0.449419 1.5145 0.480949 1.67758 0.543156 1.82987C0.605361 1.98217 0.697017 2.12069 0.812868 2.23749L6.11287 7.53749C6.22907 7.65465 6.36732 7.74764 6.51965 7.8111C6.67197 7.87456 6.83535 7.90724 7.00037 7.90724C7.16538 7.90724 7.32877 7.87456 7.48109 7.8111C7.63341 7.74764 7.77167 7.65465 7.88787 7.53749Z\"\n        fill={colors.secondary.gray700}\n      />\n    </svg>\n  );\n};\n\nexport default DropdownArrowIcon;\n","import React, { InputHTMLAttributes, SelectHTMLAttributes } from \"react\";\nimport { FC } from \"react\";\nimport DropdownArrowIcon from \"../Icons/DropdownArrowIcon/DropdownArrowIcon\";\nimport { StyledDropdown, StyledDropdownInput, StyledTextInput } from \"./styled\";\n\nexport const DropdownInput:FC<SelectHTMLAttributes<{}>> = ({children, ...props}) => {\n    return (<StyledDropdown>\n        <StyledDropdownInput {...props}>\n            {children}\n        </StyledDropdownInput>\n        <DropdownArrowIcon></DropdownArrowIcon>\n    </StyledDropdown>)\n}\n\nexport const TextInput:FC<InputHTMLAttributes<{}>> = ({...props}) => {\n    return (\n       <StyledTextInput {...props}></StyledTextInput>\n    )\n  }\n  ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import styled from 'styled-components';\nimport { colors } from '../../../utils/colors';\n\nexport const StyledDropdown = styled.div`\n  position: relative;\n  svg {\n    position: absolute;\n    top: 15px;\n    right: 10px;\n  }\n`;\n\nexport const StyledDropdownInput = styled.select`\n  height: 36px;\n  padding: 0 15px;\n  cursor: pointer;\n  appearance: none;\n  option {\n    font-family: 'Rubik';\n    color: ${colors.primary.black};\n    background-color: none;\n  }\n  width: 100%;\n  box-sizing: border-box;\n  background-color: ${colors.primary.white};\n  color: ${colors.primary.black};\n  border: 1px solid ${colors.secondary.gray300};\n  font-family: 'Rubik';\n  border-radius: 5px;\n  &::placeholder {\n    color: ${colors.primary.gray500};\n    font-family: 'Rubik';\n  }\n  &:focus {\n    outline: none;\n    border: 1px solid ${colors.primary.blue};\n  }\n`;\n\nexport const StyledTextInput = styled.input`\n  width: 100%;\n  box-sizing: border-box;\n  background-color: ${colors.primary.white};\n  color: ${colors.primary.black};\n  border: 1px solid ${colors.secondary.gray300};\n  font-family: 'Rubik';\n  border-radius: 5px;\n  &::placeholder {\n    color: ${colors.primary.gray500};\n    font-family: 'Rubik';\n  }\n  height: 36px;\n  padding: 10px 15px;\n  &:focus {\n    outline: none;\n    border: 1px solid ${colors.primary.blue};\n  }\n`;\n","import styled from \"styled-components\";\nimport {device} from \"../../../utils/layoutBreakpoints\";\nimport {colors} from \"../../../utils/colors\";\n\nexport const SectionTitleText = styled.h2`\n  font-size: 32px;\n  font-family: \"Poppins\";\n  font-weight: 600;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 52px;\n    line-height: 64px;\n  }\n`;\n\nconst TitleBoldMedium = styled.h2`\n  color: ${colors.primary.black};\n  font-size: 22px;\n  font-family: 'Poppins';\n  font-weight: 600;\n  line-height: 28px;\n\n  @media ${device.laptop} {\n    font-size: 32px;\n    line-height: 38px;\n  }\n`;\n\nconst TitleBoldLarge = styled.h1`\n  color: ${colors.primary.black};\n  font-size: 26px;\n  font-family: \"Poppins\";\n  font-weight: 700;\n  line-height: 32px;\n\n  @media ${device.laptop} {\n    font-size: 45px;\n    line-height: 52px;\n  }\n`;\n\nconst TitleBoldExtraLarge = styled.h1`\n  color: ${colors.primary.black};\n  font-size: 32px;\n  font-family: \"Poppins\";\n  font-weight: 700;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 52px;\n    line-height: 64px;\n  }\n`;\n\nconst RegularNormalSmall = styled.span`\n  color: ${colors.primary.black};\n  font-size: 12px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 14px;\n\n  @media ${device.laptop} {\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nconst RegularNormalMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nconst RegularBoldMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 500;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nconst RegularBoldLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 18px;\n  font-family: \"Rubik\";\n  font-weight: 500;\n  line-height: 24px;\n\n  @media ${device.laptop} {\n    font-size: 24px;\n    line-height: 32px;\n  }\n`;\n\nconst RegularBoldExtraLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 32px;\n  font-family: \"Rubik\";\n  font-weight: 500;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 40px;\n    line-height: 48px;\n  }\n`;\n\nconst RegularExtraBoldMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 700;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nexport const Text = {\n  Title: {\n    Normal: {\n      sm: {},\n      md: {},\n      lg: {},\n    },\n    Bold: {\n      sm: {},\n      md: TitleBoldMedium,\n      lg: TitleBoldLarge,\n      xl: TitleBoldExtraLarge,\n    },\n  },\n  Regular: {\n    Normal: {\n      sm: RegularNormalSmall,\n      md: RegularNormalMedium,\n      lg: {},\n    },\n    Bold: {\n      sm: {},\n      md: RegularBoldMedium,\n      lg: RegularBoldLarge,\n      xl: RegularBoldExtraLarge,\n    },\n    ExtraBold: {\n      sm: {},\n      md: RegularExtraBoldMedium,\n      lg: {},\n    },\n  },\n}\n","import styled, { css } from 'styled-components';\nimport { colors } from '../../utils/colors';\nimport { device } from '../../utils/layoutBreakpoints';\nimport { Container } from '../common/Container/Container';\nimport { StyledTextInput } from '../common/Form/styled';\n\nexport const GlossaryPageContentContainer = styled(Container)`\n  max-width: 1000px;\n`;\n\nexport const HeroSection = styled.section`\n  background-color: ${colors.secondary.gray100};\n  box-sizing: border-box;\n  padding: 40px 20px;\n\n  @media ${device.laptop} {\n    height: 400px;\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n\n  ${GlossaryPageContentContainer} {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n`;\n\nexport const HeroInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  @media ${device.laptop} {\n    gap: 30px;\n  }\n`;\n\nexport const SearchIconContainer = styled.div`\n  position: absolute;\n  left: 20px;\n  top: calc(50% - 10px);\n`;\n\nexport const SearchButton = styled.button`\n  cursor: pointer;\n  position: absolute;\n  right: 10px;\n  top: calc(50% - 10px);\n  border: none;\n  background: none;\n  span {\n    color: ${colors.primary.blue};\n    font-weight: 600;\n  }\n  &:hover {\n    span {\n      color: ${colors.primary.lightOrange};\n    }\n  }\n`;\n\nexport const SearchContainer = styled.div`\n  position: relative;\n\n  svg {\n    width: 13px;\n    height: 13px;\n  }\n\n  ${StyledTextInput} {\n    padding-left: 40px;\n    padding-right: 80px;\n    height: 45px;\n    border-radius: 8px;\n    font-size: 12px;\n    &::placeholder {\n      color: ${colors.primary.gray500};\n      font-size: 0.9rem;\n    }\n    @media ${device.laptop} {\n      height: 60px;\n      padding-left: 50px;\n      font-size: 16px;\n    }\n  }\n\n  @media ${device.laptop} {\n    svg {\n      width: 20px;\n      height: 20px;\n    }\n  }\n`;\n\nexport const Alphabet = styled.div`\n  padding: 50px 0;\n  display: none;\n  width: 100%;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  @media ${device.mobileL} {\n    justify-content: unset;\n  }\n  @media ${device.tablet} {\n    justify-content: space-between;\n  }\n  a {\n    h2 {\n      transition: 0.5s;\n      &:hover {\n        color: ${colors.secondary.orange};\n        transition: 0.5s;\n      }\n    }\n  }\n  @media ${device.laptop} {\n    display: flex;\n  }\n`;\n\nexport const TermsGroup = styled.div`\n  border-top: 1px solid ${colors.secondary.gray300};\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  padding: 30px 0;\n  @media ${device.tablet} {\n    padding: 60px 0;\n  }\n`;\n\nexport const TermsContainer = styled.div`\n  ${TermsGroup}:first-child {\n    border-top: none;\n  }\n  @media ${device.laptop} {\n    ${TermsGroup}:first-child {\n      border-top: 1px solid ${colors.secondary.gray300};\n    }\n  }\n`;\n\nexport const TermFirstLetter = styled.div``;\n\nexport const TermsList = styled.div<{ termsAmount: number }>`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  @media ${device.tablet} {\n    display: grid;\n    gap: 20px;\n  }\n  ${(props) =>\n    props.termsAmount > 2 &&\n    css`\n      a:nth-child(2) {\n        grid-column-start: 2;\n      }\n    `}\n  a > span {\n    transition: 0.5s;\n    &:hover {\n      color: ${colors.secondary.orange};\n      transition: 0.5s;\n    }\n  }\n`;\n","import { useCallback, useEffect } from 'react';\r\n\r\nconst useOnKeyDown = (\r\n  keyCode: string,\r\n  callback: () => void,\r\n  condition: boolean,\r\n) => {\r\n  const keyFunction = useCallback((event : KeyboardEvent) => {\r\n    if (event.code === keyCode) {\r\n      callback();\r\n    }\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    if (condition) {\r\n      document.addEventListener('keydown', keyFunction);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', keyFunction);\r\n    };\r\n  }, [keyFunction, condition]);\r\n};\r\n\r\nexport const useOnEnterDown = (\r\n  callback: () => void,\r\n  condition = true,\r\n) => useOnKeyDown('Enter', callback, condition);","import React, { useEffect, useState } from 'react';\nimport Layout from '../components/common/Layout/Layout';\nimport { graphql, Link, PageProps } from 'gatsby';\nimport {\n  mapTermNodeToGlossaryTerm,\n} from '../mappers';\nimport { useLunr } from 'react-lunr';\nimport { GlossaryTerm } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport { Text } from '../components/common/Text';\nimport {\n  Alphabet,\n  GlossaryPageContentContainer,\n  HeroInfo,\n  HeroSection,\n  SearchButton,\n  SearchContainer,\n  SearchIconContainer,\n  TermFirstLetter,\n  TermsContainer,\n  TermsGroup,\n  TermsList,\n} from '../components/glossary/styled';\nimport { TextInput } from '../components/common/Form';\nimport SearchIcon from '../components/common/Icons/SearchIcon/SearchIcon';\nimport { NoResultsText } from '../components/common/styled';\nimport { useOnEnterDown } from '../hooks/useOnKeyDown';\n\nconst termsByAlphabetTemplate = JSON.stringify({\n  A: [],\n  B: [],\n  C: [],\n  D: [],\n  E: [],\n  F: [],\n  G: [],\n  H: [],\n  I: [],\n  J: [],\n  K: [],\n  L: [],\n  M: [],\n  N: [],\n  O: [],\n  P: [],\n  Q: [],\n  R: [],\n  S: [],\n  T: [],\n  U: [],\n  V: [],\n  W: [],\n  X: [],\n  Y: [],\n  Z: [],\n  '#': [],\n});\n\nconst GlossaryPage = ({ data }: PageProps<Queries.GlossaryPageQuery>) => {\n  const [tempSearchString, setTempSearchString] = useState('');\n  const [searchString, setSearchString] = useState<string>('');\n\n  const rawTerms: GlossaryTerm[] = React.useMemo(() => {\n    return data.allMdx.edges.map((edge) => mapTermNodeToGlossaryTerm(edge.node));\n  }, []);\n\n  const filteredTerms: GlossaryTerm[] = useLunr(\n    searchString.trim(),\n    data.localSearchTerms?.index,\n    data.localSearchTerms?.store,\n  ) as GlossaryTerm[];\n\n  const terms = searchString ? filteredTerms : rawTerms;\n\n  const getTermsForRender = () => {\n    const newState = { ...JSON.parse(termsByAlphabetTemplate) };\n    terms.forEach((term) => {\n      const firstLetter = term.title[0].toUpperCase();\n      if (newState[firstLetter as string]) {\n        newState[firstLetter as string]?.push(term);\n      } else {\n        newState['#'].push(term);\n      }\n    });\n    return newState;\n  };\n\n  const [termsByAlphabet, setTermsByAlphabet] = useState<Record<string, GlossaryTerm[]>>(\n    getTermsForRender(),\n  );\n\n  useEffect(() => {\n    setTermsByAlphabet(getTermsForRender());\n  }, [terms]);\n\n  const onSearchClick = () => {\n    setSearchString(tempSearchString);\n  };\n\n  useOnEnterDown(onSearchClick);\n\n  useEffect(() => {\n    if (!tempSearchString) {\n      setSearchString('');\n    }\n  }, [tempSearchString]);\n\n  return (\n    <>\n      <MetaData\n        title=\"Glossary | Telgorithm\"\n        description=\"Browse through our glossary for definitions to common terms in the A2P text messaging space.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/glossary/\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/glossary/\" />\n      <Layout disabledContainer>\n        <HeroSection>\n          <GlossaryPageContentContainer>\n            <HeroInfo>\n              <Text.Title.Bold.xl>Telgorithm’s Glossary</Text.Title.Bold.xl>\n              <Text.Regular.Bold.lg>\n                Browse through our glossary for definitions to common terms in the A2P\n                text messaging space.\n              </Text.Regular.Bold.lg>\n            </HeroInfo>\n            <SearchContainer>\n              <SearchIconContainer>\n                <SearchIcon></SearchIcon>\n              </SearchIconContainer>\n              <TextInput\n                value={tempSearchString}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  setTempSearchString(e.currentTarget.value)\n                }\n              ></TextInput>\n              <SearchButton onClick={onSearchClick}>\n                <Text.Regular.Normal.sm>Search</Text.Regular.Normal.sm>\n              </SearchButton>\n            </SearchContainer>\n          </GlossaryPageContentContainer>\n        </HeroSection>\n        <GlossaryPageContentContainer>\n          <Alphabet>\n            {Object.keys(termsByAlphabet).map((letter) =>\n              termsByAlphabet[letter].length > 0 ? (\n                <Link to={`#terms_${letter}`} key={letter}>\n                  <Text.Title.Bold.md key={letter}>{letter}</Text.Title.Bold.md>\n                </Link>\n              ) : (\n                <Text.Title.Bold.md key={letter}>{letter}</Text.Title.Bold.md>\n              ),\n            )}\n          </Alphabet>\n          {terms.length ? (\n            <TermsContainer>\n              {Object.keys(termsByAlphabet)\n                .filter((letter) => termsByAlphabet[letter].length)\n                .map((letter) => (\n                  <TermsGroup key={letter} id={`terms_${letter}`}>\n                    <TermFirstLetter>\n                      <Text.Title.Bold.md>{letter}</Text.Title.Bold.md>\n                    </TermFirstLetter>\n                    <TermsList termsAmount={termsByAlphabet[letter].length}>\n                      {termsByAlphabet[letter].map((item) => (\n                        <Link to={item.url} key={item.id}>\n                          <Text.Regular.Normal.md>{item.title}</Text.Regular.Normal.md>\n                        </Link>\n                      ))}\n                    </TermsList>\n                  </TermsGroup>\n                ))}\n            </TermsContainer>\n          ) : (\n            <NoResultsText>No results for \"{searchString}\"</NoResultsText>\n          )}\n        </GlossaryPageContentContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default GlossaryPage;\n\nexport const query = graphql`\n  query GlossaryPage {\n    localSearchTerms {\n      index\n      store\n    }\n    allMdx(\n      filter: { fileAbsolutePath: { regex: \"//terms//\" } }\n      sort: { fields: frontmatter___title, order: ASC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n          id\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["React","xmlns","width","height","viewBox","fill","d","colors","DropdownInput","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","StyledDropdown","StyledDropdownInput","DropdownArrowIcon","TextInput","obj","TypeError","StyledTextInput","styled","SectionTitleText","device","Text","Title","Normal","sm","md","lg","Bold","xl","Regular","ExtraBold","GlossaryPageContentContainer","Container","HeroSection","HeroInfo","SearchIconContainer","SearchButton","SearchContainer","Alphabet","TermsGroup","TermsContainer","TermFirstLetter","TermsList","termsAmount","css","useOnEnterDown","callback","condition","keyCode","keyFunction","useCallback","event","code","useEffect","document","addEventListener","removeEventListener","useOnKeyDown","termsByAlphabetTemplate","JSON","stringify","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","data","useState","tempSearchString","setTempSearchString","searchString","setSearchString","rawTerms","allMdx","edges","map","edge","mapTermNodeToGlossaryTerm","node","filteredTerms","useLunr","trim","localSearchTerms","_data$localSearchTerm","index","_data$localSearchTerm2","store","terms","getTermsForRender","newState","parse","forEach","term","firstLetter","title","toUpperCase","_newState","push","termsByAlphabet","setTermsByAlphabet","onSearchClick","MetaData","description","TopLevelPageJSONLDSchemas","url","GatsbySeoComponent","canonicalUrl","Layout","disabledContainer","SearchIcon","value","onChange","e","currentTarget","onClick","letter","Link","to","filter","id","item","NoResultsText"],"sourceRoot":""}