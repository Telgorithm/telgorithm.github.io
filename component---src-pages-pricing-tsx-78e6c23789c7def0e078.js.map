{"version":3,"file":"component---src-pages-pricing-tsx-78e6c23789c7def0e078.js","mappings":"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","sources":["webpack://landing/./node_modules/shortid/index.js","webpack://landing/./node_modules/shortid/lib/alphabet.js","webpack://landing/./node_modules/shortid/lib/build.js","webpack://landing/./node_modules/shortid/lib/generate.js","webpack://landing/./node_modules/shortid/lib/index.js","webpack://landing/./node_modules/shortid/lib/is-valid.js","webpack://landing/./node_modules/shortid/lib/random/random-byte-browser.js","webpack://landing/./node_modules/shortid/lib/random/random-from-seed.js","webpack://landing/./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack://landing/./node_modules/shortid/node_modules/nanoid/format.browser.js","webpack://landing/./src/components/common/Icons/Arrows/RightArrow.tsx","webpack://landing/./src/components/common/Link/styled.ts","webpack://landing/./src/components/common/Link/index.tsx","webpack://landing/./src/components/common/Table/index.tsx","webpack://landing/./src/components/common/Table/styled.ts","webpack://landing/./src/components/common/Text/index.tsx","webpack://landing/./src/components/common/Divider/index.tsx","webpack://landing/./src/components/common/NumberInput/index.tsx","webpack://landing/./src/components/pricing/styled.ts","webpack://landing/./src/components/common/Icons/Misc/CheckmarkStamp.tsx","webpack://landing/./src/components/pricing/SignUpWithLink.tsx","webpack://landing/./src/components/pricing/CalculatorSection.tsx","webpack://landing/./src/utils/calculatePrice.ts","webpack://landing/./src/utils/round.ts","webpack://landing/./src/utils/format.ts","webpack://landing/./src/components/pricing/CompoundPrice.tsx","webpack://landing/./src/components/pricing/PriceCalculator.tsx","webpack://landing/./src/components/pricing/Tables.tsx","webpack://landing/./src/components/pricing/TableWithLimitsAndPrices.tsx","webpack://landing/./src/pages/pricing.tsx"],"sourcesContent":["'use strict';\n\nmodule.exports = require('./lib/index');","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\nfunction reset() {\n  shuffled = false;\n}\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n    return;\n  }\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n  alphabet = _alphabet_;\n  reset();\n}\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n  return targetArray.join('');\n}\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n  shuffled = shuffle();\n  return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\nfunction get() {\n  return alphabet || ORIGINAL;\n}\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n  str = str + generate(seconds);\n  return str;\n}\nmodule.exports = build;","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\nfunction generate(number) {\n  var loopCounter = 0;\n  var done;\n  var str = '';\n  while (!done) {\n    str = str + format(random, alphabet.get(), 1);\n    done = number < Math.pow(16, loopCounter + 1);\n    loopCounter++;\n  }\n  return str;\n}\nmodule.exports = generate;","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n  alphabet.seed(seedValue);\n  return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n  clusterWorkerId = workerId;\n  return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n  if (newCharacters !== undefined) {\n    alphabet.characters(newCharacters);\n  }\n  return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;","'use strict';\n\nvar alphabet = require('./alphabet');\nfunction isShortId(id) {\n  if (!id || typeof id !== 'string' || id.length < 6) {\n    return false;\n  }\n  var nonAlphabetic = new RegExp('[^' + alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') + ']');\n  return !nonAlphabetic.test(id);\n}\nmodule.exports = isShortId;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\nif (!crypto || !crypto.getRandomValues) {\n  randomByte = function randomByte(size) {\n    var bytes = [];\n    for (var i = 0; i < size; i++) {\n      bytes.push(Math.floor(Math.random() * 256));\n    }\n    return bytes;\n  };\n} else {\n  randomByte = function randomByte(size) {\n    return crypto.getRandomValues(new Uint8Array(size));\n  };\n}\nmodule.exports = randomByte;","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n  seed = (seed * 9301 + 49297) % 233280;\n  return seed / 233280.0;\n}\nfunction setSeed(_seed_) {\n  seed = _seed_;\n}\nmodule.exports = {\n  nextValue: getNextValue,\n  seed: setSeed\n};","'use strict';\n\nmodule.exports = 0;","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1;\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length);\n  var id = '';\n  while (true) {\n    var bytes = random(step);\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step;\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || '';\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id;\n    }\n  }\n};","import React from \"react\";\nimport {SvgProps} from \"../../../../types\";\n\nconst RightArrow = ({ color } : SvgProps) => {\n  return (\n    <svg\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M18.5371 14.1121L13.2371 8.81213C13.1209 8.69497 12.9827 8.60198 12.8303 8.53852C12.678 8.47506 12.5146 8.44238 12.3496 8.44238C12.1846 8.44238 12.0212 8.47506 11.8689 8.53852C11.7166 8.60198 11.5783 8.69497 11.4621 8.81213C11.2293 9.04633 11.0986 9.36315 11.0986 9.69338C11.0986 10.0236 11.2293 10.3404 11.4621 10.5746L15.8871 14.9996L11.4621 19.4246C11.2293 19.6588 11.0986 19.9756 11.0986 20.3059C11.0986 20.6361 11.2293 20.9529 11.4621 21.1871C11.5789 21.303 11.7174 21.3946 11.8697 21.4568C12.022 21.5191 12.1851 21.5506 12.3496 21.5496C12.5141 21.5506 12.6772 21.5191 12.8295 21.4568C12.9818 21.3946 13.1203 21.303 13.2371 21.1871L18.5371 15.8871C18.6543 15.7709 18.7473 15.6327 18.8107 15.4804C18.8742 15.328 18.9069 15.1646 18.9069 14.9996C18.9069 14.8346 18.8742 14.6712 18.8107 14.5189C18.7473 14.3666 18.6543 14.2283 18.5371 14.1121Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default RightArrow;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { colors } from '../../../utils/colors';\nimport { device } from '../../../utils/layoutBreakpoints';\n\nexport const LinkElementExternal = styled.a<{ color?: string; inline?: boolean }>`\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 22px;\n  color: ${(props) => props.color ?? colors.primary.blue};\n  display: ${(props) => (props.inline ? 'inline' : 'flex')};\n  align-items: center;\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  transition: 0.5s;\n  &:hover {\n    color: ${colors.secondary.orange};\n    transition: 0.5s;\n  }\n`;\n\nexport const LinkElementInternal = styled(Link)<{ color?: string }>`\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 28px;\n  color: ${(props) => props.color ?? colors.primary.blue};\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  line-height: 22px;\n  transition: 0.5s;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  &:hover {\n    color: ${colors.secondary.orange};\n    transition: 0.5s;\n  }\n`;\n","import React, { PropsWithChildren } from 'react';\nimport { LinkElementInternal, LinkElementExternal } from './styled';\nimport RightArrow from '../Icons/Arrows/RightArrow';\nimport { colors } from '../../../utils/colors';\nimport shortid from 'shortid';\n\ntype LinkProps = PropsWithChildren<{\n  address: string;\n  arrow?: boolean;\n  external?: boolean;\n  color?: string;\n  inline?: boolean;\n}>;\n\nconst CustomLink = ({ address, arrow, children, external, color, inline }: LinkProps) => {\n  if (external) {\n    return (\n      <LinkElementExternal\n        href={address}\n        target=\"_blank\"\n        id={shortid.generate()}\n        color={color}\n        rel=\"noreferrer\"\n        inline={inline}\n      >\n        {children}\n        {arrow && <RightArrow color={color ?? colors.primary.blue} />}\n      </LinkElementExternal>\n    );\n  }\n\n  return (\n    <LinkElementInternal to={address} color={color}>\n      {children}\n      {arrow && <RightArrow color={colors.primary.blue} />}\n    </LinkElementInternal>\n  );\n};\n\nexport default CustomLink;\n","import React, {PropsWithChildren} from 'react';\nimport {Table, TableHeader, TableBody, TableRow, TableHeaderCell, TableBodyCell, TableContainer, TableWrapper} from \"./styled\";\n\ntype TableProps = PropsWithChildren<{}>;\n\ntype SubComponents = {\n  Header: typeof TableHeader;\n  Body: typeof TableBody;\n  Row: typeof TableRow;\n  HeaderCell: typeof TableHeaderCell;\n  BodyCell: typeof TableBodyCell;\n  Container: typeof TableContainer;\n  Wrapper: typeof TableWrapper;\n};\n\nconst TableComponent: React.FC<TableProps> & SubComponents = ({children}: TableProps) => {\n  return (\n    <Table>\n      {children}\n    </Table>\n  );\n};\n\nTableComponent.Header = TableHeader;\nTableComponent.Body = TableBody;\nTableComponent.Row = TableRow;\nTableComponent.HeaderCell = TableHeaderCell;\nTableComponent.BodyCell = TableBodyCell;\nTableComponent.Container = TableContainer;\nTableComponent.Wrapper = TableWrapper;\n\nexport default TableComponent;\n","import styled from \"styled-components\";\nimport { device } from \"../../../utils/layoutBreakpoints\";\nimport { colors, opacityToHex } from \"../../../utils/colors\";\n\nexport const TableHeaderCell = styled.th`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 600;\n  line-height: 22px;\n  text-align: left;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableBodyCell = styled.td`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  vertical-align: middle;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  ${TableBodyCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n      border-top-left-radius: 8px;\n      border-bottom-left-radius: 8px;\n    }\n\n    &:last-child {\n      padding-right: 24px;\n      border-top-right-radius: 8px;\n      border-bottom-right-radius: 8px;\n    }\n  }\n\n  ${TableHeaderCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n    }\n  }\n`;\n\nexport const TableHeader = styled.thead``;\n\nexport const TableBody = styled.tbody`\n  ${TableRow}:nth-child(2n+1) {\n    background-color: ${colors.primary.blue + opacityToHex[\"0.1\"]};\n  }\n`;\n\nexport const Table = styled.table`\n  table-layout: fixed;\n\n  @media ${device.laptop} {\n    margin: 0;\n    width: 100%;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  overflow-x: hidden;\n  position: relative;\n  @media ${device.tablet} {\n    width: auto;\n  }\n  @supports (-webkit-touch-callout: none) {\n    &::after {\n      position: absolute;\n      content: \"\";\n      display: block;\n      bottom: 2px;\n      left: 0;\n      width: 100%;\n      height: 5px;\n      background-color: ${colors.primary.gray500};\n      border-radius: 5px;\n      z-index: -1;\n      @media ${device.tablet} {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  overflow-x: scroll;\n  scrollbar-color: ${colors.secondary.gray700};\n  padding-bottom: 10px;\n\n  /* Chrome, Edge, and Safari */\n  &::-webkit-scrollbar {\n    width: 12px;\n    height: 10px !important;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${colors.secondary.gray300};\n    border-radius: 5px;\n    height: 5px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n    border-radius: 10px;\n    height: 5px !important;\n  }\n  &:hover::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n  }\n\n  @media ${device.tablet} {\n    overflow-x: auto;\n    table {\n      min-width: auto;\n    }\n  }\n  table {\n    min-width: 850px;\n    width: 100%;\n    table-layout: auto;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {device} from \"../../../utils/layoutBreakpoints\";\nimport {colors} from \"../../../utils/colors\";\nimport {PropsWithChildren, ReactElement} from \"react\";\n\nexport const SectionTitleText = styled.h2`\n  font-size: 32px;\n  font-family: \"Poppins\";\n  font-weight: 600;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 52px;\n    line-height: 64px;\n  }\n`;\n\nconst TitleBoldMedium = styled.h2`\n  color: ${colors.primary.black};\n  font-size: 22px;\n  font-family: 'Poppins';\n  font-weight: 600;\n  line-height: 28px;\n\n  @media ${device.laptop} {\n    font-size: 32px;\n    line-height: 38px;\n  }\n`;\n\nconst TitleBoldExtraLarge = styled.h1`\n  color: ${colors.primary.black};\n  font-size: 32px;\n  font-family: \"Poppins\";\n  font-weight: 700;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 52px;\n    line-height: 64px;\n  }\n`;\n\nconst RegularNormalSmall = styled.span`\n  color: ${colors.primary.black};\n  font-size: 12px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 14px;\n\n  @media ${device.laptop} {\n    font-size: 14px;\n    line-height: 17px;\n  }\n`;\n\nconst RegularNormalMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nconst RegularBoldMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 500;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nconst RegularBoldLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 18px;\n  font-family: \"Rubik\";\n  font-weight: 500;\n  line-height: 24px;\n\n  @media ${device.laptop} {\n    font-size: 24px;\n    line-height: 32px;\n  }\n`;\n\nconst RegularBoldExtraLarge = styled.span`\n  color: ${colors.primary.black};\n  font-size: 32px;\n  font-family: \"Rubik\";\n  font-weight: 500;\n  line-height: 38px;\n\n  @media ${device.laptop} {\n    font-size: 40px;\n    line-height: 48px;\n  }\n`;\n\nconst RegularExtraBoldMedium = styled.span`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 700;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n`;\n\nexport const Text = {\n  Title: {\n    Normal: {\n      sm: {},\n      md: {},\n      lg: {},\n    },\n    Bold: {\n      sm: {},\n      md: TitleBoldMedium,\n      lg: {},\n      xl: TitleBoldExtraLarge,\n    },\n  },\n  Regular: {\n    Normal: {\n      sm: RegularNormalSmall,\n      md: RegularNormalMedium,\n      lg: {},\n    },\n    Bold: {\n      sm: {},\n      md: RegularBoldMedium,\n      lg: RegularBoldLarge,\n      xl: RegularBoldExtraLarge,\n    },\n    ExtraBold: {\n      sm: {},\n      md: RegularExtraBoldMedium,\n      lg: {},\n    },\n  },\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {colors} from \"../../../utils/colors\";\n\nconst Divider = styled.div`\n  width: 100%;\n  border-bottom: 1px solid ${colors.secondary.gray300};\n`;\n\nexport default Divider;\n","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\n\nconst Input = styled.input<{textAlign?: string}>`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  width: calc(100% - 24px);\n  padding: 6px 12px;\n  text-align: ${props => props.textAlign ?? \"left\"};\n  border: 1px solid #C3C5CD;\n  border-radius: 8px;\n`;\n\ntype NumberInputProps = {\n  onChange?: (value : number | null) => void;\n  initialValue?: number;\n};\n\nconst NumberInput = ({onChange, initialValue} : NumberInputProps) => {\n  const [value, setValue] = useState<string | null>(initialValue ? String(initialValue) : '0');\n\n  const addCommas = (num: number) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  const removeNonNumeric = (num: string) =>\n    num.toString().replace(/[^0-9]/g, \"\");\n\n  const handleChange = (event : React.FormEvent<HTMLInputElement>) => {\n    const stringValue = removeNonNumeric(event.currentTarget.value);\n\n    if (!isNaN(Number(stringValue))) {\n      const number = Number(stringValue);\n      setValue(addCommas(number));\n      onChange && onChange(number);\n    } else {\n      setValue(null);\n      onChange && onChange(null);\n    }\n  }\n\n  return (\n    <Input\n      type=\"text\"\n      value={value ?? ''}\n      onInput={handleChange}\n      maxLength={13}\n      onFocus={(e) => e.currentTarget.select()}\n    />\n  );\n};\n\nexport default NumberInput;\n","import styled from 'styled-components';\nimport { colors } from '../../utils/colors';\nimport { device } from '../../utils/layoutBreakpoints';\nimport { Divider } from '../common';\n\nexport const PricingPageContainer = styled.div`\n  @media ${device.laptop} {\n    padding: 0 100px;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin: 30px 0 40px;\n  text-align: center;\n\n  @media ${device.laptop} {\n  }\n`;\n\nexport const BenefitTitle = styled.h2`\n  background: linear-gradient(\n    90deg,\n    ${colors.primary.lightOrange} 0%,\n    ${colors.secondary.lightRed} 100%\n  );\n  color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n  font-size: 2.4rem;\n  font-family: 'Rubik';\n  font-weight: 700;\n  line-height: 2.5rem;\n  text-transform: uppercase;\n  flex-grow: 1;\n`;\n\nexport const BenefitSubTitle = styled.h3`\n  background: linear-gradient(\n    90deg,\n    ${colors.primary.lightOrange} 0%,\n    ${colors.secondary.lightRed} 100%\n  );\n  color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n  font-size: 1.2rem;\n  font-family: 'Rubik';\n  font-weight: 700;\n  line-height: 1.4rem;\n  text-transform: uppercase;\n`;\n\nexport const BenefitSmallTitle = styled.h4`\n  background: linear-gradient(\n    90deg,\n    ${colors.primary.lightOrange} 0%,\n    ${colors.secondary.lightRed} 100%\n  );\n  color: transparent;\n  background-clip: text;\n  -webkit-background-clip: text;\n  font-size: 0.7rem;\n  font-family: 'Rubik';\n  font-weight: 700;\n  line-height: 0.9rem;\n  text-transform: uppercase;\n  margin-bottom: 0;\n`;\n\nexport const BenefitItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  flex: 1;\n  gap: 10px;\n  & > div {\n    height: 100px;\n  }\n`;\n\nexport const BenefitsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin-bottom: 40px;\n  align-items: center;\n\n  @media ${device.laptop} {\n    align-items: stretch;\n    flex-direction: row;\n    gap: 25px;\n  }\n\n  @media ${device.desktop} {\n    gap: 40px;\n  }\n`;\n\nexport const BenefitsSubBlock = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: row;\n  @media ${device.mobileL} {\n    gap: 40px;\n  }\n  @media ${device.laptop} {\n    gap: 25px;\n  }\n`;\n\nexport const CalculatorBlock = styled.div`\n  background-color: ${colors.secondary.gray100};\n  border-radius: 14px;\n  margin: 40px -30px 0;\n  padding: 30px;\n  @media ${device.laptop} {\n    ${Divider} {\n      position: relative;\n      top: -130px;\n    }\n  }\n  @media ${device.desktop} {\n    padding: 60px;\n  }\n`;\n\nexport const CalculatorDescription = styled.div`\n  margin-top: 16px;\n  margin-bottom: 30px;\n\n  & > * {\n    color: ${colors.primary.gray500};\n  }\n\n  @media ${device.laptop} {\n    max-width: 400px;\n  }\n`;\n\nexport const CalculatorInputWrapper = styled.div`\n  max-width: 105px;\n\n  @media ${device.tablet} {\n    width: 400px;\n    max-width: 400px;\n  }\n\n  @media ${device.laptop} {\n    max-width: 120px;\n  }\n\n  @media ${device.desktop} {\n    max-width: 140px;\n  }\n`;\n\nexport const CalculatorCountingSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-bottom: 30px;\n  padding: 0 8px;\n`;\n\nexport const CalculatorCountingRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CalculatorOurPriceRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nexport const CalculatorCompetitorPriceRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  & * {\n    color: ${colors.primary.gray500};\n  }\n`;\n\nexport const CalculatorRowPrice = styled.div`\n  display: flex;\n  align-items: flex-end;\n\n  & > *:first-child {\n    align-self: flex-start;\n  }\n`;\n\nexport const CalculatorPriceSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-top: 24px;\n\n  @media ${device.laptop} {\n    display: none;\n  }\n`;\n\nexport const DiscountIcon = styled.div`\n  width: 36px;\n`;\n\nexport const DiscountDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nexport const DiscountBlock = styled.div`\n  background-color: ${colors.secondary.azureishWhite};\n  border-radius: 14px;\n  margin: 16px -30px 40px;\n  padding: 30px;\n  display: flex;\n  flex-direction: row;\n  gap: 12px;\n`;\n\nexport const SignUpWithLinkBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  margin-bottom: 48px;\n  @media ${device.laptop} {\n    flex-direction: row;\n    justify-content: center;\n    gap: 40px;\n  }\n`;\n\nexport const FeesDescription = styled.div`\n  text-align: center;\n  a {\n    font-size: unset;\n    display: inline;\n  }\n`;\n\nexport const FeeItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const FeesBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin: 40px 0;\n`;\n\nexport const PromotionButton = styled.button`\n  padding: 10px 24px;\n  background: linear-gradient(90deg, #ff982b 0%, #ff4d49 100%);\n  border: none;\n  border-radius: 20px;\n  min-width: 280px;\n  margin: 0 auto;\n  color: ${colors.primary.white};\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  cursor: pointer;\n`;\n\nexport const FootNotesBlock = styled.div`\n  & > * {\n    color: ${colors.primary.gray500};\n  }\n`;\n\nexport const StyledCompoundPrice = styled.div<{ background: boolean }>`\n  margin-top: -70px;\n  background: ${(props) =>\n    props.background\n      ? 'linear-gradient(180deg, rgba(2, 127, 255, 0) 0%, rgba(2, 127, 255, 0.2) 100%)'\n      : 'none'};\n  border-radius: 16px;\n  padding: 30px;\n  font-size: 0.9rem;\n  min-width: 40%;\n  @media ${device.desktop} {\n    width: 100%;\n  }\n`;\n\nexport const CompoundPriceTitle = styled.p`\n  margin-bottom: 25px;\n  font-size: 0.8rem;\n  font-weight: 700;\n  line-height: 1.3rem;\n`;\nexport const CompoundPriceLocalNumbers = styled.div`\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n`;\n\nexport const CompoundPriceTollFreeNumbers = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n`;\n\nexport const FullPrice = styled.p`\n  margin-top: 60px;\n`;\n\nexport const CalculatorBody = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 25px;\n  @media ${device.desktop} {\n    gap: 100px;\n  }\n`;\n\nexport const CalculatorDataInput = styled.div`\n  width: 100%;\n  @media ${device.laptop} {\n    width: 45%;\n  }\n`;\n\nexport const CalculatorDataOutput = styled.div`\n  display: none;\n  width: 55%;\n  @media ${device.laptop} {\n    display: flex;\n  }\n`;\n\nexport const PromotionButtonDesktopContainer = styled.div`\n  display: none;\n  margin-top: 75px;\n  @media ${device.laptop} {\n    display: flex;\n  }\n`;\n\nexport const TitleWithLogo = styled.span`\n  display: flex;\n  align-items: center;\n  img {\n    width: 16px;\n    height: 16px;\n    margin-right: 5px;\n  }\n`;\n\nexport const PriceCalculatorHints = styled.div`\n  margin: 0 auto;\n  margin-top: 20px;\n  margin-bottom: -10px;\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  gap: 5px;\n  text-align: center;\n  a {\n    font-size: unset;\n    display: inline;\n  }\n\n  @media ${device.desktop} {\n    margin-bottom: -40px;\n  }\n\n  span {\n    font-weight: 500;\n  }\n`;\n","import React from \"react\";\nimport {SvgProps} from \"../../../../types\";\n\nconst CheckmarkStamp = ({ color } : SvgProps) => {\n  return (\n    <svg\n      width=\"36\"\n      height=\"35\"\n      viewBox=\"0 0 36 35\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.5182 34.3636L9.40909 29.0455L3.23182 27.7773L3.92727 21.7636L0 17.1818L3.92727 12.6409L3.23182 6.62727L9.40909 5.35909L12.5182 0L18 2.53636L23.4818 0L26.6318 5.35909L32.7682 6.62727L32.0727 12.6409L36 17.1818L32.0727 21.7636L32.7682 27.7773L26.6318 29.0455L23.4818 34.3636L18 31.8273L12.5182 34.3636ZM16.2409 22.6227L25.5273 13.4182L23.6864 11.7409L16.2409 19.1045L12.3545 15.0545L10.4727 16.8955L16.2409 22.6227Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default CheckmarkStamp;\n","import { SignUpWithLinkBlock } from \"./styled\";\nimport { PrimaryButton } from \"../common/Buttons/Buttons\";\nimport CustomLink from \"../common/Link\";\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../common/Layout/Layout\";\n\nconst SignUpWithLink = () => {\n\n  const appContext = useContext(AppContext);\n\n\n  return (\n    <SignUpWithLinkBlock>\n        <PrimaryButton height=\"auto\" padding=\"13px 90px\"  onClick={() => appContext.getADemoModal.setShowGetADemoModal(true)}>\n          Get a Demo\n        </PrimaryButton>\n      <CustomLink address=\"/contact-us/\" arrow>\n        Talk to an expert\n      </CustomLink>\n    </SignUpWithLinkBlock>\n  );\n};\n\nexport default SignUpWithLink;\n\n","import {CalculatorCountingRow, CalculatorCountingSection, CalculatorInputWrapper} from \"./styled\";\nimport {NumberInput, Text} from \"../common\";\nimport React from \"react\";\n\ntype CalculatorSectionProps = {\n  numbersTitle: string;\n  numberCountOnChange: (value : number | null) => void;\n  smsCountOnChange: (value : number | null) => void;\n  mmsCountOnChange: (value : number | null) => void;\n  numberCountInitialValue: number;\n  smsCountInitialValue: number;\n  mmsCountInitialValue: number;\n};\n\nconst CalculatorSection = (\n  {\n    numbersTitle,\n    numberCountOnChange,\n    smsCountOnChange,\n    mmsCountOnChange,\n    numberCountInitialValue,\n    smsCountInitialValue,\n    mmsCountInitialValue\n  } : CalculatorSectionProps) => (\n  <CalculatorCountingSection>\n    <CalculatorCountingRow>\n      <Text.Regular.Bold.md>\n        {numbersTitle}\n      </Text.Regular.Bold.md>\n      <CalculatorInputWrapper>\n        <NumberInput onChange={numberCountOnChange} initialValue={numberCountInitialValue}/>\n      </CalculatorInputWrapper>\n    </CalculatorCountingRow>\n    <CalculatorCountingRow>\n      <Text.Regular.Normal.md>\n        Outbound SMS\n      </Text.Regular.Normal.md>\n      <CalculatorInputWrapper>\n        <NumberInput onChange={smsCountOnChange} initialValue={smsCountInitialValue}/>\n      </CalculatorInputWrapper>\n    </CalculatorCountingRow>\n    <CalculatorCountingRow>\n      <Text.Regular.Normal.md>\n        Outbound MMS\n      </Text.Regular.Normal.md>\n      <CalculatorInputWrapper>\n        <NumberInput onChange={mmsCountOnChange} initialValue={mmsCountInitialValue}/>\n      </CalculatorInputWrapper>\n    </CalculatorCountingRow>\n  </CalculatorCountingSection>\n);\n\nexport default CalculatorSection;\n","import {PricingItem} from \"../types\";\n\nexport const calculatePrice = (pricingList: PricingItem[], count: number) => {\n  let sum = 0;\n  let countLeft = count;\n\n  for (let i = 0; i < pricingList.length; i++) {\n    const current = pricingList[i];\n\n    if (current.limit !== null && countLeft > current.limit) {\n      sum += current.limit * current.price;\n      countLeft -= current.limit;\n    } else {\n      sum += countLeft * current.price;\n      break;\n    }\n  }\n\n  return sum;\n}\n","export const round = (value : number, digits : number = 0) =>{\n  const multiplier = Math.pow(10, digits);\n  return Math.round(value * multiplier) / multiplier;\n};\n\nexport const toFixedForNumbers = (numbers : number[]):number => {\n  const decimalPartsLength = numbers.map(num => num.toString().split('.')[1]?.length ?? 0)\n  return Math.max(...decimalPartsLength) // counting maximum decimal part of values\n}\n","import {round, toFixedForNumbers} from \"./round\";\n\nconst formatNumber = (value : number, digits : number) => {\n  if (value < 1_000) {\n    return round(value, digits).toString();\n  }\n\n  if (value < 1_000_000) {\n    return `${round(value / 1_000, digits)}K`;\n  }\n\n  if (value < 1_000_000_000) {\n    return `${round(value / 1_000_000, digits)}M`;\n  }\n\n  return `${round(value / 1_000_000_000, digits)}B`;\n}\n\nexport const formatPrice = (value : number, comparableValue: number) : string => {\n  // Round to 3 digits if number less than 100\n  if (value < 100 && comparableValue < 100) {\n    const valueRounded = Math.round((value + Number.EPSILON) * 1000) / 1000;\n    const comparableValueRounded = Math.round((comparableValue + Number.EPSILON) * 1000) / 1000;\n    return valueRounded.toFixed(toFixedForNumbers([valueRounded, comparableValueRounded])).toString();\n  }\n\n  // Round to 1 digit if number less than 10_000\n  if (value < 10_000) {\n    return round(value, 1).toString();\n  }\n\n  // Round to 1 digit for others\n  return formatNumber(value, 1);\n}\n\nexport const formatLimit = (value: number) =>\n  formatNumber(value, 0);\n","import React, { FC } from \"react\";\nimport { formatPrice } from \"../../utils/format\";\nimport {\n  StyledCompoundPrice,\n  CompoundPriceTitle,\n  CompoundPriceLocalNumbers,\n  CompoundPriceTollFreeNumbers,\n  FullPrice,\n  CalculatorRowPrice,\n} from \"./styled\";\nimport { Text } from \"../common\";\n\ninterface Props {\n  title: string | React.ReactElement;\n  currentPrices: {\n    localNumbersPrice: number;\n    localOutboundSmsPrice: number;\n    localOutboundMmsPrice: number;\n    tollFreeNumbersPrice: number;\n    tollFreeOutboundSmsPrice: number;\n    tollFreeOutboundMmmPrice: number;\n    fullPrice: number;\n  };\n  comparablePrices: {\n    localNumbersPrice: number;\n    localOutboundSmsPrice: number;\n    localOutboundMmsPrice: number;\n    tollFreeNumbersPrice: number;\n    tollFreeOutboundSmsPrice: number;\n    tollFreeOutboundMmmPrice: number;\n    fullPrice: number;\n  },\n  isBenefical: boolean;\n}\n\nconst CompoundPrice: FC<Props> = (props) => {\n  const { title, currentPrices, isBenefical, comparablePrices } = props;\n\n  const {\n    localNumbersPrice,\n    localOutboundSmsPrice,\n    localOutboundMmsPrice,\n    tollFreeNumbersPrice,\n    tollFreeOutboundMmmPrice,\n    tollFreeOutboundSmsPrice,\n    fullPrice\n  } = currentPrices;\n\n  return (\n    <StyledCompoundPrice background={isBenefical}>\n      <CompoundPriceTitle>{title}</CompoundPriceTitle>\n      <CompoundPriceLocalNumbers>\n        <p>${formatPrice(localNumbersPrice, comparablePrices.localNumbersPrice)}</p>\n        <p>${formatPrice(localOutboundSmsPrice, comparablePrices.localOutboundSmsPrice)}</p>\n        <p>${formatPrice(localOutboundMmsPrice, comparablePrices.localOutboundMmsPrice)}</p>\n      </CompoundPriceLocalNumbers>\n      <CompoundPriceTollFreeNumbers>\n        <p>${formatPrice(tollFreeNumbersPrice, comparablePrices.tollFreeNumbersPrice)}</p>\n        <p>${formatPrice(tollFreeOutboundSmsPrice, comparablePrices.tollFreeOutboundSmsPrice)}</p>\n        <p>${formatPrice(tollFreeOutboundMmmPrice, comparablePrices.tollFreeOutboundMmmPrice)}</p>\n      </CompoundPriceTollFreeNumbers>\n      <FullPrice>\n        <CalculatorRowPrice>\n          <Text.Regular.Bold.md>$</Text.Regular.Bold.md>\n          <Text.Regular.Bold.xl>{formatPrice(fullPrice, comparablePrices.fullPrice)}</Text.Regular.Bold.xl>\n        </CalculatorRowPrice>\n        <Text.Regular.Bold.md>per month</Text.Regular.Bold.md>\n      </FullPrice>\n    </StyledCompoundPrice>\n  );\n};\n\nexport default CompoundPrice;\n","import React, { useEffect, useState } from 'react';\nimport { calculatePrice } from '../../utils/calculatePrice';\nimport {\n  CalculatorBlock,\n  CalculatorBody,\n  CalculatorCompetitorPriceRow,\n  CalculatorDataInput,\n  CalculatorDataOutput,\n  CalculatorDescription,\n  CalculatorOurPriceRow,\n  CalculatorPriceSection,\n  CalculatorRowPrice,\n  PriceCalculatorHints,\n  PromotionButton,\n  PromotionButtonDesktopContainer,\n  TitleWithLogo,\n} from './styled';\nimport { Divider, Text } from '../common';\nimport { formatPrice } from '../../utils/format';\nimport { CalculatorSection } from './index';\nimport CompoundPrice from './CompoundPrice';\nimport CustomLink from '../common/Link';\nimport { toFixedForNumbers } from '../../utils/round';\nimport TelgorithmLogo from '../../images/Logo/Telgorithm/MobileLogo.svg';\nimport data from '../../../data/Pricing.json';\nimport { PricingCategory } from '../../types';\nimport { InternalLinks } from '../../utils/links';\n\nconst PriceCalculator = () => {\n  const priceCalculatorData = JSON.parse(data.code) as unknown as PricingCategory[];\n\n  const COMPETITOR_10DLC_MMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'COMPETITOR_10DLC_MMS_SENT',\n  )?.pricingItems;\n\n  const COMPETITOR_10DLC_NUMBERS_PURCHASED = priceCalculatorData.find(\n    (category) => category.categoryName === 'COMPETITOR_10DLC_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const COMPETITOR_10DLC_SMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'COMPETITOR_10DLC_SMS_SENT',\n  )?.pricingItems;\n\n  const COMPETITOR_TOLLFREE_MMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'COMPETITOR_TOLLFREE_MMS_SENT',\n  )?.pricingItems;\n\n  const COMPETITOR_TOLLFREE_NUMBERS_PURCHASED = priceCalculatorData.find(\n    (category) => category.categoryName === 'COMPETITOR_TOLLFREE_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const COMPETITOR_TOLLFREE_SMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'COMPETITOR_TOLLFREE_SMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_MMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_NUMBERS_PURCHASED = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_SMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_MMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_NUMBERS_PURCHASED = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_SMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_SENT',\n  )?.pricingItems;\n\n  // Our prices\n  const [our10DlcNumbersPrice, setOur10DlcNumbersPrice] = useState<number>(0);\n  const [our10DlcSmsPrice, setOur10DlcSmsPrice] = useState<number>(0);\n  const [our10DlcMmsPrice, setOur10DlcMmsPrice] = useState<number>(0);\n  const [ourTollFreeNumbersPrice, setOurTollFreeNumbersPrice] = useState<number>(0);\n  const [ourTollFreeSmsPrice, setOurTollFreeSmsPrice] = useState<number>(0);\n  const [ourTollFreeMmsPrice, setOurTollFreeMmsPrice] = useState<number>(0);\n\n  // Competitor prices\n  const [competitor10DlcNumbersPrice, setCompetitor10DlcNumbersPrice] =\n    useState<number>(0);\n  const [competitor10DlcSmsPrice, setCompetitor10DlcSmsPrice] = useState<number>(0);\n  const [competitor10DlcMmsPrice, setCompetitor10DlcMmsPrice] = useState<number>(0);\n  const [competitorTollFreeNumbersPrice, setCompetitorTollFreeNumbersPrice] =\n    useState<number>(0);\n  const [competitorTollFreeSmsPrice, setCompetitorTollFreeSmsPrice] = useState<number>(0);\n  const [competitorTollFreeMmsPrice, setCompetitorTollFreeMmsPrice] = useState<number>(0);\n\n  const handle10DlcNumbersChange = (value: number | null) => {\n    setOur10DlcNumbersPrice(\n      calculatePrice(TELGORITHM_10DLC_NUMBERS_PURCHASED ?? [], value ?? 0),\n    );\n    setCompetitor10DlcNumbersPrice(\n      calculatePrice(COMPETITOR_10DLC_NUMBERS_PURCHASED ?? [], value ?? 0),\n    );\n  };\n  const handle10DlcSmsChange = (value: number | null) => {\n    setOur10DlcSmsPrice(calculatePrice(TELGORITHM_10DLC_SMS_SENT ?? [], value ?? 0));\n    setCompetitor10DlcSmsPrice(\n      calculatePrice(COMPETITOR_10DLC_SMS_SENT ?? [], value ?? 0),\n    );\n  };\n  const handle10DlcMmsChange = (value: number | null) => {\n    setOur10DlcMmsPrice(calculatePrice(TELGORITHM_10DLC_MMS_SENT ?? [], value ?? 0));\n    setCompetitor10DlcMmsPrice(\n      calculatePrice(COMPETITOR_10DLC_MMS_SENT ?? [], value ?? 0),\n    );\n  };\n  const handleTollFreeNumbersChange = (value: number | null) => {\n    setOurTollFreeNumbersPrice(\n      calculatePrice(TELGORITHM_TOLLFREE_NUMBERS_PURCHASED ?? [], value ?? 0),\n    );\n    setCompetitorTollFreeNumbersPrice(\n      calculatePrice(COMPETITOR_TOLLFREE_NUMBERS_PURCHASED ?? [], value ?? 0),\n    );\n  };\n  const handleTollFreeSmsChange = (value: number | null) => {\n    setOurTollFreeSmsPrice(\n      calculatePrice(TELGORITHM_TOLLFREE_SMS_SENT ?? [], value ?? 0),\n    );\n    setCompetitorTollFreeSmsPrice(\n      calculatePrice(COMPETITOR_TOLLFREE_SMS_SENT ?? [], value ?? 0),\n    );\n  };\n  const handleTollFreeMmsChange = (value: number | null) => {\n    setOurTollFreeMmsPrice(\n      calculatePrice(TELGORITHM_TOLLFREE_MMS_SENT ?? [], value ?? 0),\n    );\n    setCompetitorTollFreeMmsPrice(\n      calculatePrice(COMPETITOR_TOLLFREE_MMS_SENT ?? [], value ?? 0),\n    );\n  };\n\n  useEffect(() => {\n    handle10DlcNumbersChange(1000);\n    handle10DlcSmsChange(2000000);\n    handleTollFreeNumbersChange(1000);\n    handleTollFreeSmsChange(800000);\n  }, []);\n\n  const ourPrice =\n    our10DlcNumbersPrice +\n    our10DlcSmsPrice +\n    our10DlcMmsPrice +\n    ourTollFreeNumbersPrice +\n    ourTollFreeSmsPrice +\n    ourTollFreeMmsPrice;\n  const competitorPrice =\n    competitor10DlcNumbersPrice +\n    competitor10DlcSmsPrice +\n    competitor10DlcMmsPrice +\n    competitorTollFreeNumbersPrice +\n    competitorTollFreeSmsPrice +\n    competitorTollFreeMmsPrice;\n  const savePercent = Math.round(((1 - ourPrice / competitorPrice) * 100) / 5) * 5; // round to nearest 5\n\n  const telgorithmTitleWithLogo = (\n    <TitleWithLogo>\n      <img src={TelgorithmLogo} />\n      Telgorithm\n    </TitleWithLogo>\n  );\n\n  return (\n    <CalculatorBlock>\n      <Text.Title.Bold.md>Pricing Calculator</Text.Title.Bold.md>\n      <CalculatorDescription>\n        <Text.Regular.Normal.md>\n          Use this tool to get a general idea of how much you will be spending per month.\n          All prices are estimates.\n        </Text.Regular.Normal.md>\n      </CalculatorDescription>\n      <CalculatorBody>\n        <CalculatorDataInput>\n          <CalculatorSection\n            numbersTitle=\"10DLC (Local numbers)\"\n            numberCountOnChange={handle10DlcNumbersChange}\n            smsCountOnChange={handle10DlcSmsChange}\n            mmsCountOnChange={handle10DlcMmsChange}\n            numberCountInitialValue={1000}\n            smsCountInitialValue={2000000}\n            mmsCountInitialValue={0}\n          />\n          <CalculatorSection\n            numbersTitle=\"Toll-Free numbers\"\n            numberCountOnChange={handleTollFreeNumbersChange}\n            smsCountOnChange={handleTollFreeSmsChange}\n            mmsCountOnChange={handleTollFreeMmsChange}\n            numberCountInitialValue={1000}\n            smsCountInitialValue={800000}\n            mmsCountInitialValue={0}\n          />\n          <PromotionButtonDesktopContainer>\n            <CustomLink address={'/contact-us/'}>\n              <PromotionButton>\n                {savePercent ? `Save about ${savePercent}%` : 'Contact us'}\n              </PromotionButton>\n            </CustomLink>\n          </PromotionButtonDesktopContainer>\n        </CalculatorDataInput>\n        <CalculatorDataOutput>\n          <CompoundPrice\n            title={telgorithmTitleWithLogo}\n            currentPrices={{\n              localNumbersPrice: our10DlcNumbersPrice,\n              localOutboundSmsPrice: our10DlcSmsPrice,\n              localOutboundMmsPrice: our10DlcMmsPrice,\n              tollFreeNumbersPrice: ourTollFreeNumbersPrice,\n              tollFreeOutboundSmsPrice: ourTollFreeSmsPrice,\n              tollFreeOutboundMmmPrice: ourTollFreeMmsPrice,\n              fullPrice: ourPrice,\n            }}\n            comparablePrices={{\n              localNumbersPrice: competitor10DlcNumbersPrice,\n              localOutboundSmsPrice: competitor10DlcSmsPrice,\n              localOutboundMmsPrice: competitor10DlcMmsPrice,\n              tollFreeNumbersPrice: competitorTollFreeNumbersPrice,\n              tollFreeOutboundSmsPrice: competitorTollFreeSmsPrice,\n              tollFreeOutboundMmmPrice: competitorTollFreeMmsPrice,\n              fullPrice: competitorPrice,\n            }}\n            isBenefical={true}\n          />\n          <CompoundPrice\n            title=\"Leading Competitor\"\n            currentPrices={{\n              localNumbersPrice: competitor10DlcNumbersPrice,\n              localOutboundSmsPrice: competitor10DlcSmsPrice,\n              localOutboundMmsPrice: competitor10DlcMmsPrice,\n              tollFreeNumbersPrice: competitorTollFreeNumbersPrice,\n              tollFreeOutboundSmsPrice: competitorTollFreeSmsPrice,\n              tollFreeOutboundMmmPrice: competitorTollFreeMmsPrice,\n              fullPrice: competitorPrice,\n            }}\n            comparablePrices={{\n              localNumbersPrice: our10DlcNumbersPrice,\n              localOutboundSmsPrice: our10DlcSmsPrice,\n              localOutboundMmsPrice: our10DlcMmsPrice,\n              tollFreeNumbersPrice: ourTollFreeNumbersPrice,\n              tollFreeOutboundSmsPrice: ourTollFreeSmsPrice,\n              tollFreeOutboundMmmPrice: ourTollFreeMmsPrice,\n              fullPrice: ourPrice,\n            }}\n            isBenefical={false}\n          />\n        </CalculatorDataOutput>\n      </CalculatorBody>\n      <Divider />\n      <CalculatorPriceSection>\n        <CalculatorOurPriceRow>\n          <Text.Regular.ExtraBold.md>{telgorithmTitleWithLogo}</Text.Regular.ExtraBold.md>\n          <CalculatorRowPrice>\n            <Text.Regular.Bold.md>$</Text.Regular.Bold.md>\n            <Text.Regular.Bold.xl>\n              {formatPrice(ourPrice, competitorPrice)}\n            </Text.Regular.Bold.xl>\n            <Text.Regular.Bold.md>/mo</Text.Regular.Bold.md>\n          </CalculatorRowPrice>\n        </CalculatorOurPriceRow>\n        <CalculatorCompetitorPriceRow>\n          <Text.Regular.ExtraBold.md>Leading Competitor</Text.Regular.ExtraBold.md>\n          <CalculatorRowPrice>\n            <Text.Regular.Bold.md>$</Text.Regular.Bold.md>\n            <Text.Regular.Bold.xl>\n              {formatPrice(competitorPrice, ourPrice)}\n            </Text.Regular.Bold.xl>\n            <Text.Regular.Bold.md>/mo</Text.Regular.Bold.md>\n          </CalculatorRowPrice>\n        </CalculatorCompetitorPriceRow>\n        <CustomLink address={'/contact-us/'}>\n          <PromotionButton>\n            {savePercent ? `Save about ${savePercent}%` : 'Contact us'}\n          </PromotionButton>\n        </CustomLink>\n      </CalculatorPriceSection>\n      <PriceCalculatorHints>\n        <Text.Regular.Normal.md>\n          Pricing estimates do not include{' '}\n          <CustomLink address={InternalLinks.CarrierFees}>\n            carrier pass-through fees.\n          </CustomLink>\n        </Text.Regular.Normal.md>\n      </PriceCalculatorHints>\n    </CalculatorBlock>\n  );\n};\n\nexport default PriceCalculator;\n","import {Table} from \"../common\";\nimport React from \"react\";\n\nexport const MonthlyRecurringTable = () => (\n  <Table>\n    <Table.Header>\n      <Table.Row>\n        <Table.HeaderCell>\n          Number Type\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          First 1K Numbers\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          Above 1K Numbers\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n    <Table.Body>\n      <Table.Row>\n        <Table.BodyCell>Local Numbers</Table.BodyCell>\n        <Table.BodyCell>$0.5000 / num</Table.BodyCell>\n        <Table.BodyCell>$0.2500 / num</Table.BodyCell>\n      </Table.Row>\n      <Table.Row>\n        <Table.BodyCell>Toll-free Numbers</Table.BodyCell>\n        <Table.BodyCell>$1.0000 / num</Table.BodyCell>\n        <Table.BodyCell>$0.7500 / num</Table.BodyCell>\n      </Table.Row>\n    </Table.Body>\n  </Table>\n);\n\nexport const CallForwardingTable = () => (\n  <Table>\n    <Table.Body>\n      <Table.Row>\n        <Table.BodyCell>Local Numbers</Table.BodyCell>\n        <Table.BodyCell>$0.0195 / minute</Table.BodyCell>\n        <Table.BodyCell></Table.BodyCell>\n      </Table.Row>\n    </Table.Body>\n  </Table>\n);\n\nexport const NumberLookUpTable = () => (\n  <Table>\n    <Table.Body>\n      <Table.Row>\n        <Table.BodyCell>Local & Toll-Free Num</Table.BodyCell>\n        <Table.BodyCell>$0.0009 / num</Table.BodyCell>\n        <Table.BodyCell></Table.BodyCell>\n      </Table.Row>\n    </Table.Body>\n  </Table>\n);\n","import React from \"react\";\nimport { Table } from \"../common\";\nimport { formatLimit } from \"../../utils/format\";\nimport { round } from \"../../utils/round\";\nimport { PricingItem } from \"../../types\";\n\ntype TableWIthLimitsAndPricesProps = {\n  titleHeader: string;\n  firstColumnHeader: string;\n  secondColumnHeader: string;\n  firstList: PricingItem[];\n  secondList: PricingItem[];\n  messageType: \"SMS\" | \"MMS\";\n};\n\nconst TableWithLimitsAndPrices = ({\n  titleHeader,\n  firstColumnHeader,\n  secondColumnHeader,\n  firstList,\n  secondList,\n  messageType,\n}: TableWIthLimitsAndPricesProps) => {\n  const limitSum = firstList.reduce((accumulator, item) => {\n    return accumulator + (item.limit ?? 0);\n  }, 0);\n  const rowCount = firstList.length;\n\n  return (\n    <Table.Container>\n      <Table.Wrapper>\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>{titleHeader}</Table.HeaderCell>\n              <Table.HeaderCell>{firstColumnHeader}</Table.HeaderCell>\n              <Table.HeaderCell>{secondColumnHeader}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {firstList.map((first, index) => {\n              const second = secondList[index];\n              const title =\n                index === 0\n                  ? `First ${formatLimit(first.limit ?? 0)} messages`\n                  : index === rowCount - 1\n                  ? `Above ${formatLimit(limitSum)} messages`\n                  : `Next ${formatLimit(first.limit ?? 0)} messages`;\n              const firstPrice =\n                first.price === 0\n                  ? \"Free\"\n                  : `$${round(first.price, 5).toFixed(5)} / ${messageType}`;\n              const secondPrice =\n                second.price === 0\n                  ? \"Free\"\n                  : `$${round(second.price, 5).toFixed(5)} / ${messageType}`;\n\n              return (\n                <Table.Row key={index}>\n                  <Table.BodyCell>{title}</Table.BodyCell>\n                  <Table.BodyCell>{firstPrice}</Table.BodyCell>\n                  <Table.BodyCell>{secondPrice}</Table.BodyCell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n        </Table>\n      </Table.Wrapper>\n    </Table.Container>\n  );\n};\n\nexport default TableWithLimitsAndPrices;\n","import React from 'react';\nimport { Divider, Layout, Text } from '../components/common';\nimport {\n  BenefitsBlock,\n  BenefitItem,\n  TitleBlock,\n  BenefitTitle,\n  BenefitSubTitle,\n  DiscountBlock,\n  DiscountDescription,\n  DiscountIcon,\n  FeesBlock,\n  FeesDescription,\n  FeeItem,\n  PricingPageContainer,\n  BenefitSmallTitle,\n  BenefitsSubBlock,\n} from '../components/pricing/styled';\nimport CheckmarkStamp from '../components/common/Icons/Misc/CheckmarkStamp';\nimport { colors } from '../utils/colors';\nimport {\n  CallForwardingTable,\n  MonthlyRecurringTable,\n  NumberLookUpTable,\n  PriceCalculator,\n  SignUpWithLink,\n  TableWithLimitsAndPrices,\n} from '../components/pricing';\nimport data from '../../data/Pricing.json';\nimport { PricingCategory } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport CustomLink from '../components/common/Link';\nimport { InternalLinks } from '../utils/links';\n\nconst Pricing = () => {\n  const pricingData = JSON.parse(data.code) as unknown as PricingCategory[];\n\n  const TELGORITHM_10DLC_MMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_MMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_RECEIVED',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_SMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_SMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_RECEIVED',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_MMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_MMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_RECEIVED',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_SMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_SMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_RECEIVED',\n  )?.pricingItems;\n\n  return (\n    <>\n      <MetaData\n        title=\"Pricing | Telgorithm\"\n        description=\"At Telgorithm, we offer unbeatable SMS API pricing. Start saving up to 40% less on 10DLC and 20% on toll-free messaging today.\"\n      />\n      <TopLevelPageJSONLDSchemas />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/pricing/\" />\n      <Layout>\n        <PricingPageContainer>\n          <TitleBlock>\n            <Text.Title.Bold.xl>Unbeatable pricing.</Text.Title.Bold.xl>\n            <Text.Regular.Bold.lg>\n              Now more than ever, it's important for businesses to invest in software that\n              performs. We know ours does, so we offer unbeatable pricing so you can feel\n              confident in trying it out – what do you have to lose?\n            </Text.Regular.Bold.lg>\n          </TitleBlock>\n        </PricingPageContainer>\n        <BenefitsBlock>\n          <BenefitsSubBlock>\n            <BenefitItem>\n              <div>\n                <BenefitSmallTitle>UP TO</BenefitSmallTitle>\n                <BenefitTitle>40%</BenefitTitle>\n                <BenefitSubTitle>less</BenefitSubTitle>\n              </div>\n              <Text.Regular.Normal.md>\n                on local (10DLC) SMS & MMS messaging vs. leading competitors\n              </Text.Regular.Normal.md>\n            </BenefitItem>\n            <BenefitItem>\n              <div>\n                <BenefitSmallTitle>UP TO</BenefitSmallTitle>\n                <BenefitTitle>20%</BenefitTitle>\n                <BenefitSubTitle>less</BenefitSubTitle>\n              </div>\n              <Text.Regular.Normal.md>\n                on toll-free SMS & MMS messaging vs. leading competitors\n              </Text.Regular.Normal.md>\n            </BenefitItem>\n          </BenefitsSubBlock>\n          <BenefitItem>\n            <div>\n              <BenefitTitle>Customized</BenefitTitle>\n              <BenefitTitle>Contracts</BenefitTitle>\n            </div>\n            <Text.Regular.Normal.md>created to serve your needs</Text.Regular.Normal.md>\n          </BenefitItem>\n          <BenefitItem>\n            <div>\n              <BenefitTitle>Contract</BenefitTitle>\n              <BenefitTitle>Buyouts</BenefitTitle>\n            </div>\n            <Text.Regular.Normal.md>\n              empowering you to make the best decision for your business\n            </Text.Regular.Normal.md>\n          </BenefitItem>\n        </BenefitsBlock>\n        <Divider />\n        <PricingPageContainer>\n          <PriceCalculator />\n          <DiscountBlock>\n            <DiscountIcon>\n              <CheckmarkStamp color={colors.secondary.maximumBlue} />\n            </DiscountIcon>\n            <DiscountDescription>\n              <Text.Title.Bold.md>Committed-use discount</Text.Title.Bold.md>\n              <Text.Regular.Normal.md>\n                Commit to a monthly volume and receive an additional discount beyond\n                standard pricing.\n              </Text.Regular.Normal.md>\n            </DiscountDescription>\n          </DiscountBlock>\n          <SignUpWithLink />\n          <Divider />\n          <FeesBlock>\n            <FeesDescription>\n              <Text.Regular.Bold.md>\n                These are the fees Telgorithm charges to cover the costs of its service.\n                <br />\n                All prices are for United States and Canada numbers. Pricing is not\n                inclusive of{' '}\n                <CustomLink address={InternalLinks.CarrierFees}>\n                  carrier pass-through fees.\n                </CustomLink>\n              </Text.Regular.Bold.md>\n            </FeesDescription>\n            <FeeItem>\n              <Text.Title.Bold.md>Monthly Recurring Number Pricing</Text.Title.Bold.md>\n              <MonthlyRecurringTable />\n            </FeeItem>\n            <FeeItem>\n              <Text.Title.Bold.md>Call Forwarding Pricing</Text.Title.Bold.md>\n              <CallForwardingTable />\n            </FeeItem>\n            <FeeItem>\n              <Text.Title.Bold.md>Number Verification Pricing</Text.Title.Bold.md>\n              <NumberLookUpTable />\n            </FeeItem>\n            <FeeItem>\n              <Text.Title.Bold.md>10DLC (Local Number) SMS Pricing</Text.Title.Bold.md>\n              <TableWithLimitsAndPrices\n                titleHeader=\"Monthly Text Volume\"\n                firstColumnHeader=\"Message Received\"\n                secondColumnHeader=\"Message Sent\"\n                firstList={TELGORITHM_10DLC_SMS_RECEIVED ?? []}\n                secondList={TELGORITHM_10DLC_SMS_SENT ?? []}\n                messageType=\"SMS\"\n              />\n            </FeeItem>\n            <FeeItem>\n              <Text.Title.Bold.md>10DLC (Local Number) MMS Pricing</Text.Title.Bold.md>\n              <TableWithLimitsAndPrices\n                titleHeader=\"Monthly Text Volume\"\n                firstColumnHeader=\"Message Received\"\n                secondColumnHeader=\"Message Sent\"\n                firstList={TELGORITHM_10DLC_MMS_RECEIVED ?? []}\n                secondList={TELGORITHM_10DLC_MMS_SENT ?? []}\n                messageType=\"MMS\"\n              />\n            </FeeItem>\n            <FeeItem>\n              <Text.Title.Bold.md>Toll-Free Number SMS Pricing</Text.Title.Bold.md>\n              <TableWithLimitsAndPrices\n                titleHeader=\"Monthly Text Volume\"\n                firstColumnHeader=\"Message Received\"\n                secondColumnHeader=\"Message Sent\"\n                firstList={TELGORITHM_TOLLFREE_SMS_RECEIVED ?? []}\n                secondList={TELGORITHM_TOLLFREE_SMS_SENT ?? []}\n                messageType=\"SMS\"\n              />\n            </FeeItem>\n            <FeeItem>\n              <Text.Title.Bold.md>Toll-Free Number MMS Pricing</Text.Title.Bold.md>\n              <TableWithLimitsAndPrices\n                titleHeader=\"Monthly Text Volume\"\n                firstColumnHeader=\"Message Received\"\n                secondColumnHeader=\"Message Sent\"\n                firstList={TELGORITHM_TOLLFREE_MMS_RECEIVED ?? []}\n                secondList={TELGORITHM_TOLLFREE_MMS_SENT ?? []}\n                messageType=\"MMS\"\n              />\n            </FeeItem>\n          </FeesBlock>\n          <SignUpWithLink />\n        </PricingPageContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default Pricing;\n"],"names":["module","exports","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","number","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","id","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step","color","React","width","height","viewBox","fill","xmlns","d","LinkElementExternal","styled","props","colors","inline","device","LinkElementInternal","Link","address","arrow","children","external","href","target","shortid","rel","RightArrow","to","TableComponent","Table","Header","TableHeader","Body","TableBody","Row","TableRow","HeaderCell","TableHeaderCell","BodyCell","TableBodyCell","Container","TableContainer","Wrapper","TableWrapper","opacityToHex","SectionTitleText","Text","Title","Normal","sm","md","lg","Bold","xl","Regular","ExtraBold","Input","textAlign","onChange","initialValue","useState","String","value","setValue","type","onInput","event","stringValue","currentTarget","toString","isNaN","Number","num","addCommas","maxLength","onFocus","e","select","PricingPageContainer","TitleBlock","BenefitTitle","BenefitSubTitle","BenefitSmallTitle","BenefitItem","BenefitsBlock","BenefitsSubBlock","CalculatorBlock","Divider","CalculatorDescription","CalculatorInputWrapper","CalculatorCountingSection","CalculatorCountingRow","CalculatorOurPriceRow","CalculatorCompetitorPriceRow","CalculatorRowPrice","CalculatorPriceSection","DiscountIcon","DiscountDescription","DiscountBlock","SignUpWithLinkBlock","FeesDescription","FeeItem","FeesBlock","PromotionButton","StyledCompoundPrice","background","CompoundPriceTitle","CompoundPriceLocalNumbers","CompoundPriceTollFreeNumbers","FullPrice","CalculatorBody","CalculatorDataInput","CalculatorDataOutput","PromotionButtonDesktopContainer","TitleWithLogo","PriceCalculatorHints","appContext","useContext","AppContext","PrimaryButton","padding","onClick","getADemoModal","setShowGetADemoModal","CustomLink","numbersTitle","numberCountOnChange","smsCountOnChange","mmsCountOnChange","numberCountInitialValue","smsCountInitialValue","mmsCountInitialValue","NumberInput","calculatePrice","pricingList","count","sum","countLeft","current","limit","price","round","digits","multiplier","formatNumber","formatPrice","comparableValue","valueRounded","EPSILON","comparableValueRounded","toFixed","numbers","decimalPartsLength","map","_num$toString$split$2","max","formatLimit","title","currentPrices","isBenefical","comparablePrices","localNumbersPrice","localOutboundSmsPrice","localOutboundMmsPrice","tollFreeNumbersPrice","tollFreeOutboundMmmPrice","tollFreeOutboundSmsPrice","fullPrice","priceCalculatorData","JSON","parse","data","COMPETITOR_10DLC_MMS_SENT","find","category","categoryName","_priceCalculatorData$","pricingItems","COMPETITOR_10DLC_NUMBERS_PURCHASED","_priceCalculatorData$2","COMPETITOR_10DLC_SMS_SENT","_priceCalculatorData$3","COMPETITOR_TOLLFREE_MMS_SENT","_priceCalculatorData$4","COMPETITOR_TOLLFREE_NUMBERS_PURCHASED","_priceCalculatorData$5","COMPETITOR_TOLLFREE_SMS_SENT","_priceCalculatorData$6","TELGORITHM_10DLC_MMS_SENT","_priceCalculatorData$7","TELGORITHM_10DLC_NUMBERS_PURCHASED","_priceCalculatorData$8","TELGORITHM_10DLC_SMS_SENT","_priceCalculatorData$9","TELGORITHM_TOLLFREE_MMS_SENT","_priceCalculatorData$10","TELGORITHM_TOLLFREE_NUMBERS_PURCHASED","_priceCalculatorData$11","TELGORITHM_TOLLFREE_SMS_SENT","_priceCalculatorData$12","our10DlcNumbersPrice","setOur10DlcNumbersPrice","our10DlcSmsPrice","setOur10DlcSmsPrice","our10DlcMmsPrice","setOur10DlcMmsPrice","ourTollFreeNumbersPrice","setOurTollFreeNumbersPrice","ourTollFreeSmsPrice","setOurTollFreeSmsPrice","ourTollFreeMmsPrice","setOurTollFreeMmsPrice","competitor10DlcNumbersPrice","setCompetitor10DlcNumbersPrice","competitor10DlcSmsPrice","setCompetitor10DlcSmsPrice","competitor10DlcMmsPrice","setCompetitor10DlcMmsPrice","competitorTollFreeNumbersPrice","setCompetitorTollFreeNumbersPrice","competitorTollFreeSmsPrice","setCompetitorTollFreeSmsPrice","competitorTollFreeMmsPrice","setCompetitorTollFreeMmsPrice","handle10DlcNumbersChange","handle10DlcSmsChange","handleTollFreeNumbersChange","handleTollFreeSmsChange","useEffect","ourPrice","competitorPrice","savePercent","telgorithmTitleWithLogo","src","TelgorithmLogo","CalculatorSection","CompoundPrice","InternalLinks","MonthlyRecurringTable","CallForwardingTable","NumberLookUpTable","titleHeader","firstColumnHeader","secondColumnHeader","firstList","secondList","messageType","limitSum","reduce","accumulator","rowCount","first","second","firstPrice","secondPrice","key","pricingData","_pricingData$find","TELGORITHM_10DLC_MMS_RECEIVED","_pricingData$find2","_pricingData$find3","TELGORITHM_10DLC_SMS_RECEIVED","_pricingData$find4","_pricingData$find5","TELGORITHM_TOLLFREE_MMS_RECEIVED","_pricingData$find6","_pricingData$find7","TELGORITHM_TOLLFREE_SMS_RECEIVED","_pricingData$find8","MetaData","description","TopLevelPageJSONLDSchemas","GatsbySeoComponent","canonicalUrl","Layout","PriceCalculator","CheckmarkStamp","SignUpWithLink","TableWithLimitsAndPrices"],"sourceRoot":""}