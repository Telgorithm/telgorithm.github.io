"use strict";(self.webpackChunklanding=self.webpackChunklanding||[]).push([[4177],{5013:function(e,t,n){n.r(t),n.d(t,{default:function(){return f}});var a=n(1151),r=n(7294);function l(e){const t=Object.assign({p:"p"},(0,a.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(t.p,null,"When messages are being “capped,” they are being sent to the Carriers at the lowest speed of all your Campaigns. This approach to avoiding exceeding throughput limits can work if you have a single Brand (your customer) and a single Campaign (their messaging use case) to send to at a time. The problem is  the majority of SaaS businesses offering SMS and MMS messaging to their customers have many – hundreds to thousands – Brands and Campaigns, and when an API provider caps, they’re doing it across the board for all of those Brands and Campaigns."),"\n",r.createElement(t.p,null,"Messages are therefore delivered with unwanted delays, regardless of the sender’s use case (which can range anywhere from a Black Friday marketing blast to two-way communication with customer care to an emergency notification)."))}var o=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?r.createElement(t,e,r.createElement(l,e)):l(e)},i=n(1883),s=n(4593),c=n(8657),m=n(4428),d=n(1520),u=n(4071),g=n(3025),p=n(9160),h=n(4406),E=n(9833);const v=e=>{var t,n,a,l,o,v,f;let{data:w,children:y}=e;const{title:x}=null===(t=w.mdx)||void 0===t?void 0:t.frontmatter,b=null==w||null===(n=w.mdx)||void 0===n?void 0:n.excerpt,k=w.allMdx.edges.map((e=>(0,E.oO)(e.node))),C=k.findIndex((e=>{var t;return e.id===(null===(t=w.mdx)||void 0===t?void 0:t.id)})),B=null!==(a=k[C+1])&&void 0!==a?a:k[0];return r.createElement(r.Fragment,null,r.createElement(s.q,{title:x+" | Telgorithm"},r.createElement("meta",{property:"og:title",content:x}),r.createElement("meta",{property:"twitter:title",content:x}),r.createElement("meta",{name:"description",content:b}),r.createElement("meta",{property:"og:description",content:b}),r.createElement("meta",{property:"twitter:description",content:b})),r.createElement(u.MQ,{url:"https://www.telgorithm.com/glossary/"+(null===(l=w.mdx)||void 0===l||null===(o=l.fields)||void 0===o?void 0:o.slug)}),r.createElement(u.Kb,{canonicalUrl:"https://www.telgorithm.com/glossary/"+(null===(v=w.mdx)||void 0===v||null===(f=v.fields)||void 0===f?void 0:f.slug)}),r.createElement(m.Z,{disabledContainer:!0},r.createElement(g.Wn,null,r.createElement(g.x8,null),r.createElement(g.CV,null,r.createElement(g.sZ,null,r.createElement(h.xv.Regular.Normal.md,null,"Term"),r.createElement(h.xv.Title.Bold.md,null,x)),r.createElement(g.rP,null,r.createElement(h.xv.Regular.Normal.md,null,"Definition"),r.createElement(g.SB,null,y)),r.createElement(g.$q,null,r.createElement(i.Link,{to:p.H.Glossary},r.createElement(c.K,null,"Back To Glossary")),r.createElement(d.Z,{arrow:!0,address:null==B?void 0:B.url},"View Next Term"))))))};function f(e){return r.createElement(v,e,r.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-templates-term-tsx-content-file-path-terms-capping-index-md-186a6906616fee619282.js.map