{"version":3,"file":"component---src-pages-news-tsx-a570eca57bcc4e318259.js","mappings":"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","sources":["webpack://landing/./src/components/news/styled.ts","webpack://landing/./src/components/news/index.tsx","webpack://landing/./src/pages/news.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { colors } from '../../utils/colors';\nimport { device } from '../../utils/layoutBreakpoints';\nimport {\n  ClipLoaderContainer,\n  StyledSubscribeBlock,\n  SubscribeBlockContent,\n  SubscribeForm,\n} from '../common/SubscribeBlock/styled';\n\nexport const StyledNewsPageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  margin-bottom: 50px;\n  align-items: flex-start;\n  gap: 15px;\n  flex-direction: column;\n  @media ${device.tablet} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  input {\n    border: none;\n    outline: none;\n    font-size: 0.9rem;\n    &::placeholder {\n      color: ${colors.primary.gray500};\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nexport const InlineSubscribeBlock = styled.div`\n  ${StyledSubscribeBlock} {\n    min-height: 445px;\n    @media ${device.laptop} {\n      padding: 60px 60px 20px;\n    }\n\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    @media ${device.laptop} {\n      flex-direction: row;\n    }\n  }\n\n  ${SubscribeBlockContent} {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  ${SubscribeForm} {\n    width: 50%;\n  }\n\n  ${ClipLoaderContainer} {\n    height: unset;\n    width: 50%;\n  }\n`;\n\nexport const MobileInlineSubscribeBlock = styled.div`\n  ${StyledSubscribeBlock} {\n    min-height: 500px;\n  }\n`;\n","import React, { FC } from \"react\";\nimport { Text } from \"../common\";\nimport SearchIcon from \"../common/Icons/SearchIcon/SearchIcon\";\nimport { SearchInput, StyledNewsPageHeader } from \"./styled\";\n\ninterface Props {\n  searchString: string;\n  setSearchString: (value: string) => void;\n}\n\nexport const NewsPageHeader: FC<Props> = ({\n  searchString,\n  setSearchString,\n}) => {\n  return (\n    <StyledNewsPageHeader>\n      <div>\n        <Text.Title.Bold.lg>Telgorithm Blog</Text.Title.Bold.lg>\n      </div>\n      <SearchInput>\n        <SearchIcon />\n        <input\n          type=\"text\"\n          placeholder=\"Search articles\"\n          value={searchString}\n          onChange={(e) => setSearchString(e.currentTarget.value)}\n        ></input>\n      </SearchInput>\n    </StyledNewsPageHeader>\n  );\n};\n","import * as React from 'react';\nimport Layout from '../components/common/Layout/Layout';\nimport ArticleCardItem, {\n  CardSize,\n} from '../components/common/ArticleCardItem/ArticleCardItem';\nimport { NewsPageHeader } from '../components/news';\nimport { graphql, PageProps } from 'gatsby';\nimport { mapArticleNodeToArticlePreviewInfo } from '../mappers';\nimport { useLunr } from 'react-lunr';\nimport { ArticlePreviewInfo } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport {\n  ArticleListContentContainer,\n  ArticleList,\n  DesktopCardsContainer,\n  MediumCards,\n  MobileCardsContainer,\n  NoResultsText,\n  SmallCards,\n  SmallCardWrapper,\n} from '../components/common/styled';\nimport { useInView } from 'react-cool-inview';\nimport useWindowSize, { isDesktop } from '../hooks/useWindowSize';\nimport { StaticPageFrontmatter } from '../types/StaticPageFrontmatter';\nimport SubscribeBlock from '../components/common/SubscribeBlock';\nimport { InlineSubscribeBlock, MobileInlineSubscribeBlock } from '../components/news/styled';\n\nconst NewsPage = ({ data }: PageProps<Queries.NewsPageQuery>) => {\n  const [searchString, setSearchString] = React.useState<string>('');\n  const [articlesForRenderAmount, setArticlesForRenderAmount] = React.useState(10);\n\n  const rawNews: ArticlePreviewInfo[] = React.useMemo(() => {\n    return data.allMdx.edges.map((edge) => mapArticleNodeToArticlePreviewInfo(edge.node));\n  }, []);\n\n  const filteredNews: ArticlePreviewInfo[] = useLunr(\n    searchString\n      .trim()\n      .split(' ')\n      .map((word) => `${word} ${word}*`)\n      .join(' '),\n    data.localSearchNews?.index,\n    data.localSearchNews?.store,\n  ) as ArticlePreviewInfo[];\n\n  const news = searchString\n    ? filteredNews.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    : rawNews;\n\n  const sortedNews = [\n    ...news\n      .filter((article) => article.sortByUpdatedDate)\n      .sort(\n        (a, b) =>\n          new Date(b.lastUpdatedOn).getTime() - new Date(a.lastUpdatedOn).getTime(),\n      ),\n    ...news.filter((article) => !article.sortByUpdatedDate),\n  ];\n\n  const separatedNewsByCardSize = {\n    largeCard: sortedNews.slice(0, 1),\n    mediumCards: sortedNews.slice(1, 5),\n    smallCards: sortedNews.slice(5, articlesForRenderAmount),\n  };\n\n  const { observe } = useInView({\n    // For better UX, we can grow the root margin so the data will be loaded earlier\n    rootMargin: '50px 0px',\n    // When the last item comes to the viewport\n    onEnter: () => {\n      setArticlesForRenderAmount((st) => st + 5);\n    },\n  });\n\n  const windowSize = useWindowSize();\n  const isDesktopScreen = isDesktop(windowSize.width as number);\n\n  const title = 'Blog | Telgorithm';\n\n  return (\n    <>\n      <MetaData\n        title={title}\n        description=\"Stay up to date on the latest news in A2P SMS and 10DLC and learn what it takes to provide the next level of business messaging experiences for your customers.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/news/\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/news/\" title={title} />\n      <Layout>\n        <ArticleListContentContainer>\n          <NewsPageHeader searchString={searchString} setSearchString={setSearchString} />\n          {sortedNews.length ? (\n            <ArticleList>\n              <DesktopCardsContainer>\n                {separatedNewsByCardSize.largeCard.map((articleItem) => (\n                  <ArticleCardItem\n                    article={articleItem}\n                    key={articleItem.articleId}\n                    cardSize={CardSize.L}\n                  />\n                ))}\n                {separatedNewsByCardSize.mediumCards.length > 0 && (\n                  <MediumCards>\n                    {separatedNewsByCardSize.mediumCards.map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                )}\n                {sortedNews.length >= 5 && (\n                  <InlineSubscribeBlock>\n                    <SubscribeBlock\n                      showBulbIcon={false}\n                      containerId=\"desktopBlogSubscribeForm\"\n                      title=\"Subscribe to our newsletter.\"\n                      description=\"Receive updates from our team including latest industry news, upcoming webinars, 10DLC tips & more.\"\n                    />\n                  </InlineSubscribeBlock>\n                )}\n                {isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                  <SmallCards>\n                    <>\n                      {separatedNewsByCardSize.smallCards.map(\n                        (articleItem, index, arr) => (\n                          <SmallCardWrapper\n                            ref={\n                              (index === arr.length - 1 ? observe : null) as (\n                                element?: any,\n                              ) => void\n                            }\n                          >\n                            <ArticleCardItem\n                              article={articleItem}\n                              key={articleItem.articleId}\n                              cardSize={CardSize.S}\n                            />\n                          </SmallCardWrapper>\n                        ),\n                      )}\n                    </>\n                  </SmallCards>\n                )}\n              </DesktopCardsContainer>\n              <MobileCardsContainer>\n                <div>\n                  <MediumCards>\n                    {[\n                      ...separatedNewsByCardSize.largeCard,\n                      ...separatedNewsByCardSize.mediumCards,\n                    ].map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                </div>\n                {sortedNews.length >= 5 && (\n                  <MobileInlineSubscribeBlock>\n                    <SubscribeBlock\n                      containerId=\"mobileBlogSubscribeForm\"\n                      title=\"Subscribe to our newsletter.\"\n                      description=\"Receive updates from our team including latest industry news, upcoming webinars, 10DLC tips & more.\"\n                    />\n                  </MobileInlineSubscribeBlock>\n                )}\n                <div>\n                  {!isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                    <SmallCards>\n                      {separatedNewsByCardSize.smallCards.map(\n                        (articleItem, index, arr) => (\n                          <SmallCardWrapper\n                            ref={\n                              (index === arr.length - 1 ? observe : null) as (\n                                element?: any,\n                              ) => void\n                            }\n                          >\n                            <ArticleCardItem\n                              article={articleItem}\n                              key={articleItem.articleId}\n                              cardSize={CardSize.S}\n                            />\n                          </SmallCardWrapper>\n                        ),\n                      )}\n                    </SmallCards>\n                  )}\n                </div>\n              </MobileCardsContainer>\n            </ArticleList>\n          ) : (\n            <NoResultsText>No results for \"{searchString}\"</NoResultsText>\n          )}\n        </ArticleListContentContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default NewsPage;\n\nexport const query = graphql`\n  query NewsPage {\n    localSearchNews {\n      index\n      store\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"//news//\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            articleType\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            sortByUpdatedDate\n            lastUpdatedOn\n            previewImage {\n              childrenImageSharp {\n                gatsbyImageData(\n                  layout: FIXED\n                  formats: WEBP\n                  webpOptions: { quality: 50 }\n                  quality: 50\n                )\n              }\n            }\n          }\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const frontmatter: StaticPageFrontmatter = {\n  title: 'Telgorithm Blog',\n  metaTitle: 'Telgorithm Blog',\n  excerpt:\n    'Stay up to date on the latest news in A2P SMS and 10DLC and learn what it takes to provide the next level of business messaging experiences for your customers.',\n  slug: '/news/',\n};\n"],"names":["StyledNewsPageHeader","styled","displayName","componentId","device","SearchInput","colors","InlineSubscribeBlock","StyledSubscribeBlock","SubscribeBlockContent","SubscribeForm","ClipLoaderContainer","MobileInlineSubscribeBlock","NewsPageHeader","_ref","searchString","setSearchString","React","Text","SearchIcon","type","placeholder","value","onChange","e","currentTarget","_data$localSearchNews","_data$localSearchNews2","data","articlesForRenderAmount","setArticlesForRenderAmount","rawNews","allMdx","edges","map","edge","mapArticleNodeToArticlePreviewInfo","node","filteredNews","useLunr","trim","split","word","join","localSearchNews","index","store","news","sort","a","b","Date","date","getTime","sortedNews","concat","_toConsumableArray","filter","article","sortByUpdatedDate","lastUpdatedOn","separatedNewsByCardSize","largeCard","slice","mediumCards","smallCards","observe","useInView","rootMargin","onEnter","st","windowSize","useWindowSize","isDesktopScreen","isDesktop","width","title","MetaData","description","TopLevelPageJSONLDSchemas","url","GatsbySeoComponent","canonicalUrl","Layout","ArticleListContentContainer","length","ArticleList","DesktopCardsContainer","articleItem","ArticleCardItem","key","articleId","cardSize","CardSize","MediumCards","SubscribeBlock","showBulbIcon","containerId","SmallCards","arr","SmallCardWrapper","ref","MobileCardsContainer","NoResultsText","frontmatter","metaTitle","excerpt","slug"],"sourceRoot":""}