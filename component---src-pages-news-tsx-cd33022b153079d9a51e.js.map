{"version":3,"file":"component---src-pages-news-tsx-cd33022b153079d9a51e.js","mappings":"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","sources":["webpack://landing/./src/components/common/Icons/Arrows/RightMiddleArrow.tsx","webpack://landing/./src/components/common/ArticleCardItem/ArticleCardItem.tsx","webpack://landing/./src/components/common/ArticleCardItem/styled.ts","webpack://landing/./src/hooks/useWindowSize.tsx","webpack://landing/./src/components/news/styled.ts","webpack://landing/./src/components/news/index.tsx","webpack://landing/./src/pages/news.tsx"],"sourcesContent":["import React from \"react\";\nimport { SvgProps } from \"../../../../types\";\n\nconst RightMiddleArrow = ({ color }: SvgProps) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"15\"\n      viewBox=\"0 0 32 15\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M24.5053 15L22.6947 13.2303L27.1579 8.76404H0V6.23595H27.2L22.7368 1.76966L24.5053 0L32 7.5L24.5053 15Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default RightMiddleArrow;\n","import { Link } from 'gatsby';\nimport React, { FC, PropsWithChildren } from 'react';\nimport { colors } from '../../../utils/colors';\nimport RightMiddleArrow from '../Icons/Arrows/RightMiddleArrow';\nimport {\n  ArticleCardBody,\n  ArticleCardFooter,\n  ArticleCardImage,\n  ArticleCardTitle,\n  ArticleCardType,\n  StyledArticleCardItemLarge,\n  StyledArticleCardItemMedium,\n  StyledArticleCardItemSmall,\n} from './styled';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport { ArticlePreviewInfo, StaticCardPreviewInfo } from '../../../types';\n\nexport enum ArticleType {\n  PressRelease = 'Press release',\n  Update = 'Update',\n  Featured = 'Featured',\n}\n\nexport enum CardSize {\n  S = 'S',\n  M = 'M',\n  L = 'L',\n}\n\ntype ArticleCardProps = {\n  article: ArticlePreviewInfo | StaticCardPreviewInfo;\n  cardSize?: CardSize;\n};\n\nconst ArticleCardItemRenderByCardSize = ({\n  cardSize,\n  children,\n}: PropsWithChildren<{ cardSize?: CardSize }>) => {\n  switch (cardSize) {\n    case CardSize.L:\n      return <StyledArticleCardItemLarge>{children}</StyledArticleCardItemLarge>;\n    case CardSize.M:\n      return <StyledArticleCardItemMedium>{children}</StyledArticleCardItemMedium>;\n    case CardSize.L:\n      return <StyledArticleCardItemSmall>{children}</StyledArticleCardItemSmall>;\n    default:\n      return <StyledArticleCardItemSmall>{children}</StyledArticleCardItemSmall>;\n  }\n};\n\nconst ArticleCardItem: FC<ArticleCardProps> = ({ article, cardSize }) => {\n  const { date, title, url } = article;\n  const articlePreviewInfo = article as ArticlePreviewInfo;\n  const staticArticlePreviewInfo = article as StaticCardPreviewInfo;\n  return (\n    <ArticleCardItemRenderByCardSize cardSize={cardSize}>\n      <ArticleCardImage>\n        <Link to={url}>\n          {articlePreviewInfo.previewImage ? (\n            <GatsbyImage\n              image={\n                articlePreviewInfo.previewImage.childrenImageSharp?.[0]\n                  ?.gatsbyImageData as IGatsbyImageData\n              }\n              alt={articlePreviewInfo.title}\n            />\n          ) : (\n            staticArticlePreviewInfo.previewStaticImage\n          )}\n        </Link>\n      </ArticleCardImage>\n      <ArticleCardBody to={url}>\n        <div>\n          <ArticleCardType>{articlePreviewInfo.type}</ArticleCardType>\n          <ArticleCardTitle>{title}</ArticleCardTitle>\n        </div>\n        <ArticleCardFooter>\n          <div>{date}</div>\n          <div>\n            <RightMiddleArrow color={colors.primary.blue} />\n          </div>\n        </ArticleCardFooter>\n      </ArticleCardBody>\n    </ArticleCardItemRenderByCardSize>\n  );\n};\n\nexport default ArticleCardItem;\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\nimport { device } from \"../../../utils/layoutBreakpoints\";\n\nexport const ArticleCardTitle = styled.div`\n  font-weight: 600;\n  font-size: 0.9rem;\n  line-height: 1.1rem;\n  transition: 0.3s;\n  @media ${device.laptop} {\n    font-size: 1.6rem;\n    line-height: 1.9rem;\n  }\n`;\n\nexport const StyledArticleCardItem = styled.div`\n  background-color: ${colors.secondary.gray100};\n  border-radius: 14px;\n  font-family: \"Rubik\";\n  display: flex;\n  width: 100%;\n  height: auto;\n\n  &:hover {\n    ${ArticleCardTitle} {\n      color: ${colors.secondary.orange};\n    }\n  }\n`;\n\n\nexport const ArticleCardImage = styled.div`\n  img {\n    object-fit: cover;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 14px 14px 0 0;\n  }\n`;\n\nexport const ArticleCardType = styled.div`\n  font-weight: 600;\n  font-size: 0.6rem;\n  text-transform: uppercase;\n  color: ${colors.primary.gray500};\n  @media ${device.laptop} {\n    font-size: 0.7rem;\n  }\n`;\n\nexport const ArticleCardBody = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 15px;\n  height: 100%;\n  box-sizing: border-box;\n\n  & > div:first-child {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  @media ${device.laptop} {\n    padding: 40px;\n    width: 50%;\n  }\n`;\n\nexport const ArticleCardFooter = styled.div`\n  font-size: 0.7rem;\n  color: ${colors.primary.gray500};\n  font-weight: 400;\n  line-height: 0.9rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media ${device.laptop} {\n    font-size: 0.8rem;\n    line-height: 1rem;\n  }\n`;\n\nexport const StyledArticleCardItemLarge = styled(StyledArticleCardItem)`\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardBody} {\n    gap: 80px;\n  }\n\n  ${ArticleCardImage} {\n    width: 50%;\n    height: 100%;\n    object-fit: cover;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n    img {\n      border-radius: 14px 0 0 14px;\n    }\n  }\n`;\n\nexport const StyledArticleCardItemMedium = styled(StyledArticleCardItem)`\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardImage} {\n    width: 100%;\n    object-fit: cover;\n    min-height: 220px;\n    max-height: 220px;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    img {\n      border-radius: 14px 14px 0 0;\n    }\n  }\n\n  ${ArticleCardBody} {\n    width: 100%;\n    gap: 25px;\n    box-sizing: border-box;\n  }\n\n  @media ${device.tablet} {\n    ${ArticleCardImage} {\n      min-height: 350px;\n      max-height: 350px;\n      img {\n        border-radius: 14px 14px 0 0;\n      }\n    }\n  }\n\n  @media ${device.laptop} {\n    ${ArticleCardImage} {\n      min-height: 250px;\n      max-height: 250px;\n      img {\n        border-radius: 14px 14px 0 0;\n      }\n    }\n  }\n\n  ${ArticleCardTitle} {\n    @media ${device.laptop} {\n      font-size: 1.1rem;\n      line-height: 1.4rem;\n    }\n  }\n`;\n\nexport const StyledArticleCardItemSmall = styled(StyledArticleCardItem)`\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardBody} {\n    gap: 25px;\n  }\n\n  ${ArticleCardImage} {\n    width: 50%;\n    object-fit: cover;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    img {\n      border-radius: 14px 0 0 14px;\n    }\n  }\n\n  ${ArticleCardBody} {\n    width: 70%;\n  }\n\n  ${ArticleCardTitle} {\n    @media ${device.laptop} {\n      font-size: 1.1rem;\n      line-height: 1.4rem;\n    }\n  }\n`;\n\nexport const ArticleCardImageContainer = styled.div`\n  box-sizing: border-box;\n  padding: 15px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { size } from \"../utils/layoutBreakpoints\";\n\nexport const isDesktop = (windowWidth: number) => {\n  return windowWidth >= size.laptop\n}\n\ntype WindowSize = {\n    width: number | undefined,\n    height: number | undefined\n}\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); \n\n  return windowSize;\n}\n\nexport default useWindowSize\n","import styled from \"styled-components\";\nimport { colors } from \"../../utils/colors\";\nimport { device } from \"../../utils/layoutBreakpoints\";\n\nexport const StyledNewsPageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  margin-bottom: 50px;\n  align-items: flex-start;\n  gap: 15px;\n  flex-direction: column;\n  @media ${device.tablet} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  input {\n    border: none;\n    outline: none;\n    font-size: 0.9rem;\n    &::placeholder {\n      color: ${colors.primary.gray500};\n      font-size: 0.9rem;\n    }\n  }\n`;\n\n","import React, { FC } from \"react\";\nimport { Text } from \"../common\";\nimport SearchIcon from \"../common/Icons/SearchIcon/SearchIcon\";\nimport { SearchInput, StyledNewsPageHeader } from \"./styled\";\n\ninterface Props {\n  searchString: string;\n  setSearchString: (value: string) => void;\n}\n\nexport const NewsPageHeader: FC<Props> = ({\n  searchString,\n  setSearchString,\n}) => {\n  return (\n    <StyledNewsPageHeader>\n      <div>\n        <Text.Title.Bold.lg>Latest A2P Messaging News</Text.Title.Bold.lg>\n      </div>\n      <SearchInput>\n        <SearchIcon />\n        <input\n          type=\"text\"\n          placeholder=\"Search articles\"\n          value={searchString}\n          onChange={(e) => setSearchString(e.currentTarget.value)}\n        ></input>\n      </SearchInput>\n    </StyledNewsPageHeader>\n  );\n};\n","import * as React from 'react';\nimport Layout from '../components/common/Layout/Layout';\nimport ArticleCardItem, {\n  CardSize,\n} from '../components/common/ArticleCardItem/ArticleCardItem';\nimport { NewsPageHeader } from '../components/news';\nimport { graphql, PageProps } from 'gatsby';\nimport { mapArticleNodeToArticlePreviewInfo } from '../mappers';\nimport { useLunr } from 'react-lunr';\nimport { ArticlePreviewInfo } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport { ArticleListContentContainer, ArticleList, DesktopCardsContainer, MediumCards, MobileCardsContainer, NoResultsText, SmallCards, SmallCardWrapper } from '../components/common/styled';\nimport { useInView } from 'react-cool-inview';\nimport useWindowSize, { isDesktop } from '../hooks/useWindowSize';\n\nconst NewsPage = ({ data }: PageProps<Queries.NewsPageQuery>) => {\n  const [searchString, setSearchString] = React.useState<string>('');\n  const [articlesForRenderAmount, setArticlesForRenderAmount] = React.useState(10);\n\n  const rawNews: ArticlePreviewInfo[] = React.useMemo(() => {\n    return data.allMdx.edges.map((edge) => mapArticleNodeToArticlePreviewInfo(edge.node));\n  }, []);\n\n  const filteredNews: ArticlePreviewInfo[] = useLunr(\n    searchString\n      .trim()\n      .split(' ')\n      .map((word) => `${word} ${word}*`)\n      .join(' '),\n    data.localSearchNews?.index,\n    data.localSearchNews?.store,\n  ) as ArticlePreviewInfo[];\n\n  const news = searchString ? filteredNews : rawNews;\n\n  const sortedNews = [...news.filter(article => article.sortByUpdatedDate)\n    .sort((a, b) => new Date(b.lastUpdatedOn).getTime() - new Date(a.lastUpdatedOn).getTime()), \n    ...news.filter(article => !article.sortByUpdatedDate)]\n\n  const separatedNewsByCardSize = {\n    largeCard: sortedNews.slice(0, 1),\n    mediumCards: sortedNews.slice(1, 5),\n    smallCards: sortedNews.slice(5, articlesForRenderAmount),\n  };\n\n  const { observe } = useInView({\n    // For better UX, we can grow the root margin so the data will be loaded earlier\n    rootMargin: '50px 0px',\n    // When the last item comes to the viewport\n    onEnter: () => {\n      setArticlesForRenderAmount((st) => st + 5);\n    },\n  });\n\n  const windowSize = useWindowSize();\n  const isDesktopScreen = isDesktop(windowSize.width as number);\n\n  return (\n    <>\n      <MetaData\n        title=\"The Latest News in A2P SMS and 10DLC | Telgorithm\"\n        description=\"Stay up to date on the latest news in A2P SMS and 10DLC and learn what it takes to provide the next level of business messaging experiences for your customers.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/news/\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/news/\" />\n      <Layout>\n        <ArticleListContentContainer>\n          <NewsPageHeader searchString={searchString} setSearchString={setSearchString} />\n          {sortedNews.length ? (\n            <ArticleList>\n              <DesktopCardsContainer>\n                {separatedNewsByCardSize.largeCard.map((articleItem) => (\n                  <ArticleCardItem\n                    article={articleItem}\n                    key={articleItem.articleId}\n                    cardSize={CardSize.L}\n                  />\n                ))}\n                {separatedNewsByCardSize.mediumCards.length > 0 && (\n                  <MediumCards>\n                    {separatedNewsByCardSize.mediumCards.map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                )}\n                {isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                  <SmallCards>\n                    {separatedNewsByCardSize.smallCards.map((articleItem, index, arr) => (\n                      <SmallCardWrapper\n                        ref={\n                          (index === arr.length - 1 ? observe : null) as (\n                            element?: any,\n                          ) => void\n                        }\n                      >\n                        <ArticleCardItem\n                          article={articleItem}\n                          key={articleItem.articleId}\n                          cardSize={CardSize.S}\n                        />\n                      </SmallCardWrapper>\n                    ))}\n                  </SmallCards>\n                )}\n              </DesktopCardsContainer>\n              <MobileCardsContainer>\n                <div>\n                  <MediumCards>\n                    {[\n                      ...separatedNewsByCardSize.largeCard,\n                      ...separatedNewsByCardSize.mediumCards,\n                    ].map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                </div>\n                <div>\n                  {!isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                    <SmallCards>\n                      {separatedNewsByCardSize.smallCards.map(\n                        (articleItem, index, arr) => (\n                          <SmallCardWrapper\n                            ref={\n                              (index === arr.length - 1 ? observe : null) as (\n                                element?: any,\n                              ) => void\n                            }\n                          >\n                            <ArticleCardItem\n                              article={articleItem}\n                              key={articleItem.articleId}\n                              cardSize={CardSize.S}\n                            />\n                          </SmallCardWrapper>\n                        ),\n                      )}\n                    </SmallCards>\n                  )}\n                </div>\n              </MobileCardsContainer>\n            </ArticleList>\n          ) : (\n            <NoResultsText>No results for \"{searchString}\"</NoResultsText>\n          )}\n        </ArticleListContentContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default NewsPage;\n\nexport const query = graphql`\n  query NewsPage {\n    localSearchNews {\n      index\n      store\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"//news//\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            articleType\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            sortByUpdatedDate\n            lastUpdatedOn\n            previewImage {\n              childrenImageSharp {\n                gatsbyImageData(\n                  layout: FIXED\n                  formats: WEBP\n                  webpOptions: { quality: 50 }\n                  quality: 50\n                )\n              }\n            }\n          }\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","color","React","xmlns","width","height","viewBox","fill","d","CardSize","ArticleCardItemRenderByCardSize","cardSize","children","L","StyledArticleCardItemLarge","M","StyledArticleCardItemMedium","StyledArticleCardItemSmall","_ref2","_articlePreviewInfo$p","_articlePreviewInfo$p2","article","date","title","url","articlePreviewInfo","staticArticlePreviewInfo","ArticleCardImage","Link","to","previewImage","GatsbyImage","image","childrenImageSharp","gatsbyImageData","alt","previewStaticImage","ArticleCardBody","ArticleCardType","type","ArticleCardTitle","ArticleCardFooter","RightMiddleArrow","colors","styled","displayName","componentId","device","StyledArticleCardItem","withConfig","ArticleCardImageContainer","isDesktop","windowWidth","size","useWindowSize","windowSize","setWindowSize","useState","undefined","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","StyledNewsPageHeader","SearchInput","NewsPageHeader","searchString","setSearchString","Text","SearchIcon","placeholder","value","onChange","e","currentTarget","_data$localSearchNews","_data$localSearchNews2","data","articlesForRenderAmount","setArticlesForRenderAmount","rawNews","allMdx","edges","map","edge","mapArticleNodeToArticlePreviewInfo","node","filteredNews","useLunr","trim","split","word","join","localSearchNews","index","store","news","sortedNews","concat","_toConsumableArray","filter","sortByUpdatedDate","sort","a","b","Date","lastUpdatedOn","getTime","separatedNewsByCardSize","largeCard","slice","mediumCards","smallCards","observe","useInView","rootMargin","onEnter","st","isDesktopScreen","MetaData","description","TopLevelPageJSONLDSchemas","GatsbySeoComponent","canonicalUrl","Layout","ArticleListContentContainer","length","ArticleList","DesktopCardsContainer","articleItem","ArticleCardItem","key","articleId","MediumCards","SmallCards","arr","SmallCardWrapper","ref","MobileCardsContainer","NoResultsText"],"sourceRoot":""}