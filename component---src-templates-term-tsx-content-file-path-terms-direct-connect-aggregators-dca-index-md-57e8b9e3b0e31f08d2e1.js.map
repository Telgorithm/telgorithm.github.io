{"version":3,"file":"component---src-templates-term-tsx-content-file-path-terms-direct-connect-aggregators-dca-index-md-57e8b9e3b0e31f08d2e1.js","mappings":"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","sources":["webpack://landing/./terms/direct-connect-aggregators-dca/index.md","webpack://landing/./src/templates/term.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"A Direct Connect Aggregator (DCA) is a company acting as an intermediary between businesses and mobile carriers; thus playing a crucial role in the telecommunications ecosystem. \"), \"\\n\", React.createElement(_components.p, null, \"DCAs have direct connections to mobile carrier gateways, and facilitate the sending of messages from businesses to customers, particularly in the realm of \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/application-to-person-messaging-a2p/\"\n  }, \"Application-to-Person (A2P) messaging\"), \". \"), \"\\n\", React.createElement(_components.p, null, \"DCAs are instrumental in ensuring that messages sent via \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/a2p-10dlc-guide/\"\n  }, \"A2P 10-digit long codes (10DLC)\"), \" comply with CTIA regulations and carrier requirements before they reach the intended recipients.\"), \"\\n\", React.createElement(_components.h2, null, \"DCA Role in A2P 10DLC Messaging\"), \"\\n\", React.createElement(_components.p, null, \"In the A2P messaging environment, specifically with 10DLC, DCAs are responsible for a variety of tasks that are essential to the smooth operation of messaging campaigns. One of their primary functions is vetting and approving 10DLC Campaigns submitted by businesses. \"), \"\\n\", React.createElement(_components.p, null, \"When a business initiates a 10DLC messaging Campaign, it must first submit the Campaign details through a \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/news/10dlc-registration-required/\"\n  }, \"registration process\"), \" managed via \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/the-campaign-registry-tcr/\"\n  }, \"The Campaign Registry (TCR)\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"However, the ultimate Campaign review and approval process lies with the DCAs, who manually and carefully evaluate the submission for accuracy, completeness, and \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/news/10dlc-compliance-faqs-answered/\"\n  }, \"compliance with regulatory standards\"), \".\"), \"\\n\", React.createElement(_components.h2, null, \"10DLC Campaign Compliance and Approval Process\"), \"\\n\", React.createElement(_components.p, null, \"The Campaign approval process managed by DCAs is rigorous, as these companies are the gatekeepers who ensure that all messaging campaigns adhere to the necessary guidelines and regulations. \"), \"\\n\", React.createElement(_components.p, null, \"A Campaign submission could be rejected by a DCA for several reasons, such as:\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Inaccurate information\"), \" where the details provided in the Campaign submission do not align with the factual or regulatory expectations.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Incomplete or missing information\"), \" which means that information required for the Campaign's approval is either missing or not fully provided.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Non-Compliance\"), \", which describes the campaign failing to meet the compliance requirements set by CTIA or mobile carriers, which could include guidelines related to content, consent, and opt-out mechanisms.\"), \"\\n\", React.createElement(_components.p, null, \"When a Campaign is rejected, it is often due to one of these factors above, and businesses must address these issues before resubmitting their Campaigns for approval.\"), \"\\n\", React.createElement(_components.h2, null, \"The Importance of DCAs in Message Delivery\"), \"\\n\", React.createElement(_components.p, null, \"DCAs are often referred to as the last stop before an A2P text message enters the Carrier’s network. This position underscores their importance in the messaging ecosystem—they effectively determine the \\\"fate\\\" of a 10DLC message. \"), \"\\n\", React.createElement(_components.p, null, \"If a message or Campaign does not meet the standards set by CTIA or mobile carriers, it will not be allowed to pass through to the carrier’s network, thereby preventing it from reaching the end customer.\"), \"\\n\", React.createElement(_components.p, null, \"This gatekeeping role is essential not only for maintaining the integrity of messaging systems but also for protecting consumers from spam and other forms of unsolicited communication. DCAs help maintain a healthy and trustworthy messaging ecosystem.\"), \"\\n\", React.createElement(_components.h2, null, \"Industry Insights\"), \"\\n\", React.createElement(_components.p, null, \"To bring more awareness and clarity around the DCA’s role in the 10DLC ecosystem and the importance of compliance, industry leader, \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/bios/aaron-alter/\"\n  }, \"Aaron Alter\"), \" - CEO and Co-founder of Telgorithm -  \", React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=mtIflPom1Cc\"\n  }, \"hosted a webinar with Trevor MacDonald\"), \", the Senior Director of 10DLC & Messaging Services Strategy at \", React.createElement(_components.a, {\n    href: \"https://www.syniverse.com/\"\n  }, \"Syniverse\"), \", where they discussed the critical functions of DCAs and provided insights into how businesses can achieve and maintain compliance in their messaging campaigns.\"), \"\\n\", React.createElement(_components.p, null, \"Discussions like these highlight the evolving nature of A2P messaging and the increasing importance of understanding the role that DCAs play. As messaging regulations become more stringent, businesses must pay closer attention to the requirements set by DCAs to ensure their campaigns are successful and compliant.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Telgorithm/website/landing/terms/direct-connect-aggregators-dca/index.md\";\nimport {Link} from 'gatsby';\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {PrimaryButton} from '../components/common/Buttons/Buttons';\nimport Layout from '../components/common/Layout/Layout';\nimport CustomLink from '../components/common/Link';\nimport {GatsbySeoComponent, TopLevelPageJSONLDSchemas} from '../components/common/SEO';\nimport {StyledBackground, TermButtons, TermContainer, TermDefinitionContainer, TermTitle, StyledTermPage, TermDefinition} from '../components/term/styled';\nimport {InternalLinks} from '../utils/links';\nimport {Text} from '../components/common/Text';\nimport {mapTermNodeToGlossaryTerm} from '../mappers';\nconst TermPage = _ref => {\n  var _data$mdx, _data$mdx2, _allTerms, _data$mdx4, _data$mdx4$fields, _data$mdx5, _data$mdx5$fields;\n  let {data, children} = _ref;\n  const {title, metaTitle} = (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : _data$mdx.frontmatter;\n  const description = data === null || data === void 0 ? void 0 : (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : _data$mdx2.excerpt;\n  const allTerms = data.allMdx.edges.map(edge => mapTermNodeToGlossaryTerm(edge.node));\n  const currentTermIndex = allTerms.findIndex(item => {\n    var _data$mdx3;\n    return item.id === ((_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : _data$mdx3.id);\n  });\n  const nextTerm = (_allTerms = allTerms[currentTermIndex + 1]) !== null && _allTerms !== void 0 ? _allTerms : allTerms[0];\n  const getTitle = () => {\n    if (metaTitle) {\n      return metaTitle;\n    }\n    return title + \" | Telgorithm\";\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, null, React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: getTitle()\n  }), React.createElement(\"meta\", {\n    property: \"twitter:title\",\n    content: getTitle()\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    property: \"twitter:description\",\n    content: description\n  })), React.createElement(TopLevelPageJSONLDSchemas, {\n    url: 'https://www.telgorithm.com/glossary/' + ((_data$mdx4 = data.mdx) === null || _data$mdx4 === void 0 ? void 0 : (_data$mdx4$fields = _data$mdx4.fields) === null || _data$mdx4$fields === void 0 ? void 0 : _data$mdx4$fields.slug)\n  }), React.createElement(GatsbySeoComponent, {\n    canonicalUrl: 'https://www.telgorithm.com/glossary/' + ((_data$mdx5 = data.mdx) === null || _data$mdx5 === void 0 ? void 0 : (_data$mdx5$fields = _data$mdx5.fields) === null || _data$mdx5$fields === void 0 ? void 0 : _data$mdx5$fields.slug),\n    title: getTitle()\n  }), React.createElement(Layout, {\n    disabledContainer: true\n  }, React.createElement(StyledTermPage, null, React.createElement(StyledBackground, null), React.createElement(TermContainer, null, React.createElement(TermTitle, null, React.createElement(Text.Regular.Normal.md, null, \"Term\"), React.createElement(Text.Title.Bold.xl, null, title)), React.createElement(TermDefinitionContainer, null, React.createElement(Text.Regular.Normal.md, null, \"Definition\"), React.createElement(TermDefinition, null, children)), React.createElement(TermButtons, null, React.createElement(Link, {\n    to: InternalLinks.Glossary\n  }, React.createElement(PrimaryButton, null, \"Back To Glossary\")), React.createElement(CustomLink, {\n    arrow: true,\n    address: nextTerm === null || nextTerm === void 0 ? void 0 : nextTerm.url\n  }, \"View Next Term\"))))));\n};\nTermPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(TermPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"2188261531\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","strong","_provideComponents","components","React","href","wrapper","MDXLayout","TermPage","_ref","_data$mdx","_data$mdx2","_allTerms","_data$mdx4","_data$mdx4$fields","_data$mdx5","_data$mdx5$fields","data","children","title","metaTitle","mdx","frontmatter","description","excerpt","allTerms","allMdx","edges","map","edge","mapTermNodeToGlossaryTerm","node","currentTermIndex","findIndex","item","_data$mdx3","id","nextTerm","getTitle","Helmet","property","content","name","TopLevelPageJSONLDSchemas","url","fields","slug","GatsbySeoComponent","canonicalUrl","Layout","disabledContainer","StyledTermPage","StyledBackground","TermContainer","TermTitle","Text","TermDefinitionContainer","TermDefinition","TermButtons","Link","to","InternalLinks","PrimaryButton","CustomLink","arrow","address","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}