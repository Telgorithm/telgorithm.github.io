{"version":3,"file":"component---src-pages-news-tsx-7fb24c87bbfab47db3bf.js","mappings":"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","sources":["webpack://landing/./src/components/common/ArticleCardItem/styled.ts","webpack://landing/./src/components/common/ArticleCardItem/ArticleCardItem.tsx","webpack://landing/./src/components/common/Icons/Arrows/RightMiddleArrow.tsx","webpack://landing/./src/components/common/Table/index.tsx","webpack://landing/./src/components/common/Table/styled.ts","webpack://landing/./src/components/common/Divider/index.tsx","webpack://landing/./src/components/common/NumberInput/index.tsx","webpack://landing/./src/hooks/useWindowSize.tsx","webpack://landing/./src/components/news/styled.ts","webpack://landing/./src/components/news/index.tsx","webpack://landing/./src/pages/news.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\nimport { device } from \"../../../utils/layoutBreakpoints\";\n\nexport const StyledArticleCardItem = styled.div`\n  background-color: ${colors.secondary.gray100};\n  border-radius: 14px;\n  font-family: \"Rubik\";\n  display: flex;\n  width: 100%;\n  height: auto;\n`;\n\nexport const ArticleCardTitle = styled.div`\n  font-weight: 600;\n  font-size: 0.9rem;\n  line-height: 1.1rem;\n  @media ${device.laptop} {\n    font-size: 1.6rem;\n    line-height: 1.9rem;\n  }\n`;\n\nexport const ArticleCardImage = styled.div`\n  img {\n    object-fit: cover;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 14px 14px 0 0;\n  }\n`;\n\nexport const ArticleCardType = styled.div`\n  font-weight: 600;\n  font-size: 0.6rem;\n  text-transform: uppercase;\n  color: ${colors.primary.gray500};\n  @media ${device.laptop} {\n    font-size: 0.7rem;\n  }\n`;\n\nexport const ArticleCardBody = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 15px;\n  height: 100%;\n  box-sizing: border-box;\n\n  & > div:first-child {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  @media ${device.laptop} {\n    padding: 40px;\n    width: 50%;\n  }\n`;\n\nexport const ArticleCardFooter = styled.div`\n  font-size: 0.7rem;\n  color: ${colors.primary.gray500};\n  font-weight: 400;\n  line-height: 0.9rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media ${device.laptop} {\n    font-size: 0.8rem;\n    line-height: 1rem;\n  }\n`;\n\nexport const StyledArticleCardItemLarge = styled(StyledArticleCardItem)`\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardBody} {\n    gap: 80px;\n  }\n\n  ${ArticleCardImage} {\n    width: 50%;\n    height: 100%;\n    object-fit: cover;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n    img {\n      border-radius: 14px 0 0 14px;\n    }\n  }\n`;\n\nexport const StyledArticleCardItemMedium = styled(StyledArticleCardItem)`\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardImage} {\n    width: 100%;\n    object-fit: cover;\n    min-height: 220px;\n    max-height: 220px;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    img {\n      border-radius: 14px 14px 0 0;\n    }\n  }\n\n  ${ArticleCardBody} {\n    width: 100%;\n    gap: 25px;\n    box-sizing: border-box;\n  }\n\n  @media ${device.tablet} {\n    ${ArticleCardImage} {\n      min-height: 350px;\n      max-height: 350px;\n      img {\n        border-radius: 14px 14px 0 0;\n      }\n    }\n  }\n\n  @media ${device.laptop} {\n    ${ArticleCardImage} {\n      min-height: 250px;\n      max-height: 250px;\n      img {\n        border-radius: 14px 14px 0 0;\n      }\n    }\n  }\n\n  ${ArticleCardTitle} {\n    @media ${device.laptop} {\n      font-size: 1.1rem;\n      line-height: 1.4rem;\n    }\n  }\n`;\n\nexport const StyledArticleCardItemSmall = styled(StyledArticleCardItem)`\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardBody} {\n    gap: 25px;\n  }\n\n  ${ArticleCardImage} {\n    width: 50%;\n    object-fit: cover;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    img {\n      border-radius: 14px 0 0 14px;\n    }\n  }\n\n  ${ArticleCardBody} {\n    width: 70%;\n  }\n\n  ${ArticleCardTitle} {\n    @media ${device.laptop} {\n      font-size: 1.1rem;\n      line-height: 1.4rem;\n    }\n  }\n`;\n","import { Link } from 'gatsby';\nimport React, { FC, PropsWithChildren } from 'react';\nimport { colors } from '../../../utils/colors';\nimport RightMiddleArrow from '../Icons/Arrows/RightMiddleArrow';\nimport {\n  ArticleCardBody,\n  ArticleCardFooter,\n  ArticleCardImage,\n  ArticleCardTitle,\n  ArticleCardType,\n  StyledArticleCardItemLarge,\n  StyledArticleCardItemMedium,\n  StyledArticleCardItemSmall,\n} from './styled';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport { ArticlePreviewInfo } from '../../../types';\n\nexport enum ArticleType {\n  PressRelease = 'Press release',\n  Update = 'Update',\n  Featured = 'Featured',\n}\n\nexport enum CardSize {\n  S = 'S',\n  M = 'M',\n  L = 'L',\n}\n\ntype ArticleCardProps = {\n  article: ArticlePreviewInfo;\n  cardSize?: CardSize;\n};\n\nconst ArticleCardItemRenderByCardSize = ({\n  cardSize,\n  children,\n}: PropsWithChildren<{ cardSize?: CardSize }>) => {\n  switch (cardSize) {\n    case CardSize.L:\n      return <StyledArticleCardItemLarge>{children}</StyledArticleCardItemLarge>;\n    case CardSize.M:\n      return <StyledArticleCardItemMedium>{children}</StyledArticleCardItemMedium>;\n    case CardSize.L:\n      return <StyledArticleCardItemSmall>{children}</StyledArticleCardItemSmall>;\n    default:\n      return <StyledArticleCardItemSmall>{children}</StyledArticleCardItemSmall>;\n  }\n};\n\nconst ArticleCardItem: FC<ArticleCardProps> = ({ article, cardSize }) => {\n  const { date, type, title, url, previewImage } = article;\n  return (\n    <ArticleCardItemRenderByCardSize cardSize={cardSize}>\n      <ArticleCardImage>\n        <Link to={url}>\n          <GatsbyImage\n            image={\n              previewImage?.childrenImageSharp?.[0]?.gatsbyImageData as IGatsbyImageData\n            }\n            alt=\"\"\n          />\n        </Link>\n      </ArticleCardImage>\n      <ArticleCardBody to={url}>\n        <div>\n          <ArticleCardType>{type}</ArticleCardType>\n          <ArticleCardTitle>{title}</ArticleCardTitle>\n        </div>\n        <ArticleCardFooter>\n          <div>{date}</div>\n          <div>\n            <RightMiddleArrow color={colors.primary.blue} />\n          </div>\n        </ArticleCardFooter>\n      </ArticleCardBody>\n    </ArticleCardItemRenderByCardSize>\n  );\n};\n\nexport default ArticleCardItem;\n","import React from \"react\";\nimport { SvgProps } from \"../../../../types\";\n\nconst RightMiddleArrow = ({ color }: SvgProps) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"15\"\n      viewBox=\"0 0 32 15\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M24.5053 15L22.6947 13.2303L27.1579 8.76404H0V6.23595H27.2L22.7368 1.76966L24.5053 0L32 7.5L24.5053 15Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default RightMiddleArrow;\n","import React, {PropsWithChildren} from 'react';\nimport {Table, TableHeader, TableBody, TableRow, TableHeaderCell, TableBodyCell, TableContainer, TableWrapper} from \"./styled\";\n\ntype TableProps = PropsWithChildren<{}>;\n\ntype SubComponents = {\n  Header: typeof TableHeader;\n  Body: typeof TableBody;\n  Row: typeof TableRow;\n  HeaderCell: typeof TableHeaderCell;\n  BodyCell: typeof TableBodyCell;\n  Container: typeof TableContainer;\n  Wrapper: typeof TableWrapper;\n};\n\nconst TableComponent: React.FC<TableProps> & SubComponents = ({children}: TableProps) => {\n  return (\n    <Table>\n      {children}\n    </Table>\n  );\n};\n\nTableComponent.Header = TableHeader;\nTableComponent.Body = TableBody;\nTableComponent.Row = TableRow;\nTableComponent.HeaderCell = TableHeaderCell;\nTableComponent.BodyCell = TableBodyCell;\nTableComponent.Container = TableContainer;\nTableComponent.Wrapper = TableWrapper;\n\nexport default TableComponent;\n","import styled from \"styled-components\";\nimport { device } from \"../../../utils/layoutBreakpoints\";\nimport { colors, opacityToHex } from \"../../../utils/colors\";\n\nexport const TableHeaderCell = styled.th`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 600;\n  line-height: 22px;\n  text-align: left;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableBodyCell = styled.td`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  vertical-align: middle;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  ${TableBodyCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n      border-top-left-radius: 8px;\n      border-bottom-left-radius: 8px;\n    }\n\n    &:last-child {\n      padding-right: 24px;\n      border-top-right-radius: 8px;\n      border-bottom-right-radius: 8px;\n    }\n  }\n\n  ${TableHeaderCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n    }\n  }\n`;\n\nexport const TableHeader = styled.thead``;\n\nexport const TableBody = styled.tbody`\n  ${TableRow}:nth-child(2n+1) {\n    background-color: ${colors.primary.blue + opacityToHex[\"0.1\"]};\n  }\n`;\n\nexport const Table = styled.table`\n  table-layout: fixed;\n\n  @media ${device.laptop} {\n    margin: 0;\n    width: 100%;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  overflow-x: hidden;\n  position: relative;\n  @media ${device.tablet} {\n    width: auto;\n  }\n  @supports (-webkit-touch-callout: none) {\n    &::after {\n      position: absolute;\n      content: \"\";\n      display: block;\n      bottom: 2px;\n      left: 0;\n      width: 100%;\n      height: 5px;\n      background-color: ${colors.primary.gray500};\n      border-radius: 5px;\n      z-index: -1;\n      @media ${device.tablet} {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  overflow-x: scroll;\n  scrollbar-color: ${colors.secondary.gray700};\n  padding-bottom: 10px;\n\n  /* Chrome, Edge, and Safari */\n  &::-webkit-scrollbar {\n    width: 12px;\n    height: 10px !important;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${colors.secondary.gray300};\n    border-radius: 5px;\n    height: 5px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n    border-radius: 10px;\n    height: 5px !important;\n  }\n  &:hover::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n  }\n\n  @media ${device.tablet} {\n    overflow-x: auto;\n    table {\n      min-width: auto;\n    }\n  }\n  table {\n    min-width: 850px;\n    width: 100%;\n    table-layout: auto;\n  }\n`;\n","import styled from 'styled-components';\nimport {colors} from \"../../../utils/colors\";\n\nconst Divider = styled.div`\n  width: 100%;\n  border-bottom: 1px solid ${colors.secondary.gray300};\n`;\n\nexport default Divider;\n","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\n\nconst Input = styled.input<{textAlign?: string}>`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  width: calc(100% - 24px);\n  padding: 6px 12px;\n  text-align: ${props => props.textAlign ?? \"left\"};\n  border: 1px solid #C3C5CD;\n  border-radius: 8px;\n`;\n\ntype NumberInputProps = {\n  onChange?: (value : number | null) => void;\n  initialValue?: number;\n};\n\nconst NumberInput = ({onChange, initialValue} : NumberInputProps) => {\n  const [value, setValue] = useState<string | null>(initialValue ? String(initialValue) : '0');\n\n  const addCommas = (num: number) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  const removeNonNumeric = (num: string) =>\n    num.toString().replace(/[^0-9]/g, \"\");\n\n  const handleChange = (event : React.FormEvent<HTMLInputElement>) => {\n    const stringValue = removeNonNumeric(event.currentTarget.value);\n\n    if (!isNaN(Number(stringValue))) {\n      const number = Number(stringValue);\n      setValue(addCommas(number));\n      onChange && onChange(number);\n    } else {\n      setValue(null);\n      onChange && onChange(null);\n    }\n  }\n\n  return (\n    <Input\n      type=\"text\"\n      value={value ?? ''}\n      onInput={handleChange}\n      maxLength={13}\n      onFocus={(e) => e.currentTarget.select()}\n    />\n  );\n};\n\nexport default NumberInput;\n","import { useEffect, useState } from \"react\";\nimport { size } from \"../utils/layoutBreakpoints\";\n\nexport const isDesktop = (windowWidth: number) => {\n  return windowWidth >= size.laptop\n}\n\ntype WindowSize = {\n    width: number | undefined,\n    height: number | undefined\n}\n\nconst useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    handleResize();\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); \n\n  return windowSize;\n}\n\nexport default useWindowSize\n","import styled from \"styled-components\";\nimport { colors } from \"../../utils/colors\";\nimport { device } from \"../../utils/layoutBreakpoints\";\n\nexport const StyledNewsPageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  margin-bottom: 50px;\n  align-items: flex-start;\n  gap: 15px;\n  flex-direction: column;\n  @media ${device.tablet} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  input {\n    border: none;\n    outline: none;\n    font-size: 0.9rem;\n    &::placeholder {\n      color: ${colors.primary.gray500};\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nexport const NewsContentContainer = styled.div`\n  @media ${device.laptop} {\n    max-width: 980px;\n    margin: 0 auto;\n  }\n`;\n\nexport const NewsList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const MediumCards = styled.div`\n  width: 100%;\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  gap: 30px;\n\n  @media ${device.laptop} {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`;\n\nexport const SmallCards = styled.div`\n  display: grid;\n  grid-auto-rows: 1fr;\n  gap: 30px;\n  width: 100%;\n`;\n\nexport const MobileCardsContainer = styled.div`\n  gap: 30px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.laptop} {\n    display: none;\n  }\n`;\n\nexport const DesktopCardsContainer = styled.div`\n  display: none;\n  @media ${device.laptop} {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n`;\n\nexport const SmallCardWrapper = styled.div`\n  display: flex;\n`\n","import React, { FC } from \"react\";\nimport { Text } from \"../common\";\nimport SearchIcon from \"../common/Icons/SearchIcon/SearchIcon\";\nimport { SearchInput, StyledNewsPageHeader } from \"./styled\";\n\ninterface Props {\n  searchString: string;\n  setSearchString: (value: string) => void;\n}\n\nexport const NewsPageHeader: FC<Props> = ({\n  searchString,\n  setSearchString,\n}) => {\n  return (\n    <StyledNewsPageHeader>\n      <div>\n        <Text.Title.Bold.lg>Latest A2P Messaging News</Text.Title.Bold.lg>\n      </div>\n      <SearchInput>\n        <SearchIcon />\n        <input\n          type=\"text\"\n          placeholder=\"Search articles\"\n          value={searchString}\n          onChange={(e) => setSearchString(e.currentTarget.value)}\n        ></input>\n      </SearchInput>\n    </StyledNewsPageHeader>\n  );\n};\n","import * as React from 'react';\nimport Layout from '../components/common/Layout/Layout';\nimport ArticleCardItem, {\n  CardSize,\n} from '../components/common/ArticleCardItem/ArticleCardItem';\nimport { NewsPageHeader } from '../components/news';\nimport { graphql, PageProps } from 'gatsby';\nimport { mapArticleNodeToArticlePreviewInfo } from '../mappers';\nimport {\n  DesktopCardsContainer,\n  MediumCards,\n  MobileCardsContainer,\n  NewsContentContainer,\n  NewsList,\n  SmallCards,\n  SmallCardWrapper,\n} from '../components/news/styled';\nimport { useLunr } from 'react-lunr';\nimport { ArticlePreviewInfo } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport { NoResultsText } from '../components/common/styled';\nimport { useInView } from 'react-cool-inview';\nimport useWindowSize, { isDesktop } from '../hooks/useWindowSize';\n\nconst NewsPage = ({ data }: PageProps<Queries.NewsPageQuery>) => {\n  const [searchString, setSearchString] = React.useState<string>('');\n  const [articlesForRenderAmount, setArticlesForRenderAmount] = React.useState(10);\n\n  const rawNews: ArticlePreviewInfo[] = React.useMemo(() => {\n    return data.allMdx.edges.map((edge) => mapArticleNodeToArticlePreviewInfo(edge.node));\n  }, []);\n\n  const filteredNews: ArticlePreviewInfo[] = useLunr(\n    searchString\n      .trim()\n      .split(' ')\n      .map((word) => `${word} ${word}*`)\n      .join(' '),\n    data.localSearchNews?.index,\n    data.localSearchNews?.store,\n  ) as ArticlePreviewInfo[];\n\n  const news = searchString ? filteredNews : rawNews;\n\n  const sortedNews = [...news.filter(article => article.sortByUpdatedDate)\n    .sort((a, b) => new Date(b.lastUpdatedOn).getTime() - new Date(a.lastUpdatedOn).getTime()), \n    ...news.filter(article => !article.sortByUpdatedDate)]\n\n  const separatedNewsByCardSize = {\n    largeCard: sortedNews.slice(0, 1),\n    mediumCards: sortedNews.slice(1, 5),\n    smallCards: sortedNews.slice(5, articlesForRenderAmount),\n  };\n\n  const { observe } = useInView({\n    // For better UX, we can grow the root margin so the data will be loaded earlier\n    rootMargin: '50px 0px',\n    // When the last item comes to the viewport\n    onEnter: () => {\n      setArticlesForRenderAmount((st) => st + 5);\n    },\n  });\n\n  const windowSize = useWindowSize();\n  const isDesktopScreen = isDesktop(windowSize.width as number);\n\n  return (\n    <>\n      <MetaData\n        title=\"The Latest News in A2P SMS and 10DLC | Telgorithm\"\n        description=\"Stay up to date on the latest news in A2P SMS and 10DLC and learn what it takes to provide the next level of business messaging experiences for your customers.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/news/\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/news/\" />\n      <Layout>\n        <NewsContentContainer>\n          <NewsPageHeader searchString={searchString} setSearchString={setSearchString} />\n          {sortedNews.length ? (\n            <NewsList>\n              <DesktopCardsContainer>\n                {separatedNewsByCardSize.largeCard.map((articleItem) => (\n                  <ArticleCardItem\n                    article={articleItem}\n                    key={articleItem.articleId}\n                    cardSize={CardSize.L}\n                  />\n                ))}\n                {separatedNewsByCardSize.mediumCards.length > 0 && (\n                  <MediumCards>\n                    {separatedNewsByCardSize.mediumCards.map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                )}\n                {isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                  <SmallCards>\n                    {separatedNewsByCardSize.smallCards.map((articleItem, index, arr) => (\n                      <SmallCardWrapper\n                        ref={\n                          (index === arr.length - 1 ? observe : null) as (\n                            element?: any,\n                          ) => void\n                        }\n                      >\n                        <ArticleCardItem\n                          article={articleItem}\n                          key={articleItem.articleId}\n                          cardSize={CardSize.S}\n                        />\n                      </SmallCardWrapper>\n                    ))}\n                  </SmallCards>\n                )}\n              </DesktopCardsContainer>\n              <MobileCardsContainer>\n                <div>\n                  <MediumCards>\n                    {[\n                      ...separatedNewsByCardSize.largeCard,\n                      ...separatedNewsByCardSize.mediumCards,\n                    ].map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                </div>\n                <div>\n                  {!isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                    <SmallCards>\n                      {separatedNewsByCardSize.smallCards.map(\n                        (articleItem, index, arr) => (\n                          <SmallCardWrapper\n                            ref={\n                              (index === arr.length - 1 ? observe : null) as (\n                                element?: any,\n                              ) => void\n                            }\n                          >\n                            <ArticleCardItem\n                              article={articleItem}\n                              key={articleItem.articleId}\n                              cardSize={CardSize.S}\n                            />\n                          </SmallCardWrapper>\n                        ),\n                      )}\n                    </SmallCards>\n                  )}\n                </div>\n              </MobileCardsContainer>\n            </NewsList>\n          ) : (\n            <NoResultsText>No results for \"{searchString}\"</NoResultsText>\n          )}\n        </NewsContentContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default NewsPage;\n\nexport const query = graphql`\n  query NewsPage {\n    localSearchNews {\n      index\n      store\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"//news//\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            articleType\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            sortByUpdatedDate\n            lastUpdatedOn\n            previewImage {\n              childrenImageSharp {\n                gatsbyImageData(\n                  layout: FIXED\n                  formats: WEBP\n                  webpOptions: { quality: 50 }\n                  quality: 50\n                )\n              }\n            }\n          }\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledArticleCardItem","styled","displayName","componentId","colors","ArticleCardTitle","device","ArticleCardImage","ArticleCardType","ArticleCardBody","Link","withConfig","ArticleCardFooter","StyledArticleCardItemLarge","StyledArticleCardItemMedium","StyledArticleCardItemSmall","CardSize","ArticleCardItemRenderByCardSize","_ref","cardSize","children","L","React","M","_ref2","_previewImage$childre","_previewImage$childre2","article","date","type","title","url","previewImage","to","GatsbyImage","image","childrenImageSharp","gatsbyImageData","alt","RightMiddleArrow","color","xmlns","width","height","viewBox","fill","d","TableComponent","Table","Header","TableHeader","Body","TableBody","Row","TableRow","HeaderCell","TableHeaderCell","BodyCell","TableBodyCell","Container","TableContainer","Wrapper","TableWrapper","opacityToHex","props","_props$textAlign","textAlign","isDesktop","windowWidth","size","useWindowSize","windowSize","setWindowSize","useState","undefined","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","StyledNewsPageHeader","SearchInput","NewsContentContainer","NewsList","MediumCards","SmallCards","MobileCardsContainer","DesktopCardsContainer","SmallCardWrapper","NewsPageHeader","searchString","setSearchString","Text","SearchIcon","placeholder","value","onChange","e","currentTarget","_data$localSearchNews","_data$localSearchNews2","data","articlesForRenderAmount","setArticlesForRenderAmount","rawNews","allMdx","edges","map","edge","mapArticleNodeToArticlePreviewInfo","node","filteredNews","useLunr","trim","split","word","join","localSearchNews","index","store","news","sortedNews","concat","_toConsumableArray","filter","sortByUpdatedDate","sort","a","b","Date","lastUpdatedOn","getTime","separatedNewsByCardSize","largeCard","slice","mediumCards","smallCards","observe","useInView","rootMargin","onEnter","st","isDesktopScreen","MetaData","description","TopLevelPageJSONLDSchemas","GatsbySeoComponent","canonicalUrl","Layout","length","articleItem","ArticleCardItem","key","articleId","arr","ref","NoResultsText"],"sourceRoot":""}