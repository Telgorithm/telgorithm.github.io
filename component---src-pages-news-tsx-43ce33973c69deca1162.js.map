{"version":3,"file":"component---src-pages-news-tsx-43ce33973c69deca1162.js","mappings":"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","sources":["webpack://landing/./src/components/common/Icons/Arrows/RightMiddleArrow.tsx","webpack://landing/./src/components/common/ArticleCardItem/styled.ts","webpack://landing/./src/components/common/ArticleCardItem/ArticleCardItem.tsx","webpack://landing/./src/components/common/Icons/BulbIcon/BulbIcon.tsx","webpack://landing/./src/components/common/SubscribeBlock/styled.ts","webpack://landing/./src/components/common/SubscribeBlock/index.tsx","webpack://landing/./src/components/news/styled.ts","webpack://landing/./src/components/news/index.tsx","webpack://landing/./src/components/common/SubscribeBlockTest/styled.ts","webpack://landing/./src/components/common/SubscribeBlockTest/index.tsx","webpack://landing/./src/pages/news.tsx"],"sourcesContent":["import React from \"react\";\nimport { SvgProps } from \"../../../../types\";\n\nconst RightMiddleArrow = ({ color }: SvgProps) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"15\"\n      viewBox=\"0 0 32 15\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M24.5053 15L22.6947 13.2303L27.1579 8.76404H0V6.23595H27.2L22.7368 1.76966L24.5053 0L32 7.5L24.5053 15Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default RightMiddleArrow;\n","import { Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\nimport { device } from \"../../../utils/layoutBreakpoints\";\n\nexport const ArticleCardTitle = styled.div`\n  font-weight: 600;\n  font-size: 0.9rem;\n  line-height: 1.1rem;\n  transition: 0.3s;\n  @media ${device.laptop} {\n    font-size: 1.6rem;\n    line-height: 1.9rem;\n  }\n`;\n\nexport const StyledArticleCardItem = styled.div`\n  background-color: ${colors.secondary.gray100};\n  border-radius: 14px;\n  font-family: \"Rubik\";\n  display: flex;\n  width: 100%;\n  height: auto;\n\n  &:hover {\n    ${ArticleCardTitle} {\n      color: ${colors.secondary.orange};\n    }\n  }\n`;\n\n\nexport const ArticleCardImage = styled.div`\n  img {\n    object-fit: cover;\n    max-width: 100%;\n    max-height: 100%;\n    border-radius: 14px 14px 0 0;\n  }\n`;\n\nexport const ArticleCardType = styled.div`\n  font-weight: 600;\n  font-size: 0.6rem;\n  text-transform: uppercase;\n  color: ${colors.primary.gray500};\n  @media ${device.laptop} {\n    font-size: 0.7rem;\n  }\n`;\n\nexport const ArticleCardBody = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 15px;\n  height: 100%;\n  box-sizing: border-box;\n\n  & > div:first-child {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  @media ${device.laptop} {\n    padding: 40px;\n    width: 50%;\n  }\n`;\n\nexport const ArticleCardFooter = styled.div`\n  font-size: 0.7rem;\n  color: ${colors.primary.gray500};\n  font-weight: 400;\n  line-height: 0.9rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  @media ${device.laptop} {\n    font-size: 0.8rem;\n    line-height: 1rem;\n  }\n`;\n\nexport const StyledArticleCardItemLarge = styled(StyledArticleCardItem)`\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardBody} {\n    gap: 80px;\n  }\n\n  ${ArticleCardImage} {\n    width: 50%;\n    height: 100%;\n    object-fit: cover;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n    img {\n      border-radius: 14px 0 0 14px;\n    }\n  }\n`;\n\nexport const StyledArticleCardItemMedium = styled(StyledArticleCardItem)`\n  flex-direction: column;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardImage} {\n    width: 100%;\n    object-fit: cover;\n    min-height: 220px;\n    max-height: 220px;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    img {\n      border-radius: 14px 14px 0 0;\n    }\n  }\n\n  ${ArticleCardBody} {\n    width: 100%;\n    gap: 25px;\n    box-sizing: border-box;\n  }\n\n  @media ${device.tablet} {\n    ${ArticleCardImage} {\n      min-height: 350px;\n      max-height: 350px;\n      img {\n        border-radius: 14px 14px 0 0;\n      }\n    }\n  }\n\n  @media ${device.laptop} {\n    ${ArticleCardImage} {\n      min-height: 250px;\n      max-height: 250px;\n      img {\n        border-radius: 14px 14px 0 0;\n      }\n    }\n  }\n\n  ${ArticleCardTitle} {\n    @media ${device.laptop} {\n      font-size: 1.1rem;\n      line-height: 1.4rem;\n    }\n  }\n`;\n\nexport const StyledArticleCardItemSmall = styled(StyledArticleCardItem)`\n  flex-direction: row;\n  justify-content: flex-start;\n  gap: 0;\n\n  ${ArticleCardBody} {\n    gap: 25px;\n  }\n\n  ${ArticleCardImage} {\n    width: 50%;\n    object-fit: cover;\n    div {\n      width: 100% !important;\n      height: 100% !important;\n    }\n\n    img {\n      border-radius: 14px 0 0 14px;\n    }\n  }\n\n  ${ArticleCardBody} {\n    width: 70%;\n  }\n\n  ${ArticleCardTitle} {\n    @media ${device.laptop} {\n      font-size: 1.1rem;\n      line-height: 1.4rem;\n    }\n  }\n`;\n\nexport const ArticleCardImageContainer = styled.div`\n  box-sizing: border-box;\n  padding: 15px;\n`;\n","import { Link } from 'gatsby';\nimport React, { FC, PropsWithChildren } from 'react';\nimport { colors } from '../../../utils/colors';\nimport RightMiddleArrow from '../Icons/Arrows/RightMiddleArrow';\nimport {\n  ArticleCardBody,\n  ArticleCardFooter,\n  ArticleCardImage,\n  ArticleCardTitle,\n  ArticleCardType,\n  StyledArticleCardItemLarge,\n  StyledArticleCardItemMedium,\n  StyledArticleCardItemSmall,\n} from './styled';\nimport { GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\nimport { ArticlePreviewInfo, StaticCardPreviewInfo } from '../../../types';\n\nexport enum ArticleType {\n  PressRelease = 'Press release',\n  Update = 'Update',\n  Featured = 'Featured',\n}\n\nexport enum CardSize {\n  S = 'S',\n  M = 'M',\n  L = 'L',\n}\n\ntype ArticleCardProps = {\n  article: ArticlePreviewInfo | StaticCardPreviewInfo;\n  cardSize?: CardSize;\n};\n\nconst ArticleCardItemRenderByCardSize = ({\n  cardSize,\n  children,\n}: PropsWithChildren<{ cardSize?: CardSize }>) => {\n  switch (cardSize) {\n    case CardSize.L:\n      return <StyledArticleCardItemLarge>{children}</StyledArticleCardItemLarge>;\n    case CardSize.M:\n      return <StyledArticleCardItemMedium>{children}</StyledArticleCardItemMedium>;\n    case CardSize.L:\n      return <StyledArticleCardItemSmall>{children}</StyledArticleCardItemSmall>;\n    default:\n      return <StyledArticleCardItemSmall>{children}</StyledArticleCardItemSmall>;\n  }\n};\n\nconst ArticleCardItem: FC<ArticleCardProps> = ({ article, cardSize }) => {\n  const { date, title, url } = article;\n  const articlePreviewInfo = article as ArticlePreviewInfo;\n  const staticArticlePreviewInfo = article as StaticCardPreviewInfo;\n  return (\n    <ArticleCardItemRenderByCardSize cardSize={cardSize}>\n      {articlePreviewInfo.previewImage ? (<ArticleCardImage>\n        <Link to={url}>\n          <GatsbyImage\n            image={\n              articlePreviewInfo.previewImage.childrenImageSharp?.[0]\n                ?.gatsbyImageData as IGatsbyImageData\n            }\n            alt={articlePreviewInfo.title}\n          />\n        </Link>\n      </ArticleCardImage>) :\n        staticArticlePreviewInfo.previewStaticImage\n      }\n      <ArticleCardBody to={url}>\n        <div>\n          <ArticleCardType>{articlePreviewInfo.type}</ArticleCardType>\n          <ArticleCardTitle>{title}</ArticleCardTitle>\n        </div>\n        <ArticleCardFooter>\n          <div>{date}</div>\n          <div>\n            <RightMiddleArrow color={colors.primary.blue} />\n          </div>\n        </ArticleCardFooter>\n      </ArticleCardBody>\n    </ArticleCardItemRenderByCardSize>\n  );\n};\n\nexport default ArticleCardItem;\n","import React from \"react\";\n\nconst BulbIcon = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"96\"\n      height=\"96\"\n      viewBox=\"0 0 96 96\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M88.5 38.5L86.5 34L82 32L86.5 30L88.5 25.5L90.6 30L95 32L90.6 34L88.5 38.5ZM76 20.9L72.9 14.3L66.3 11.2L72.9 8.1L76 1.5L79.1 8.1L85.7 11.2L79.1 14.3L76 20.9ZM36 86.3C33.9333 86.3 32.1667 85.6 30.7 84.2C29.2333 82.8 28.4333 81.0667 28.3 79H43.7C43.5667 81.0667 42.7667 82.8 41.3 84.2C39.8333 85.6 38.0667 86.3 36 86.3ZM20.8 71.9V67.3H51.2V71.9H20.8ZM21.1 60.3C17.0333 57.5667 13.8333 54.2 11.5 50.2C9.16667 46.2 8 41.7333 8 36.8C8 29.1333 10.75 22.55 16.25 17.05C21.75 11.55 28.3333 8.8 36 8.8C43.6667 8.8 50.25 11.55 55.75 17.05C61.25 22.55 64 29.1333 64 36.8C64 41.7333 62.8333 46.2 60.5 50.2C58.1667 54.2 54.9667 57.5667 50.9 60.3H21.1ZM22.7 55.7H49.3C52.5 53.5667 55 50.8333 56.8 47.5C58.6 44.1667 59.5 40.6 59.5 36.8C59.5 30.3333 57.2 24.8 52.6 20.2C48 15.6 42.4667 13.3 36 13.3C29.5333 13.3 24 15.6 19.4 20.2C14.8 24.8 12.5 30.3333 12.5 36.8C12.5 40.6 13.4 44.1667 15.2 47.5C17 50.8333 19.5 53.5667 22.7 55.7Z\"\n        fill=\"#F1D8B8\"\n      />\n    </svg>\n  );\n};\n\nexport default BulbIcon;\n","import styled from 'styled-components';\nimport { colors } from '../../../utils/colors';\nimport { device } from '../../../utils/layoutBreakpoints';\nimport { SecondaryButton } from '../Buttons/Buttons';\n\nexport const StyledSubscribeBlock = styled.div`\n  background: linear-gradient(\n      128.41deg,\n      rgba(255, 255, 255, 0.2) 0%,\n      rgba(0, 0, 0, 0.2) 100%\n    ),\n    #f8f0e6;\n  padding: 30px;\n  background-blend-mode: overlay, normal;\n  border-radius: 14px;\n  @media ${device.laptop} {\n    padding: 60px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 1.1rem;\n  line-height: 1.4rem;\n  @media ${device.laptop} {\n    font-size: 2rem;\n    line-height: 2.2rem;\n  }\n`;\n\nexport const Icon = styled.div``;\n\nexport const SubscribeForm = styled.div`\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-top: 25px;\n  }\n\n  input {\n    border: 1px solid #c3c5cd;\n    outline: none;\n    border-radius: 8px;\n    height: 50px;\n    box-sizing: border-box;\n    padding: 10px;\n    font-size: 0.8rem;\n    &::placeholder {\n      font-family: 'Rubik';\n      font-size: 0.8rem;\n    }\n  }\n  @media ${device.tablet} {\n    flex-direction: row;\n    input {\n      width: 75%;\n    }\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 0.8rem;\n  line-height: 1.1rem;\n  margin-top: 10px;\n  margin-bottom: 30px;\n  @media ${device.laptop} {\n    font-size: 0.9rem;\n    line-height: 1.3rem;\n    width: 80%;\n  }\n`;\n\nexport const Notification = styled.p`\n  color: ${colors.primary.gray500};\n  font-size: 0.6rem;\n  line-height: 0.7rem;\n  margin-bottom: 15px;\n  a {\n    font-weight: 600;\n  }\n  @media ${device.laptop} {\n    width: 80%;\n  }\n`;\n\nexport const SubsribeButton = styled(SecondaryButton)`\n  background: ${colors.primary.blue};\n  height: 50px;\n  @media ${device.laptop} {\n    font-size: 0.8rem;\n    line-height: 1rem;\n\n    box-sizing: border-box;\n  }\n`;\n","import React, { FC, useContext, useEffect, useState } from 'react';\nimport { Link } from 'gatsby';\nimport { InternalLinks } from '../../../utils/links';\nimport BulbIcon from '../Icons/BulbIcon/BulbIcon';\nimport SuccessFormSubmitMessage from '../SuccessFormSubmitMessage/SuccessFormSubmitMessage';\nimport {\n  Description,\n  Header,\n  Icon,\n  StyledSubscribeBlock,\n  SubscribeForm,\n  Title,\n  Notification,\n} from './styled';\nimport { AppContext } from '../Layout/Layout';\nimport { ClipLoader } from 'react-spinners';\nimport { colors } from '../../../utils/colors';\nimport useFetchHubSpotForms from '../../../hooks/useFetchHubSpotForms';\nimport { useInView } from 'react-cool-inview';\n\ninterface Props {\n  title: string;\n  description: string;\n}\n\nconst SubscribeBlock: FC<Props> = ({ title, description }) => {\n  const appContext = useContext(AppContext);\n  useEffect(() => {\n    //@ts-ignore\n    window.hbspt?.forms.create({\n      region: 'na1',\n      portalId: '21630623',\n      formId: '9e11a6c7-d24f-4820-9508-06489e3b552b',\n      target: '#contactUsSubsrcribeForm',\n      onFormSubmit: function () {\n        //@ts-ignore\n        gtag_report_conversion();\n      },\n    });\n  }, [appContext.hubSpot.isHubSpotFormsLoaded]);\n\n  const { observe, inView } = useInView({});\n\n  useFetchHubSpotForms(\n    [inView, appContext.hubSpot.isHubSpotFormsLoaded],\n    inView && !appContext.hubSpot.isHubSpotFormsLoaded,\n    appContext.hubSpot.setIsHubSpotFormsLoaded,\n  );\n\n  return (\n    <StyledSubscribeBlock ref={observe}>\n      <Header>\n        <Title>{title}</Title>\n        <Icon>\n          <BulbIcon />\n        </Icon>\n      </Header>\n      <Description>{description}</Description>\n      <Notification>\n        By clicking the submit button below, I hereby agree to and accept Telgorithm’s{' '}\n        <Link to={InternalLinks.TermsAndConditions}>terms and conditions</Link>.\n      </Notification>\n      {appContext.hubSpot.isHubSpotFormsLoaded ? (\n        <SubscribeForm id=\"contactUsSubsrcribeForm\"></SubscribeForm>\n      ) : (\n        <div style={{width: \"100%\", height: \"100%\", display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          <ClipLoader color={colors.primary.lightOrange} />\n        </div>\n      )}\n    </StyledSubscribeBlock>\n  );\n};\n\nexport default SubscribeBlock;\n","import styled from \"styled-components\";\nimport { colors } from \"../../utils/colors\";\nimport { device } from \"../../utils/layoutBreakpoints\";\n\nexport const StyledNewsPageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  margin-bottom: 50px;\n  align-items: flex-start;\n  gap: 15px;\n  flex-direction: column;\n  @media ${device.tablet} {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  input {\n    border: none;\n    outline: none;\n    font-size: 0.9rem;\n    &::placeholder {\n      color: ${colors.primary.gray500};\n      font-size: 0.9rem;\n    }\n  }\n`;\n\n","import React, { FC } from \"react\";\nimport { Text } from \"../common\";\nimport SearchIcon from \"../common/Icons/SearchIcon/SearchIcon\";\nimport { SearchInput, StyledNewsPageHeader } from \"./styled\";\n\ninterface Props {\n  searchString: string;\n  setSearchString: (value: string) => void;\n}\n\nexport const NewsPageHeader: FC<Props> = ({\n  searchString,\n  setSearchString,\n}) => {\n  return (\n    <StyledNewsPageHeader>\n      <div>\n        <Text.Title.Bold.lg>Latest A2P Messaging News</Text.Title.Bold.lg>\n      </div>\n      <SearchInput>\n        <SearchIcon />\n        <input\n          type=\"text\"\n          placeholder=\"Search articles\"\n          value={searchString}\n          onChange={(e) => setSearchString(e.currentTarget.value)}\n        ></input>\n      </SearchInput>\n    </StyledNewsPageHeader>\n  );\n};\n","import styled from 'styled-components';\nimport { colors } from '../../../utils/colors';\nimport { device } from '../../../utils/layoutBreakpoints';\nimport { SecondaryButton } from '../Buttons/Buttons';\n\nexport const StyledSubscribeBlock = styled.div`\n  background: linear-gradient(\n      128.41deg,\n      rgba(255, 255, 255, 0.2) 0%,\n      rgba(0, 0, 0, 0.2) 100%\n    ),\n    #f8f0e6;\n  padding: 30px;\n  background-blend-mode: overlay, normal;\n  border-radius: 14px;\n  @media ${device.laptop} {\n    padding: 60px;\n  }\n\n  box-sizing: border-box;\n\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media ${device.laptop} {\n    flex-direction: row;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Title = styled.p`\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 1.1rem;\n  line-height: 1.4rem;\n  @media ${device.laptop} {\n    font-size: 2rem;\n    line-height: 2.2rem;\n  }\n`;\n\nexport const Icon = styled.div``;\n\nexport const SubscribeForm = styled.div`\n  width: 100%;\n  max-height: 150px;\n\n  @media ${device.laptop} {\n    width: 50%;\n\n  }\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-top: 25px;\n    max-height: 150px;\n  }\n\n  input {\n    border: 1px solid #c3c5cd;\n    outline: none;\n    border-radius: 8px;\n    height: 20px;\n    box-sizing: border-box;\n    padding: 10px;\n    font-size: 0.8rem;\n    &::placeholder {\n      font-family: 'Rubik';\n      font-size: 0.8rem;\n    }\n  }\n  @media ${device.tablet} {\n    flex-direction: row;\n    input {\n      width: 75%;\n    }\n  }\n`;\n\nexport const Description = styled.p`\n  font-size: 0.8rem;\n  line-height: 1.1rem;\n  margin-top: 10px;\n  margin-bottom: 30px;\n  @media ${device.laptop} {\n    font-size: 0.9rem;\n    line-height: 1.3rem;\n    width: 80%;\n  }\n`;\n\nexport const Notification = styled.p`\n  color: ${colors.primary.gray500};\n  font-size: 0.6rem;\n  line-height: 0.7rem;\n  margin-bottom: 15px;\n  a {\n    font-weight: 600;\n  }\n  @media ${device.laptop} {\n    width: 80%;\n  }\n`;\n\nexport const SubsribeButton = styled(SecondaryButton)`\n  background: ${colors.primary.blue};\n  height: 50px;\n  @media ${device.laptop} {\n    font-size: 0.8rem;\n    line-height: 1rem;\n\n    box-sizing: border-box;\n  }\n`;\n\nexport const Content = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n`;\n","import React, { FC, useContext, useEffect, useState } from 'react';\nimport { Link } from 'gatsby';\nimport { InternalLinks } from '../../../utils/links';\nimport BulbIcon from '../Icons/BulbIcon/BulbIcon';\nimport SuccessFormSubmitMessage from '../SuccessFormSubmitMessage/SuccessFormSubmitMessage';\nimport {\n  Description,\n  Header,\n  Icon,\n  StyledSubscribeBlock,\n  SubscribeForm,\n  Title,\n  Notification,\n  Content,\n} from './styled';\nimport { AppContext } from '../Layout/Layout';\nimport { ClipLoader } from 'react-spinners';\nimport { colors } from '../../../utils/colors';\nimport useFetchHubSpotForms from '../../../hooks/useFetchHubSpotForms';\nimport { useInView } from 'react-cool-inview';\n\ninterface Props {\n  title: string;\n  description: string;\n}\n\nconst SubscribeBlockTest: FC<Props> = ({ title, description }) => {\n  const appContext = useContext(AppContext);\n  useEffect(() => {\n    //@ts-ignore\n    window.hbspt?.forms.create({\n      region: 'na1',\n      portalId: '21630623',\n      formId: '9e11a6c7-d24f-4820-9508-06489e3b552b',\n      target: '#contactUsSubsrcribeForm1',\n      onFormSubmit: function () {\n        //@ts-ignore\n        gtag_report_conversion();\n      },\n    });\n  }, [appContext.hubSpot.isHubSpotFormsLoaded]);\n\n  const { observe, inView } = useInView({});\n\n  useFetchHubSpotForms(\n    [inView, appContext.hubSpot.isHubSpotFormsLoaded],\n    inView && !appContext.hubSpot.isHubSpotFormsLoaded,\n    appContext.hubSpot.setIsHubSpotFormsLoaded,\n  );\n\n  return (\n    <StyledSubscribeBlock ref={observe}>\n      <Content>\n        <Header>\n          <Title>{title}</Title>\n        </Header>\n        <Description>{description}</Description>\n        <Notification>\n          By clicking the submit button, I hereby agree to and accept Telgorithm’s{' '}\n          <Link to={InternalLinks.TermsAndConditions}>terms and conditions</Link>.\n        </Notification>\n      </Content>\n      {appContext.hubSpot.isHubSpotFormsLoaded ? (\n        <SubscribeForm id=\"contactUsSubsrcribeForm1\"></SubscribeForm>\n      ) : (\n        <div style={{width: \"50%\", display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\n          <ClipLoader color={colors.primary.lightOrange} />\n        </div>\n      )}\n    </StyledSubscribeBlock>\n  );\n};\n\nexport default SubscribeBlockTest;\n","import * as React from 'react';\nimport Layout from '../components/common/Layout/Layout';\nimport ArticleCardItem, {\n  CardSize,\n} from '../components/common/ArticleCardItem/ArticleCardItem';\nimport { NewsPageHeader } from '../components/news';\nimport { graphql, PageProps } from 'gatsby';\nimport { mapArticleNodeToArticlePreviewInfo } from '../mappers';\nimport { useLunr } from 'react-lunr';\nimport { ArticlePreviewInfo } from '../types';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport {\n  ArticleListContentContainer,\n  ArticleList,\n  DesktopCardsContainer,\n  MediumCards,\n  MobileCardsContainer,\n  NoResultsText,\n  SmallCards,\n  SmallCardWrapper,\n} from '../components/common/styled';\nimport { useInView } from 'react-cool-inview';\nimport useWindowSize, { isDesktop } from '../hooks/useWindowSize';\nimport { StaticPageFrontmatter } from '../types/StaticPageFrontmatter';\nimport SubscribeBlockTest from '../components/common/SubscribeBlockTest';\nimport SubscribeBlock from '../components/common/SubscribeBlock';\n\nconst NewsPage = ({ data }: PageProps<Queries.NewsPageQuery>) => {\n  const [searchString, setSearchString] = React.useState<string>('');\n  const [articlesForRenderAmount, setArticlesForRenderAmount] = React.useState(10);\n\n  const rawNews: ArticlePreviewInfo[] = React.useMemo(() => {\n    return data.allMdx.edges.map((edge) => mapArticleNodeToArticlePreviewInfo(edge.node));\n  }, []);\n\n  const filteredNews: ArticlePreviewInfo[] = useLunr(\n    searchString\n      .trim()\n      .split(' ')\n      .map((word) => `${word} ${word}*`)\n      .join(' '),\n    data.localSearchNews?.index,\n    data.localSearchNews?.store,\n  ) as ArticlePreviewInfo[];\n\n  const news = searchString ? filteredNews : rawNews;\n\n  const sortedNews = [\n    ...news\n      .filter((article) => article.sortByUpdatedDate)\n      .sort(\n        (a, b) =>\n          new Date(b.lastUpdatedOn).getTime() - new Date(a.lastUpdatedOn).getTime(),\n      ),\n    ...news.filter((article) => !article.sortByUpdatedDate),\n  ];\n\n  const separatedNewsByCardSize = {\n    largeCard: sortedNews.slice(0, 1),\n    mediumCards: sortedNews.slice(1, 5),\n    smallCards: sortedNews.slice(5, articlesForRenderAmount),\n  };\n\n  const { observe } = useInView({\n    // For better UX, we can grow the root margin so the data will be loaded earlier\n    rootMargin: '50px 0px',\n    // When the last item comes to the viewport\n    onEnter: () => {\n      setArticlesForRenderAmount((st) => st + 5);\n    },\n  });\n\n  const windowSize = useWindowSize();\n  const isDesktopScreen = isDesktop(windowSize.width as number);\n\n  const title = 'The Latest News in A2P SMS and 10DLC | Telgorithm';\n\n  return (\n    <>\n      <MetaData\n        title={title}\n        description=\"Stay up to date on the latest news in A2P SMS and 10DLC and learn what it takes to provide the next level of business messaging experiences for your customers.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/news/\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/news/\" title={title} />\n      <Layout>\n        <ArticleListContentContainer>\n          <NewsPageHeader searchString={searchString} setSearchString={setSearchString} />\n          {sortedNews.length ? (\n            <ArticleList>\n              <DesktopCardsContainer>\n                {separatedNewsByCardSize.largeCard.map((articleItem) => (\n                  <ArticleCardItem\n                    article={articleItem}\n                    key={articleItem.articleId}\n                    cardSize={CardSize.L}\n                  />\n                ))}\n                {separatedNewsByCardSize.mediumCards.length > 0 && (\n                  <MediumCards>\n                    {separatedNewsByCardSize.mediumCards.map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                )}\n                <SubscribeBlockTest containerId=\"desktopForm\" title=\"Subscribe to our newsletter.\" description=\"Receive updates from our team including latest industry news, upcoming webinars, 10DLC tips & more.\" />\n                {isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                  <SmallCards>\n                    <>\n                      {separatedNewsByCardSize.smallCards.map(\n                        (articleItem, index, arr) => (\n                          <SmallCardWrapper\n                            ref={\n                              (index === arr.length - 1 ? observe : null) as (\n                                element?: any,\n                              ) => void\n                            }\n                          >\n                            <ArticleCardItem\n                              article={articleItem}\n                              key={articleItem.articleId}\n                              cardSize={CardSize.S}\n                            />\n                          </SmallCardWrapper>\n                        ),\n                      )}\n                    </>\n                  </SmallCards>\n                )}\n              </DesktopCardsContainer>\n              <MobileCardsContainer>\n                <div>\n                  <MediumCards>\n                    {[\n                      ...separatedNewsByCardSize.largeCard,\n                      ...separatedNewsByCardSize.mediumCards,\n                    ].map((articleItem) => (\n                      <ArticleCardItem\n                        article={articleItem}\n                        key={articleItem.articleId}\n                        cardSize={CardSize.M}\n                      />\n                    ))}\n                  </MediumCards>\n                </div>\n                <SubscribeBlock title=\"Subscribe to our newsletter.\" description=\"Receive updates from our team including latest industry news, upcoming webinars, 10DLC tips & more.\" />\n                <div>\n                  {!isDesktopScreen && separatedNewsByCardSize.smallCards.length > 0 && (\n                    <SmallCards>\n                      {separatedNewsByCardSize.smallCards.map(\n                        (articleItem, index, arr) => (\n                          <SmallCardWrapper\n                            ref={\n                              (index === arr.length - 1 ? observe : null) as (\n                                element?: any,\n                              ) => void\n                            }\n                          >\n                            <ArticleCardItem\n                              article={articleItem}\n                              key={articleItem.articleId}\n                              cardSize={CardSize.S}\n                            />\n                          </SmallCardWrapper>\n                        ),\n                      )}\n                    </SmallCards>\n                  )}\n                </div>\n              </MobileCardsContainer>\n            </ArticleList>\n          ) : (\n            <NoResultsText>No results for \"{searchString}\"</NoResultsText>\n          )}\n        </ArticleListContentContainer>\n      </Layout>\n    </>\n  );\n};\n\nexport default NewsPage;\n\nexport const query = graphql`\n  query NewsPage {\n    localSearchNews {\n      index\n      store\n    }\n    allMdx(\n      filter: { internal: { contentFilePath: { regex: \"//news//\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            articleType\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            sortByUpdatedDate\n            lastUpdatedOn\n            previewImage {\n              childrenImageSharp {\n                gatsbyImageData(\n                  layout: FIXED\n                  formats: WEBP\n                  webpOptions: { quality: 50 }\n                  quality: 50\n                )\n              }\n            }\n          }\n          id\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const frontmatter: StaticPageFrontmatter = {\n  title: 'The Latest News in A2P SMS and 10DLC',\n  metaTitle: 'Latest A2P Messaging News',\n  excerpt:\n    'Stay up to date on the latest news in A2P SMS and 10DLC and learn what it takes to provide the next level of business messaging experiences for your customers.',\n  slug: '/news/',\n};\n"],"names":["_ref","color","React","xmlns","width","height","viewBox","fill","d","ArticleCardTitle","styled","displayName","componentId","device","StyledArticleCardItem","colors","ArticleCardImage","ArticleCardType","ArticleCardBody","Link","withConfig","ArticleCardFooter","StyledArticleCardItemLarge","StyledArticleCardItemMedium","StyledArticleCardItemSmall","CardSize","ArticleCardItemRenderByCardSize","cardSize","children","L","M","_ref2","_articlePreviewInfo$p","_articlePreviewInfo$p2","article","date","title","url","articlePreviewInfo","staticArticlePreviewInfo","previewImage","to","GatsbyImage","image","childrenImageSharp","gatsbyImageData","alt","previewStaticImage","type","RightMiddleArrow","BulbIcon","StyledSubscribeBlock","Header","Title","Icon","SubscribeForm","Description","Notification","SecondaryButton","description","appContext","useContext","AppContext","useEffect","_window$hbspt","window","hbspt","forms","create","region","portalId","formId","target","onFormSubmit","gtag_report_conversion","hubSpot","isHubSpotFormsLoaded","observe","inView","useInView","useFetchHubSpotForms","setIsHubSpotFormsLoaded","ref","InternalLinks","id","style","display","alignItems","justifyContent","ClipLoader","StyledNewsPageHeader","SearchInput","NewsPageHeader","searchString","setSearchString","Text","SearchIcon","placeholder","value","onChange","e","currentTarget","Content","_data$localSearchNews","_data$localSearchNews2","data","articlesForRenderAmount","setArticlesForRenderAmount","rawNews","allMdx","edges","map","edge","mapArticleNodeToArticlePreviewInfo","node","filteredNews","useLunr","trim","split","word","join","localSearchNews","index","store","news","sortedNews","concat","_toConsumableArray","filter","sortByUpdatedDate","sort","a","b","Date","lastUpdatedOn","getTime","separatedNewsByCardSize","largeCard","slice","mediumCards","smallCards","rootMargin","onEnter","st","windowSize","useWindowSize","isDesktopScreen","isDesktop","MetaData","TopLevelPageJSONLDSchemas","GatsbySeoComponent","canonicalUrl","Layout","ArticleListContentContainer","length","ArticleList","DesktopCardsContainer","articleItem","ArticleCardItem","key","articleId","MediumCards","SubscribeBlockTest","containerId","SmallCards","arr","SmallCardWrapper","MobileCardsContainer","SubscribeBlock","NoResultsText","frontmatter","metaTitle","excerpt","slug"],"sourceRoot":""}