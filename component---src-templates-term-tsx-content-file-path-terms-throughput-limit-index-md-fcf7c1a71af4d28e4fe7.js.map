{"version":3,"file":"component---src-templates-term-tsx-content-file-path-terms-throughput-limit-index-md-fcf7c1a71af4d28e4fe7.js","mappings":"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","sources":["webpack://landing/./terms/throughput-limit/index.md","webpack://landing/./src/templates/term.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Rate Limit, also known as Throughput Limit, refers to the number of \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/application-to-person-messaging-a2p/\"\n  }, \"application-to-person (A2P) \"), \"text messages you are able to send within a specific period of time based on the following factors:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Whether or not you’ve verified your Toll-Free messaging traffic or registered your 10-digit long code (10DLC) messaging traffic. If you haven’t verified or registered, which is mandatory, you are sending messages from the \", React.createElement(_components.a, {\n    href: \"https://www.telgorithm.com/glossary/person-to-person-messaging-p2p/\"\n  }, \"person-to-person (P2P)\"), \" pathway, instead A2P. The P2P pathway is designated for everyday interactions between people – the rate limit for P2P messaging is 60 messages per minute. This is plenty sufficient for the P2P use case but is extremely limiting for business, or A2P, use cases.\"), \"\\n\", React.createElement(_components.li, null, \"Which phone carrier or Mobile Network Operator (MNO) your end user (or message recipient) is using. Verizon is monitoring rate limits by messages sent per number per minute; AT&T by messages sent per Campaign per minute. T-Mobile, on the other hand, has a daily cap, monitoring messages sent per day at the Brand level.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Rate limits were established to both prevent the carriers’ systems from being overwhelmed or bottlenecked, and protect the end user from unsolicited messages and/or SPAM.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Telgorithm/website/landing/terms/throughput-limit/index.md\";\nimport {Link} from 'gatsby';\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport {PrimaryButton} from '../components/common/Buttons/Buttons';\nimport Layout from '../components/common/Layout/Layout';\nimport CustomLink from '../components/common/Link';\nimport {GatsbySeoComponent, TopLevelPageJSONLDSchemas} from '../components/common/SEO';\nimport {StyledBackground, TermButtons, TermContainer, TermDefinitionContainer, TermTitle, StyledTermPage, TermDefinition} from '../components/term/styled';\nimport {InternalLinks} from '../utils/links';\nimport {Text} from '../components/common/Text';\nimport {mapTermNodeToGlossaryTerm} from '../mappers';\nconst TermPage = _ref => {\n  var _data$mdx, _data$mdx2, _allTerms, _data$mdx4, _data$mdx4$fields, _data$mdx5, _data$mdx5$fields;\n  let {data, children} = _ref;\n  const {title} = (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : _data$mdx.frontmatter;\n  const description = data === null || data === void 0 ? void 0 : (_data$mdx2 = data.mdx) === null || _data$mdx2 === void 0 ? void 0 : _data$mdx2.excerpt;\n  const allTerms = data.allMdx.edges.map(edge => mapTermNodeToGlossaryTerm(edge.node));\n  const currentTermIndex = allTerms.findIndex(item => {\n    var _data$mdx3;\n    return item.id === ((_data$mdx3 = data.mdx) === null || _data$mdx3 === void 0 ? void 0 : _data$mdx3.id);\n  });\n  const nextTerm = (_allTerms = allTerms[currentTermIndex + 1]) !== null && _allTerms !== void 0 ? _allTerms : allTerms[0];\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    title: title + \" | Telgorithm\"\n  }, React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    property: \"twitter:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    name: \"description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    property: \"twitter:description\",\n    content: description\n  })), React.createElement(TopLevelPageJSONLDSchemas, {\n    url: 'https://www.telgorithm.com/glossary/' + ((_data$mdx4 = data.mdx) === null || _data$mdx4 === void 0 ? void 0 : (_data$mdx4$fields = _data$mdx4.fields) === null || _data$mdx4$fields === void 0 ? void 0 : _data$mdx4$fields.slug)\n  }), React.createElement(GatsbySeoComponent, {\n    canonicalUrl: 'https://www.telgorithm.com/glossary/' + ((_data$mdx5 = data.mdx) === null || _data$mdx5 === void 0 ? void 0 : (_data$mdx5$fields = _data$mdx5.fields) === null || _data$mdx5$fields === void 0 ? void 0 : _data$mdx5$fields.slug)\n  }), React.createElement(Layout, {\n    disabledContainer: true\n  }, React.createElement(StyledTermPage, null, React.createElement(StyledBackground, null), React.createElement(TermContainer, null, React.createElement(TermTitle, null, React.createElement(Text.Regular.Normal.md, null, \"Term\"), React.createElement(Text.Title.Bold.md, null, title)), React.createElement(TermDefinitionContainer, null, React.createElement(Text.Regular.Normal.md, null, \"Definition\"), React.createElement(TermDefinition, null, children)), React.createElement(TermButtons, null, React.createElement(Link, {\n    to: InternalLinks.Glossary\n  }, React.createElement(PrimaryButton, null, \"Back To Glossary\")), React.createElement(CustomLink, {\n    arrow: true,\n    address: nextTerm === null || nextTerm === void 0 ? void 0 : nextTerm.url\n  }, \"View Next Term\"))))));\n};\nTermPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(TermPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"4225416997\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","ul","li","_provideComponents","components","React","href","wrapper","MDXLayout","TermPage","_ref","_data$mdx","_data$mdx2","_allTerms","_data$mdx4","_data$mdx4$fields","_data$mdx5","_data$mdx5$fields","data","children","title","mdx","frontmatter","description","excerpt","allTerms","allMdx","edges","map","edge","mapTermNodeToGlossaryTerm","node","currentTermIndex","findIndex","item","_data$mdx3","id","nextTerm","Helmet","property","content","name","TopLevelPageJSONLDSchemas","url","fields","slug","GatsbySeoComponent","canonicalUrl","Layout","disabledContainer","StyledTermPage","StyledBackground","TermContainer","TermTitle","Text","TermDefinitionContainer","TermDefinition","TermButtons","Link","to","InternalLinks","PrimaryButton","CustomLink","arrow","address","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}