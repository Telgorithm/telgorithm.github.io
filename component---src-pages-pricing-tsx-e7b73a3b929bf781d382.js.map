{"version":3,"file":"component---src-pages-pricing-tsx-e7b73a3b929bf781d382.js","mappings":"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","sources":["webpack://landing/./src/components/common/Buttons/Buttons.tsx","webpack://landing/./src/components/common/Icons/Arrows/RightArrow.tsx","webpack://landing/./src/components/common/Icons/SuccessCircleEmptyIcon/index.tsx","webpack://landing/./src/components/common/Link/index.tsx","webpack://landing/./src/components/common/Link/styled.ts","webpack://landing/./src/components/common/styled.ts","webpack://landing/./src/components/pricing/styled.ts","webpack://landing/./src/utils/calculatePrice.ts","webpack://landing/./src/components/common/RangeSlider/styled.ts","webpack://landing/./src/components/common/RangeSlider/index.tsx","webpack://landing/./src/components/common/Icons/PhoneIcon/PhoneIcon.tsx","webpack://landing/./src/components/common/Icons/SMSIcon/SMSIcon.tsx","webpack://landing/./src/components/common/Icons/MMSIcon/MMSIcon.tsx","webpack://landing/./src/components/pricing/PriceCalculator.tsx","webpack://landing/./src/components/pricing/Tables.tsx","webpack://landing/./src/components/pricing/TableWithLimitsAndPrices.tsx","webpack://landing/./src/components/common/Icons/TimerWithArrow/index.tsx","webpack://landing/./src/components/common/Icons/Arrows/RightSmallArrow.tsx","webpack://landing/./src/components/common/Icons/Magnifier/index.tsx","webpack://landing/./src/components/pricing/FeesSection.tsx","webpack://landing/./src/components/pricing/PricingHeroSection.tsx","webpack://landing/./src/components/common/Icons/HeartIcon/index.tsx","webpack://landing/./src/components/pricing/PricingFooterSection.tsx","webpack://landing/./src/components/pricing/MessagingPricingTable.tsx","webpack://landing/./src/pages/pricing.tsx","webpack://landing/./src/utils/format.ts","webpack://landing/./src/utils/round.ts","webpack://landing/./node_modules/shortid/index.js","webpack://landing/./node_modules/shortid/lib/alphabet.js","webpack://landing/./node_modules/shortid/lib/build.js","webpack://landing/./node_modules/shortid/lib/generate.js","webpack://landing/./node_modules/shortid/lib/index.js","webpack://landing/./node_modules/shortid/lib/is-valid.js","webpack://landing/./node_modules/shortid/lib/random/random-byte-browser.js","webpack://landing/./node_modules/shortid/lib/random/random-from-seed.js","webpack://landing/./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack://landing/./node_modules/shortid/node_modules/nanoid/format.browser.js","webpack://landing/./src/images/Backgrounds/blackOrangeGradient.png","webpack://landing/./src/images/CampaignSupport/BannerBackground.webp"],"sourcesContent":["import styled from 'styled-components'\nimport { colors } from '../../../utils/colors'\n\nexport const PrimaryButton = styled.button<{height?: string, padding?: string}>`\n    border-radius: 8px;\n    background: linear-gradient(90deg, ${colors.primary.lightOrange} 0%, ${colors.secondary.lightRed} 100%);\n    height: ${props => props.height ?? \"40px\"};\n    font-family: \"Rubik\";\n    font-weight: 600;\n    font-size: 0.8rem;\n    color: #FFF;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    padding: ${props => props.padding ?? \"0 32px\"};\n    box-sizing: border-box;\n    cursor: pointer;\n    line-height: 1.1rem;\n`;\n\nexport const SecondaryButton = styled(PrimaryButton)`\n    background: ${colors.secondary.orange};\n    font-size: 0.7rem;\n    font-weight: 500;\n`;\n","import React from \"react\";\nimport {SvgProps} from \"../../../../types\";\n\nconst RightArrow = ({ color } : SvgProps) => {\n  return (\n    <svg\n      width=\"30\"\n      height=\"30\"\n      viewBox=\"0 0 30 30\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M18.5371 14.1121L13.2371 8.81213C13.1209 8.69497 12.9827 8.60198 12.8303 8.53852C12.678 8.47506 12.5146 8.44238 12.3496 8.44238C12.1846 8.44238 12.0212 8.47506 11.8689 8.53852C11.7166 8.60198 11.5783 8.69497 11.4621 8.81213C11.2293 9.04633 11.0986 9.36315 11.0986 9.69338C11.0986 10.0236 11.2293 10.3404 11.4621 10.5746L15.8871 14.9996L11.4621 19.4246C11.2293 19.6588 11.0986 19.9756 11.0986 20.3059C11.0986 20.6361 11.2293 20.9529 11.4621 21.1871C11.5789 21.303 11.7174 21.3946 11.8697 21.4568C12.022 21.5191 12.1851 21.5506 12.3496 21.5496C12.5141 21.5506 12.6772 21.5191 12.8295 21.4568C12.9818 21.3946 13.1203 21.303 13.2371 21.1871L18.5371 15.8871C18.6543 15.7709 18.7473 15.6327 18.8107 15.4804C18.8742 15.328 18.9069 15.1646 18.9069 14.9996C18.9069 14.8346 18.8742 14.6712 18.8107 14.5189C18.7473 14.3666 18.6543 14.2283 18.5371 14.1121Z\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n\nexport default RightArrow;\n","import React from 'react';\n\nconst SuccessCircleEmptyIcon = () => {\n  return (\n    <svg\n      width=\"25\"\n      height=\"25\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12.3203 24.7617C10.6484 24.7617 9.07422 24.4414 7.59766 23.8008C6.12109 23.168 4.82031 22.2891 3.69531 21.1641C2.57031 20.0391 1.6875 18.7422 1.04688 17.2734C0.414062 15.7969 0.0976562 14.2188 0.0976562 12.5391C0.0976562 10.8672 0.414062 9.29688 1.04688 7.82812C1.6875 6.35156 2.56641 5.05078 3.68359 3.92578C4.80859 2.80078 6.10938 1.92188 7.58594 1.28906C9.0625 0.648437 10.6367 0.328125 12.3086 0.328125C13.9805 0.328125 15.5547 0.648437 17.0312 1.28906C18.5156 1.92188 19.8164 2.80078 20.9336 3.92578C22.0586 5.05078 22.9414 6.35156 23.582 7.82812C24.2227 9.29688 24.543 10.8672 24.543 12.5391C24.543 14.2188 24.2227 15.7969 23.582 17.2734C22.9414 18.7422 22.0586 20.0391 20.9336 21.1641C19.8164 22.2891 18.5195 23.168 17.043 23.8008C15.5664 24.4414 13.9922 24.7617 12.3203 24.7617ZM12.3203 22.0781C13.6406 22.0781 14.875 21.832 16.0234 21.3398C17.1797 20.8477 18.1953 20.168 19.0703 19.3008C19.9453 18.4258 20.6289 17.4141 21.1211 16.2656C21.6133 15.1094 21.8594 13.8672 21.8594 12.5391C21.8594 11.2188 21.6094 9.98438 21.1094 8.83594C20.6172 7.67969 19.9336 6.66406 19.0586 5.78906C18.1914 4.91406 17.1797 4.23047 16.0234 3.73828C14.875 3.24609 13.6367 3 12.3086 3C10.9883 3 9.75 3.24609 8.59375 3.73828C7.44531 4.23047 6.43359 4.91406 5.55859 5.78906C4.69141 6.66406 4.01172 7.67969 3.51953 8.83594C3.03516 9.98438 2.79297 11.2188 2.79297 12.5391C2.79297 13.8672 3.03516 15.1094 3.51953 16.2656C4.01172 17.4141 4.69531 18.4258 5.57031 19.3008C6.44531 20.168 7.45703 20.8477 8.60547 21.3398C9.76172 21.832 11 22.0781 12.3203 22.0781ZM11.0547 18.1055C10.8281 18.1055 10.6211 18.0547 10.4336 17.9531C10.2539 17.8516 10.082 17.7031 9.91797 17.5078L7.21094 14.2266C6.99219 13.9531 6.88281 13.6758 6.88281 13.3945C6.88281 13.082 6.99219 12.8164 7.21094 12.5977C7.42969 12.3789 7.69141 12.2695 7.99609 12.2695C8.18359 12.2695 8.35156 12.3086 8.5 12.3867C8.64844 12.4648 8.79688 12.5938 8.94531 12.7734L11.0312 15.3984L15.4727 8.23828C15.7383 7.81641 16.0703 7.60547 16.4688 7.60547C16.7656 7.60547 17.0312 7.70312 17.2656 7.89844C17.5 8.09375 17.6172 8.34766 17.6172 8.66016C17.6172 8.79297 17.5859 8.92969 17.5234 9.07031C17.4688 9.21094 17.3984 9.34766 17.3125 9.48047L12.168 17.4961C11.8945 17.9023 11.5234 18.1055 11.0547 18.1055Z\"\n        fill=\"#2CBF6D\"\n      />\n    </svg>\n  );\n};\n\nexport default SuccessCircleEmptyIcon;\n","import React, { PropsWithChildren } from 'react';\nimport { LinkElementInternal, LinkElementExternal } from './styled';\nimport RightArrow from '../Icons/Arrows/RightArrow';\nimport { colors } from '../../../utils/colors';\nimport shortid from 'shortid';\n\ntype LinkProps = PropsWithChildren<{\n  address: string;\n  arrow?: boolean;\n  external?: boolean;\n  color?: string;\n  inline?: boolean;\n}>;\n\nconst CustomLink = ({ address, arrow, children, external, color, inline }: LinkProps) => {\n  if (external) {\n    return (\n      <LinkElementExternal\n        href={address}\n        target=\"_blank\"\n        id={shortid.generate()}\n        color={color}\n        rel=\"noreferrer\"\n        inline={inline}\n      >\n        {children}\n        {arrow && <RightArrow color={color ?? colors.primary.blue} />}\n      </LinkElementExternal>\n    );\n  }\n\n  return (\n    <LinkElementInternal to={address} color={color}>\n      {children}\n      {arrow && <RightArrow color={color ?? colors.primary.blue} />}\n    </LinkElementInternal>\n  );\n};\n\nexport default CustomLink;\n","import { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { colors } from '../../../utils/colors';\nimport { device } from '../../../utils/layoutBreakpoints';\n\nexport const LinkElementExternal = styled.a<{ color?: string; inline?: boolean }>`\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 22px;\n  color: ${(props) => props.color ?? colors.primary.blue};\n  display: ${(props) => (props.inline ? 'inline' : 'flex')};\n  align-items: center;\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  transition: 0.5s;\n  &:hover {\n    color: ${colors.secondary.orange};\n    transition: 0.5s;\n  }\n`;\n\nexport const LinkElementInternal = styled(Link)<{ color?: string }>`\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 28px;\n  color: ${(props) => props.color ?? colors.primary.blue};\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  line-height: 22px;\n  transition: 0.5s;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  &:hover {\n    color: ${colors.secondary.orange};\n    transition: 0.5s;\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { colors } from '../../utils/colors';\nimport { device } from '../../utils/layoutBreakpoints';\nimport background from '../../images/CampaignSupport/BannerBackground.webp';\n\nexport const StyledTemplateContent = css`\n  blockquote {\n    padding: 0 25px;\n    box-sizing: border-box;\n    position: relative;\n    &::before {\n      display: block;\n      height: 100%;\n      width: 5px;\n      position: absolute;\n      content: '';\n      top: 0;\n      left: 0;\n      background-color: ${colors.primary.gray500};\n    }\n  }\n\n  em {\n    font-style: italic;\n  }\n\n  a {\n    color: ${colors.primary.blue};\n    &:hover {\n      color: ${colors.secondary.orange};\n    }\n  }\n\n  ol {\n    list-style: decimal;\n    padding-left: 10px;\n    margin-bottom: 15px;\n    @media ${device.tablet} {\n      padding-left: 25px;\n    }\n  }\n\n  ul {\n    list-style: inside;\n    padding-left: 10px;\n    margin-bottom: 15px;\n    @media ${device.tablet} {\n      padding-left: 25px;\n    }\n  }\n\n  li {\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  strong {\n    font-weight: 600;\n  }\n\n  p {\n    margin-bottom: 15px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    font-family: 'Poppins';\n    margin-bottom: 15px;\n    margin-top: 15px;\n    padding: 10px 0;\n  }\n\n  h6 {\n    font-family: 'Rubik';\n    font-size: 0.7rem;\n    color: ${colors.primary.gray500};\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  h1 {\n    font-weight: 600;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n    margin-bottom: 15px;\n  }\n\n  h2 {\n    font-size: 0.9rem;\n    line-height: 1.2rem;\n  }\n\n  h3 {\n    font-size: 0.7rem;\n    line-height: 1rem;\n  }\n\n  h4 {\n    font-size: 0.6rem;\n    line-height: 0.8rem;\n  }\n\n  h5 {\n    font-size: 0.5rem;\n    line-height: 0.7rem;\n  }\n\n  h6 {\n    font-size: 0.6rem;\n    text-align: center;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  @media ${device.laptop} {\n    font-size: 0.9rem;\n    line-height: 1.3rem;\n\n    h1 {\n      font-size: 2rem;\n      line-height: 2.6rem;\n      margin-bottom: 15px;\n    }\n\n    h2 {\n      font-size: 1.8rem;\n      line-height: 2.4rem;\n    }\n\n    h3 {\n      font-size: 1.6rem;\n      line-height: 2.2rem;\n    }\n\n    h4 {\n      font-size: 1.4rem;\n      line-height: 2rem;\n    }\n\n    h5 {\n      font-size: 1.2rem;\n      line-height: 1.8rem;\n    }\n\n    h6 {\n      font-family: 'Rubik';\n      font-size: 0.7rem;\n      color: ${colors.primary.gray500};\n    }\n  }\n`;\n\nexport const NoResultsText = styled.p`\n  word-break: break-all;\n\n  @media ${device.laptop} {\n    min-height: 300px;\n  }\n`;\n\nexport const VideoContainer = styled.div`\n  width: 300px;\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  iframe {\n    width: 80%;\n    height: 80%;\n  }\n\n  @media ${device.tablet} {\n    iframe {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  @media ${device.laptop} {\n    width: 700px;\n    height: 400px;\n  }\n`;\n\nexport const InlineBanner = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  background: url(${background});\n  background-size: cover;\n  color: ${colors.primary.white};\n  font-family: 'Poppins';\n  box-sizing: border-box;\n  border-radius: 12px;\n  gap: 30px;\n  padding: 25px;\n  line-height: 1.5rem;\n  @media ${device.tablet} {\n    padding: 40px 0;\n    p {\n      width: 60%;\n    }\n    flex-direction: row;\n  }\n`;\n\nexport const ArticleListContentContainer = styled.div`\n  @media ${device.laptop} {\n    max-width: 980px;\n    margin: 0 auto;\n  }\n`;\n\nexport const ArticleList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const MediumCards = styled.div`\n  width: 100%;\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n  gap: 30px;\n\n  @media ${device.laptop} {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n  }\n`;\n\nexport const SmallCards = styled.div`\n  display: grid;\n  grid-auto-rows: 1fr;\n  gap: 30px;\n  width: 100%;\n`;\n\nexport const MobileCardsContainer = styled.div`\n  gap: 30px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.laptop} {\n    display: none;\n  }\n`;\n\nexport const DesktopCardsContainer = styled.div`\n  display: none;\n  @media ${device.laptop} {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n  }\n`;\n\nexport const SmallCardWrapper = styled.div`\n  display: flex;\n`\n\nexport const ReturnLink = styled.div`\n  color: ${colors.primary.blue};\n  font-weight: 500;\n  font-size: 0.8rem;\n  line-height: 1.3rem;\n  transition: 0.3s;\n  padding: 20px 0;\n  @media ${device.laptop} {\n    font-size: 1rem;\n    line-height: 1.4rem;\n  }\n\n  &:hover {\n    color: ${colors.secondary.orange};\n  }\n`;\n\nexport const Badge = styled.div<{alignSelf?: string}>`\n  border-radius: 20px;\n  background-color: rgba(40, 42, 59, 0.15);\n  font-size: 14px;\n  font-weight: 500;\n  font-family: 'Rubik';\n  color: ${colors.secondary.gray700};\n  padding: 8px 12px;\n  width: fit-content;\n  align-self: ${props => props.alignSelf || \"center\"};\n\n  @media ${device.laptop} {\n    align-self: unset;\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { colors } from '../../utils/colors';\nimport { device } from '../../utils/layoutBreakpoints';\nimport { Divider } from '../common';\nimport blackOrangeGradient from '../../images/Backgrounds/blackOrangeGradient.png';\nimport {\n  TableRow,\n  TableBodyCell,\n  TableHeaderCell,\n  TableHeader,\n} from '../common/Table/styled';\nimport { RegularNormalExtraSmall } from '../common/Text';\n\nexport const PricingPageContainer = styled.div`\n  @media ${device.laptop} {\n    padding: 0 100px;\n  }\n`;\n\nexport const HeroSection = styled.section<{ marginTop?: string }>`\n  & > div {\n    padding: 0;\n  }\n  @media ${device.laptop} {\n    & > div {\n      display: flex;\n      align-items: center;\n    }\n    padding-top: 20px;\n    padding-bottom: 20px;\n  }\n\n  img {\n    user-select: none;\n  }\n\n  ${(props) =>\n    props.marginTop &&\n    css`\n      margin-top: ${props.marginTop};\n    `}\n\n  margin-bottom: 30px;\n`;\n\nexport const HeroInfo = styled.div`\n  text-align: left;\n  font-family: 'Rubik';\n  display: flex;\n  flex-direction: column;\n  transition: all 0.3s;\n\n  gap: 50px;\n\n  @media ${device.laptop} {\n    text-align: center;\n    flex-direction: row;\n    justify-content: space-between;\n    text-align: left;\n    align-items: center;\n    h1 {\n      font-size: 2rem;\n    }\n  }\n\n  @media ${device.desktop} {\n    flex-direction: row;\n    justify-content: space-between;\n    text-align: left;\n    h1 {\n      font-size: 2.5rem;\n    }\n  }\n\n  p {\n    line-height: 1.2rem;\n    font-weight: 500;\n  }\n  button {\n    align-self: center;\n    border-radius: 10px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  & > p:first-child {\n    font-size: 0.8rem;\n    font-weight: 700;\n    @media ${device.laptop} {\n      font-size: 1.2rem;\n    }\n  }\n  @media ${device.laptop} {\n    margin-left: 0;\n    width: 100%;\n    gap: 25px;\n  }\n`;\n\nexport const LinksWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-top: 15px;\n  position: relative;\n  z-index: 1;\n  justify-content: flex-start;\n  & > div:first-child {\n    width: 80%;\n  }\n\n  @media ${device.mobileL} {\n    & > div:first-child {\n      width: 50vw;\n    }\n  }\n  @media ${device.tablet} {\n    & > div:first-child {\n      width: 50%;\n    }\n  }\n  @media ${device.laptop} {\n    flex-direction: row;\n    gap: 50px;\n    & > div:first-child {\n      width: 40%;\n    }\n  }\n`;\n\nexport const DesktopHeroImage = styled.div`\n  display: none;\n\n  @media ${device.laptop} {\n    display: block;\n    width: 100%;\n  }\n`;\n\nexport const MobileHeroImage = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 25px;\n  div {\n    max-width: 100%;\n  }\n  @media ${device.tablet} {\n    div {\n      max-width: 60%;\n    }\n  }\n\n  @media ${device.laptop} {\n    display: none;\n  }\n`;\n\nexport const TitleBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin: 30px 0 40px;\n  text-align: center;\n\n  @media ${device.laptop} {\n  }\n`;\n\nexport const CalculatorBlock = styled.div`\n  border-radius: 14px;\n  width: 100%;\n  @media ${device.mobileL} {\n    width: 80%;\n    margin: 0 auto;\n    margin-bottom: -50px;\n  }\n  @media ${device.tablet} {\n    margin: 0 0 -50px;\n    width: 40%;\n  }\n  @media ${device.desktop} {\n    width: 40%;\n  }\n`;\n\nexport const CalculatorCountingSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin-bottom: 30px;\n  padding: 25px;\n  background-color: ${colors.primary.white};\n  border-radius: 16px;\n  position: relative;\n  z-index: 1;\n  border: 1px solid ${colors.secondary.gray300};\n  @media ${device.laptop} {\n    padding: 50px;\n  }\n`;\n\nexport const CalculatorNumbersSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const CalculatorCountingRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const CalculatorPriceSection = styled.div`\n  background: url(${blackOrangeGradient}) lightgray 50% / cover no-repeat;\n  height: 100px;\n  border-radius: 16px;\n  padding: 15px 25px;\n  position: relative;\n  z-index: 0;\n  top: -100px;\n  background-position: 10%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  @media ${device.laptop} {\n    padding: 30px 50px;\n  }\n`;\n\nexport const TotalPrice = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  span:first-child {\n    font-weight: 500;\n  }\n  span,\n  h2 {\n    font-family: 'Rubik';\n    color: ${colors.primary.white};\n  }\n`;\n\nexport const CalculatorSliderLabel = styled.div<{ color?: string }>`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n  ${(props) =>\n    props.color &&\n    css`\n      span {\n        color: ${props.color};\n        font-weight: bold;\n        svg {\n          fill: ${props.color};\n          path {\n            fill: ${props.color} !important;\n          }\n        }\n      }\n    `}\n`;\n\nexport const SignUpWithLinkBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  margin-bottom: 48px;\n  @media ${device.laptop} {\n    flex-direction: row;\n    justify-content: center;\n    gap: 40px;\n  }\n`;\n\nexport const FeesDescription = styled.div`\n  text-align: center;\n  a {\n    font-size: unset;\n    display: inline;\n  }\n`;\n\nexport const FeeItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const FeesBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin: 40px 0;\n`;\n\nexport const PromotionButton = styled.button`\n  padding: 10px 24px;\n  background: linear-gradient(90deg, #ff982b 0%, #ff4d49 100%);\n  border: none;\n  border-radius: 20px;\n  min-width: 280px;\n  margin: 0 auto;\n  color: ${colors.primary.white};\n  font-size: 16px;\n  font-family: 'Rubik';\n  font-weight: 500;\n  line-height: 22px;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 26px;\n  }\n  cursor: pointer;\n`;\n\nexport const FootNotesBlock = styled.div`\n  & > * {\n    color: ${colors.primary.gray500};\n  }\n`;\n\nexport const PricingTable = styled.div<{ isMessagingTable?: boolean }>`\n  width: 100%;\n  ${TableRow} {\n    background: none !important;\n    border-bottom: 1px solid ${colors.secondary.gray300};\n  }\n  ${TableHeader} {\n    border-bottom: 1px solid ${colors.secondary.gray300};\n  }\n  ${TableRow}:last-child {\n    border-bottom: none !important;\n  }\n  ${TableBodyCell} {\n    font-size: 12px;\n    line-height: 18px;\n    padding: 10px 10px 10px 0 !important;\n\n    @media ${device.laptop} {\n      font-size: 14px;\n      line-height: 20px;\n    }\n  }\n\n  ${TableHeaderCell} {\n    font-size: 12px;\n    line-height: 18px;\n    padding: 10px 10px 20px 0 !important;\n\n    @media ${device.laptop} {\n      font-size: 14px;\n      line-height: 20px;\n    }\n  }\n\n  table {\n    min-width: 600px !important;\n  }\n\n  @media ${device.laptop} {\n    table {\n      min-width: 400px !important;\n    }\n  }\n`;\n\nexport const FeeBreakdownBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin: 25px auto;\n  gap: 10px;\n  text-align: center;\n  ${RegularNormalExtraSmall} {\n    margin-top: 10px;\n    color: ${colors.primary.gray500};\n  }\n  a {\n    text-decoration: underline;\n    transition: 0s;\n    &:hover {\n      color: ${colors.secondary.orange};\n    }\n  }\n  @media ${device.laptop} {\n    margin: 50px auto;\n    width: 80%;\n  }\n`;\n\nexport const PricingCalculatorDescription = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n  @media ${device.tablet} {\n    width: 50%;\n    margin-top: -60px;\n  }\n  & > ${RegularNormalExtraSmall} {\n    margin-top: 10px;\n    color: ${colors.primary.gray500};\n  }\n  a {\n    text-decoration: underline;\n    transition: 0s;\n    &:hover {\n      color: ${colors.secondary.gray700};\n    }\n  }\n\n  @media ${device.laptop} {\n    margin-top: -100px;\n  }\n\n  @media ${device.desktop} {\n    width: 50%;\n  }\n`;\n\nexport const BenefitsBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  @media ${device.laptop} {\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n`;\n\nexport const BenefitItem = styled.div`\n  display: flex;\n  align-items: flex-start;\n  gap: 10px;\n  p {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    width: 75%;\n  }\n`;\n\nexport const PricingCalculatorSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  margin-top: 50px;\n  @media ${device.tablet} {\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const OurPromise = styled.div`\n  border: 1px solid #ff4d49;\n  padding: 10px;\n  display: flex;\n  gap: 10px;\n  align-items: flex-start;\n  border-radius: 8px;\n  text-align: left;\n  svg {\n    position: relative;\n    top: 2px;\n    transform: scale(1.1);\n  }\n  p {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n`;\n\nexport const Fee = styled.div`\n  color: ${colors.primary.gray500};\n  font-size: 0.6rem;\n  line-height: 0.9rem;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  @media ${device.laptop} {\n    margin-top: 80px;\n    font-size: 0.7rem;\n  }\n`;\n\nexport const FeeTablesFootNotes = styled.div`\n  color: ${colors.primary.gray500};\n  font-size: 0.6rem;\n  line-height: 0.9rem;\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  @media ${device.laptop} {\n    margin-top: 80px;\n    font-size: 0.7rem;\n  }\n`;\n\nexport const StyledFeesSection = styled.div`\n  margin-top: 25px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 30px;\n  margin-bottom: 50px;\n  @media ${device.laptop} {\n    margin-top: 50px;\n    flex-direction: row;\n  }\n  ${FeeTablesFootNotes} {\n    margin-top: 0;\n  }\n`;\n\nexport const PricingTab = styled.li<{ isActive: boolean }>`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  background-color: ${(props) => (props.isActive ? '#027FFF1A' : colors.primary.white)};\n  padding: 10px;\n  cursor: pointer;\n  position: relative;\n  box-sizing: border-box;\n  &:after {\n    left: 0px;\n    bottom: -5px;\n    content: '';\n    position: absolute;\n    width: 45px;\n    background-color: ${colors.primary.white};\n    height: 5px;\n  }\n  ${(props) =>\n    props.isActive &&\n    css`\n      border-radius: 8px;\n      border-bottom: 1px solid transparent !important;\n      span {\n        color: ${colors.primary.blue};\n      }\n      svg {\n        path {\n          fill: ${colors.primary.blue};\n        }\n      }\n      &:after {\n        display: none;\n      }\n    `}\n\n  &:hover {\n    span {\n      color: ${colors.primary.blue};\n    }\n    svg {\n      path {\n        fill: ${colors.primary.blue};\n      }\n    }\n  }\n`;\n\nexport const PricingTabs = styled.ul<{ activeTabNumber: number }>`\n  width: 30%;\n  display: none;\n  flex-direction: column;\n  @media ${device.laptop} {\n    display: flex;\n  }\n  ${PricingTab}:not(:last-child) {\n    border-bottom: 1px solid ${colors.secondary.gray200};\n  }\n  ${(props) =>\n    props.activeTabNumber &&\n    css`\n      ${PricingTab}:nth-child(${props.activeTabNumber}) {\n        border-bottom: 1px solid transparent !important;\n      }\n    `}\n`;\n\nexport const PricingTableContainer = styled.div`\n  padding: 30px;\n  border: 1px solid ${colors.secondary.gray200};\n  border-radius: 8px;\n  width: 100%;\n  box-sizing: border-box;\n\n  @media ${device.laptop} {\n    height: 300px;\n    width: 70%;\n  }\n\n  @media ${device.desktop} {\n    width: 60%;\n  }\n`;\n\nexport const MessagingPricingTableContainer = styled.div`\n  padding: 30px;\n  border: 2px solid ${colors.secondary.gray300};\n  border-radius: 8px;\n  width: 100%;\n  box-sizing: border-box;\n  margin: 0 auto;\n  margin-bottom: 25px;\n\n  @media ${device.laptop} {\n    padding: 15px;\n    margin-bottom: 50px;\n  }\n\n  @media ${device.desktop} {\n    padding: 30px;\n  }\n\n  ${FeeTablesFootNotes} {\n    margin-top: 25px;\n  }\n\n  ${FeeTablesFootNotes} {\n    a {\n      text-decoration: underline;\n      transition: 0s;\n      &:hover {\n        color: ${colors.secondary.gray700};\n      }\n    }\n  }\n\n  ${TableHeaderCell} {\n    div {\n      display: flex;\n      flex-direction: column;\n      gap: 5px;\n      align-items: flex-start;\n      ${RegularNormalExtraSmall} {\n        font-size: 0.9em;\n      }\n    }\n  }\n\n  tr {\n    td:first-child,\n    th:first-child {\n      border-right: 1px solid ${colors.secondary.gray300};\n    }\n    td:nth-child(2),\n    th:nth-child(2) {\n      padding-left: 20px !important;\n    }\n  }\n`;\n\nexport const PricingSectionsDropdown = styled.div`\n  margin-top: 30px;\n  @media ${device.laptop} {\n    display: none;\n  }\n`;\n\nexport const HighVolumeMessageBannerContent = styled.div`\n  width: 100%;\n  padding: 0;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 20px;\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    padding: 15px 70px;\n  }\n\n  h2 {\n    color: ${colors.primary.white};\n  }\n\n  div:first-child {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n\n    @media ${device.tablet} {\n      width: 60%;\n    }\n\n    @media ${device.laptop} {\n      width: 75%;\n    }\n\n    p {\n      width: 100%;\n    }\n  }\n\n  div:last-child {\n    display: flex;\n    align-items: end;\n  }\n`;\n","import {PricingItem} from \"../types\";\n\nexport const calculatePrice = (pricingList: PricingItem[], count: number) => {\n  let sum = 0;\n  let countLeft = count;\n\n  for (let i = 0; i < pricingList.length; i++) {\n    const current = pricingList[i];\n\n    if (current.limit !== null && countLeft > current.limit) {\n      sum += current.limit * current.price;\n      countLeft -= current.limit;\n    } else {\n      sum += countLeft * current.price;\n      break;\n    }\n  }\n\n  return sum;\n}\n","import styled, { css } from 'styled-components';\nimport { colors } from '../../../utils/colors';\n\nconst sliderThumbStyles = css`\n  height: 20px;\n  width: 20px;\n  background-color: ${colors.primary.white};\n  border-radius: 50%;\n  cursor: pointer;\n  margin-top: -8px;\n  border: none;\n  box-shadow: 0px 3px 10px 0px rgba(0, 0, 0, 0.3), 0px 0px 0px 1px rgba(0, 0, 0, 0.05);\n`;\n\nconst trackHeight = \"4px\"\n\nexport const RangeSliderContainer = styled.div`\n  input[type='range'] {\n    position: relative;\n    appearance: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    display: block;\n    width: 100%;\n    height: ${trackHeight};\n    background-color: #d5d5d5;\n    border-radius: 8px;\n    outline: none;\n    cursor: pointer;\n  }\n  input[type='range']::-webkit-slider-runnable-track {\n    -webkit-appearance: none;\n    height: ${trackHeight};\n  }\n  input[type='range']::-moz-track {\n    -moz-appearance: none;\n    height: ${trackHeight};\n  }\n  input[type='range']::-ms-track {\n    appearance: none;\n    height: ${trackHeight};\n  }\n  input[type='range']::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    ${sliderThumbStyles};\n  }\n  input[type='range']::-moz-range-thumb {\n    appearance: none;\n    ${sliderThumbStyles};\n  }\n  input[type='range']::-ms-thumb {\n    appearance: none;\n    ${sliderThumbStyles};\n  }\n`;\n\nexport const RangeSliderValue = styled.p`\n  span {\n    color: ${colors.primary.gray500};\n  }\n  justify-self: flex-end;\n`;\n\nexport const RangeSliderHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n","import React, { FC, ReactFragment, useEffect, useRef, useState } from 'react';\nimport { RangeSliderContainer, RangeSliderHeader, RangeSliderValue } from './styled';\nimport { colors } from '../../../utils/colors';\nimport { Text } from '../Text';\nimport { formatLimit, formatNumberToCompactString } from '../../../utils/format';\n\ntype Props = {\n  value: number;\n  setValue: (value: number) => void;\n  children?: React.ReactNode;\n  minValue: number;\n  maxValue: number;\n  step: number;\n};\n\nexport const RangeSlider: FC<Props> = ({ children, value, setValue, minValue, maxValue, step }) => {\n\n  const sliderRef = useRef<HTMLInputElement>(null);\n\n  const onSliderChange = (newValue: number) => {\n    setValue(newValue);\n    const valPercent = (Number(newValue) / Number(maxValue)) * 100;\n    (\n      sliderRef.current as HTMLInputElement\n    ).style.background = `linear-gradient(to right, ${colors.secondary.gray700} ${valPercent - 2}%, ${colors.secondary.gray200} ${valPercent}%)`;\n  };\n\n  useEffect(() => {\n    onSliderChange(value);\n  }, []);\n\n  return (\n    <RangeSliderContainer>\n      <RangeSliderHeader>\n        {children}\n        <RangeSliderValue>\n          <Text.Regular.Normal.md>{formatNumberToCompactString(Number(value))}</Text.Regular.Normal.md>\n        </RangeSliderValue>\n      </RangeSliderHeader>\n      <input\n        type=\"range\"\n        min={String(minValue)}\n        max={String(maxValue)}\n        step={String(step)}\n        value={value}\n        onChange={(e) => onSliderChange(Number(e.currentTarget.value))}\n        ref={sliderRef}\n      ></input>\n    </RangeSliderContainer>\n  );\n};\n","import React, { FC } from 'react';\nimport { SvgProps } from '../../../../types';\n\nconst PhoneIcon:FC<SvgProps> = ({color}) => {\n  return (\n    <svg\n      width=\"19\"\n      height=\"19\"\n      viewBox=\"0 0 19 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M13.416 18.6719C12.4551 18.6719 11.4854 18.5137 10.5068 18.1973C9.52832 17.8809 8.53809 17.3975 7.53613 16.7471C6.54004 16.0967 5.53223 15.2705 4.5127 14.2686C3.49316 13.2607 2.64941 12.2559 1.98145 11.2539C1.31934 10.2461 0.827148 9.25586 0.504883 8.2832C0.182617 7.31055 0.0214844 6.37012 0.0214844 5.46191C0.0214844 4.60645 0.15332 3.88867 0.416992 3.30859C0.680664 2.72266 1.09082 2.16309 1.64746 1.62988C1.67676 1.60645 1.70605 1.58008 1.73535 1.55078C1.77051 1.52148 1.80566 1.49219 1.84082 1.46289C2.40918 0.982422 2.99805 0.745117 3.60742 0.750977C3.95898 0.750977 4.2959 0.841797 4.61816 1.02344C4.94043 1.19922 5.23047 1.46582 5.48828 1.82324L7.47461 4.64453C7.78516 5.08398 7.9375 5.53809 7.93164 6.00684C7.93164 6.47559 7.74121 6.89453 7.36035 7.26367L6.74512 7.87891C6.61035 8.01953 6.54004 8.16309 6.53418 8.30957C6.52832 8.4502 6.59277 8.61133 6.72754 8.79297C6.84473 8.95703 6.98242 9.13574 7.14062 9.3291C7.30469 9.52246 7.47461 9.71875 7.65039 9.91797C7.83203 10.1172 8.01367 10.3047 8.19531 10.4805C8.38281 10.668 8.58789 10.8643 8.81055 11.0693C9.03906 11.2744 9.26172 11.4678 9.47852 11.6494C9.69531 11.8311 9.88281 11.9805 10.041 12.0977C10.2227 12.2441 10.3838 12.3145 10.5244 12.3086C10.6709 12.2969 10.8145 12.2207 10.9551 12.0801L11.5703 11.4648C11.9395 11.0898 12.3555 10.9023 12.8184 10.9023C13.2871 10.8965 13.7441 11.0488 14.1895 11.3594L16.9053 13.249C17.3037 13.5186 17.5908 13.8086 17.7666 14.1191C17.9424 14.4238 18.0303 14.752 18.0303 15.1035C18.0303 15.3906 17.9629 15.6895 17.8281 16C17.6992 16.3164 17.5117 16.6152 17.2656 16.8965C17.2305 16.9316 17.1982 16.9668 17.1689 17.002C17.1396 17.0371 17.1074 17.0693 17.0723 17.0986C16.5625 17.6377 16.0176 18.0332 15.4375 18.2852C14.8633 18.543 14.1895 18.6719 13.416 18.6719ZM13.3896 17.002C13.8467 16.9961 14.2715 16.9111 14.6641 16.7471C15.0566 16.5889 15.3877 16.3516 15.6572 16.0352C15.6924 16 15.7246 15.9648 15.7539 15.9297C15.7832 15.8887 15.8096 15.8506 15.833 15.8154C16.0205 15.5869 16.1143 15.3555 16.1143 15.1211C16.1143 14.998 16.085 14.8809 16.0264 14.7695C15.9736 14.6582 15.8799 14.5557 15.7451 14.4619L13.5127 12.9941C13.3369 12.8828 13.1523 12.833 12.959 12.8447C12.7715 12.8506 12.5957 12.9414 12.4316 13.1172L11.8516 13.7061C11.4883 14.0869 11.1191 14.2803 10.7441 14.2861C10.375 14.292 10.0381 14.1924 9.7334 13.9873C9.54004 13.8584 9.29395 13.6709 8.99512 13.4248C8.70215 13.1729 8.38574 12.8916 8.0459 12.5811C7.70605 12.2705 7.375 11.9541 7.05273 11.6318C6.61914 11.21 6.19434 10.7646 5.77832 10.2959C5.36816 9.82129 5.05469 9.42285 4.83789 9.10059C4.63281 8.7959 4.5332 8.45605 4.53906 8.08105C4.55078 7.70605 4.74414 7.33984 5.11914 6.98242L5.7168 6.40234C5.88672 6.23828 5.97754 6.0625 5.98926 5.875C6.00098 5.68164 5.94824 5.49707 5.83105 5.32129L4.25781 2.9834C4.09375 2.7373 3.87402 2.61426 3.59863 2.61426C3.4873 2.61426 3.37305 2.6377 3.25586 2.68457C3.13867 2.73145 3.02441 2.80176 2.91309 2.89551C2.87793 2.9248 2.83984 2.9541 2.79883 2.9834C2.76367 3.00684 2.72852 3.03613 2.69336 3.07129C2.37695 3.34668 2.13672 3.68066 1.97266 4.07324C1.81445 4.45996 1.73242 4.88184 1.72656 5.33887C1.71484 6.08301 1.86133 6.87695 2.16602 7.7207C2.4707 8.56445 2.9248 9.43164 3.52832 10.3223C4.1377 11.2129 4.89355 12.1006 5.7959 12.9854C6.69238 13.8701 7.58008 14.6113 8.45898 15.209C9.33789 15.8066 10.1934 16.2578 11.0254 16.5625C11.8574 16.8672 12.6455 17.0137 13.3896 17.002Z\"\n        fill={color || \"#5E606F\"}\n      />\n    </svg>\n  );\n};\n\nexport default PhoneIcon;\n","import React from 'react';\n\nconst SMSIcon = () => {\n  return (\n<svg\n      width=\"19\"\n      height=\"18\"\n      viewBox=\"0 0 19 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.01562 17.1641C5.67708 17.1641 5.40885 17.0521 5.21094 16.8281C5.01823 16.6042 4.92188 16.3047 4.92188 15.9297V14.0781H4.64062C3.90104 14.0781 3.25781 13.9297 2.71094 13.6328C2.16406 13.3359 1.73958 12.9089 1.4375 12.3516C1.14062 11.7943 0.992188 11.125 0.992188 10.3438V4.22656C0.992188 3.44531 1.13802 2.77604 1.42969 2.21875C1.72656 1.66146 2.15365 1.23438 2.71094 0.9375C3.26823 0.635417 3.9401 0.484375 4.72656 0.484375H14.6172C15.4089 0.484375 16.0833 0.635417 16.6406 0.9375C17.1979 1.23438 17.6224 1.66146 17.9141 2.21875C18.2109 2.77604 18.3594 3.44531 18.3594 4.22656V10.3438C18.3594 11.125 18.2109 11.7943 17.9141 12.3516C17.6224 12.9089 17.1979 13.3359 16.6406 13.6328C16.0833 13.9297 15.4089 14.0781 14.6172 14.0781H10.1094L7.45312 16.4219C7.16146 16.6771 6.90885 16.8646 6.69531 16.9844C6.48177 17.1042 6.25521 17.1641 6.01562 17.1641ZM6.44531 15.2188L8.90625 12.7891C9.08333 12.612 9.2474 12.4948 9.39844 12.4375C9.54948 12.375 9.75 12.3438 10 12.3438H14.5469C15.2448 12.3438 15.7656 12.1693 16.1094 11.8203C16.4531 11.4714 16.625 10.9531 16.625 10.2656V4.29688C16.625 3.61458 16.4531 3.09896 16.1094 2.75C15.7656 2.40104 15.2448 2.22656 14.5469 2.22656H4.80469C4.10156 2.22656 3.57812 2.40104 3.23438 2.75C2.89583 3.09896 2.72656 3.61458 2.72656 4.29688V10.2656C2.72656 10.9531 2.89583 11.4714 3.23438 11.8203C3.57812 12.1693 4.10156 12.3438 4.80469 12.3438H5.77344C5.9974 12.3438 6.16406 12.3958 6.27344 12.5C6.38802 12.599 6.44531 12.7708 6.44531 13.0156V15.2188ZM5.85156 6.47656C5.85156 5.9974 6.01302 5.60417 6.33594 5.29688C6.65885 4.98958 7.0599 4.83594 7.53906 4.83594C8.08073 4.83594 8.51302 5.02865 8.83594 5.41406C9.16406 5.79427 9.32812 6.26302 9.32812 6.82031C9.32812 7.28385 9.24479 7.69531 9.07812 8.05469C8.91667 8.40885 8.70833 8.70833 8.45312 8.95312C8.20312 9.19792 7.94271 9.38281 7.67188 9.50781C7.40104 9.63281 7.15885 9.69531 6.94531 9.69531C6.82552 9.69531 6.72656 9.66146 6.64844 9.59375C6.57031 9.52604 6.53125 9.4375 6.53125 9.32812C6.53125 9.23438 6.55729 9.15625 6.60938 9.09375C6.66667 9.02604 6.76042 8.97656 6.89062 8.94531C7.09896 8.89323 7.29688 8.8125 7.48438 8.70312C7.67708 8.58854 7.84635 8.45312 7.99219 8.29688C8.13802 8.13542 8.25 7.95312 8.32812 7.75H8.22656C8.1224 7.88021 7.98958 7.97135 7.82812 8.02344C7.66667 8.07031 7.49479 8.09375 7.3125 8.09375C6.875 8.09375 6.52083 7.9401 6.25 7.63281C5.98438 7.32031 5.85156 6.9349 5.85156 6.47656ZM10.1016 6.47656C10.1016 5.9974 10.2604 5.60417 10.5781 5.29688C10.901 4.98958 11.3047 4.83594 11.7891 4.83594C12.3307 4.83594 12.763 5.02865 13.0859 5.41406C13.4141 5.79427 13.5781 6.26302 13.5781 6.82031C13.5781 7.28385 13.4948 7.69531 13.3281 8.05469C13.1667 8.40885 12.9583 8.70833 12.7031 8.95312C12.4531 9.19792 12.1901 9.38281 11.9141 9.50781C11.6432 9.63281 11.4036 9.69531 11.1953 9.69531C11.0755 9.69531 10.9766 9.66146 10.8984 9.59375C10.8203 9.52604 10.7812 9.4375 10.7812 9.32812C10.7812 9.23438 10.8073 9.15625 10.8594 9.09375C10.9167 9.02604 11.013 8.97656 11.1484 8.94531C11.3516 8.89323 11.5469 8.8125 11.7344 8.70312C11.9271 8.58854 12.0964 8.45312 12.2422 8.29688C12.388 8.13542 12.5 7.95312 12.5781 7.75H12.4766C12.3724 7.88021 12.2396 7.97135 12.0781 8.02344C11.9167 8.07031 11.7448 8.09375 11.5625 8.09375C11.125 8.09375 10.7708 7.9401 10.5 7.63281C10.2344 7.32031 10.1016 6.9349 10.1016 6.47656Z\"\n        fill=\"#5E606F\"\n      />\n    </svg>\n  );\n};\n\nexport default SMSIcon;\n","import React from 'react';\n\nconst MMSIcon = () => {\n  return (\n    <svg\n      width=\"19\"\n      height=\"18\"\n      viewBox=\"0 0 19 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.01562 17.1641C5.67708 17.1641 5.40885 17.0521 5.21094 16.8281C5.01823 16.6042 4.92188 16.3047 4.92188 15.9297V14.0781H4.64062C3.90104 14.0781 3.25781 13.9297 2.71094 13.6328C2.16406 13.3359 1.73958 12.9089 1.4375 12.3516C1.14062 11.7943 0.992188 11.125 0.992188 10.3438V4.22656C0.992188 3.44531 1.13802 2.77604 1.42969 2.21875C1.72656 1.66146 2.15365 1.23438 2.71094 0.9375C3.26823 0.635417 3.9401 0.484375 4.72656 0.484375H14.6172C15.4089 0.484375 16.0833 0.635417 16.6406 0.9375C17.1979 1.23438 17.6224 1.66146 17.9141 2.21875C18.2109 2.77604 18.3594 3.44531 18.3594 4.22656V10.3438C18.3594 11.125 18.2109 11.7943 17.9141 12.3516C17.6224 12.9089 17.1979 13.3359 16.6406 13.6328C16.0833 13.9297 15.4089 14.0781 14.6172 14.0781H10.1094L7.45312 16.4219C7.16146 16.6771 6.90885 16.8646 6.69531 16.9844C6.48177 17.1042 6.25521 17.1641 6.01562 17.1641ZM6.44531 15.2188L8.90625 12.7891C9.08333 12.612 9.2474 12.4948 9.39844 12.4375C9.54948 12.375 9.75 12.3438 10 12.3438H14.5469C15.2448 12.3438 15.7656 12.1693 16.1094 11.8203C16.4531 11.4714 16.625 10.9531 16.625 10.2656V4.29688C16.625 3.61458 16.4531 3.09896 16.1094 2.75C15.7656 2.40104 15.2448 2.22656 14.5469 2.22656H4.80469C4.10156 2.22656 3.57812 2.40104 3.23438 2.75C2.89583 3.09896 2.72656 3.61458 2.72656 4.29688V10.2656C2.72656 10.9531 2.89583 11.4714 3.23438 11.8203C3.57812 12.1693 4.10156 12.3438 4.80469 12.3438H5.77344C5.9974 12.3438 6.16406 12.3958 6.27344 12.5C6.38802 12.599 6.44531 12.7708 6.44531 13.0156V15.2188ZM7.94531 10.3047C7.77865 10.4297 7.6224 10.4453 7.47656 10.3516C7.33073 10.2578 7.29688 10.1016 7.375 9.88281L7.99219 8.05469L6.38281 6.90625C6.27344 6.82812 6.21094 6.73698 6.19531 6.63281C6.1849 6.52865 6.21354 6.4375 6.28125 6.35938C6.34896 6.27604 6.45573 6.23438 6.60156 6.23438L8.57031 6.24219L9.15625 4.41406C9.21875 4.21615 9.33594 4.11719 9.50781 4.11719C9.67969 4.11719 9.79948 4.21615 9.86719 4.41406L10.4531 6.24219L12.4219 6.23438C12.5625 6.23438 12.6667 6.27344 12.7344 6.35156C12.8073 6.42969 12.8359 6.52344 12.8203 6.63281C12.8047 6.73698 12.7396 6.82812 12.625 6.90625L11.0391 8.05469L11.6484 9.88281C11.7214 10.1068 11.6849 10.263 11.5391 10.3516C11.3984 10.4401 11.2448 10.4245 11.0781 10.3047L9.51562 9.15625L7.94531 10.3047Z\"\n        fill=\"#5E606F\"\n      />\n    </svg>\n  );\n};\n\nexport default MMSIcon;\n","import React, { useEffect, useState } from 'react';\nimport { calculatePrice } from '../../utils/calculatePrice';\nimport {\n  CalculatorBlock,\n  CalculatorCountingSection,\n  CalculatorNumbersSection,\n  CalculatorPriceSection,\n  CalculatorSliderLabel,\n  TotalPrice,\n} from './styled';\nimport { Text } from '../common';\nimport { formatPrice } from '../../utils/format';\nimport data from '../../../data/Pricing.json';\nimport { PricingCategory } from '../../types';\nimport { RangeSlider } from '../common/RangeSlider';\nimport PhoneIcon from '../common/Icons/PhoneIcon/PhoneIcon';\nimport SMSIcon from '../common/Icons/SMSIcon/SMSIcon';\nimport MMSIcon from '../common/Icons/MMSIcon/MMSIcon';\n\nconst PriceCalculator = () => {\n  const priceCalculatorData = JSON.parse(data.code) as unknown as PricingCategory[];\n\n  const TELGORITHM_10DLC_MMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_NUMBERS_PURCHASED = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_SMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_MMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_NUMBERS_PURCHASED = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_SMS_SENT = priceCalculatorData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_SENT',\n  )?.pricingItems;\n\n  const [tenDlcNumbersAmount, setTenDlcNumbersAmount] = useState(1000);\n  const [tenDlcSmsAmount, setTenDlcSmsAmount] = useState(2000000);\n  const [tenDlcMmsAmount, setTenDlcMmsAmount] = useState(0);\n\n  const [tollFreeNumbersAmount, setTollFreeNumbersAmount] = useState(1000);\n  const [tollFreeSmsAmount, setTollFreeSmsAmount] = useState(800000);\n  const [tollFreeMmsAmount, setTollFreeMmsAmount] = useState(0);\n\n  const [tenDlcNumbersPrice, setTenDlcNumbersPrice] = useState<number>(0);\n  const [tenDlcSmsPrice, setTenDlcSmsPrice] = useState<number>(0);\n  const [tenDlcMmsPrice, setTenDlcMmsPrice] = useState<number>(0);\n  const [tollFreeNumbersPrice, setTollFreeNumbersPrice] = useState<number>(0);\n  const [tollFreeSmsPrice, setTollFreeSmsPrice] = useState<number>(0);\n  const [tollFreeMmsPrice, setTollFreeMmsPrice] = useState<number>(0);\n\n  const handle10DlcNumbersChange = (value: number) => {\n    setTenDlcNumbersAmount(value);\n    setTenDlcNumbersPrice(\n      calculatePrice(TELGORITHM_10DLC_NUMBERS_PURCHASED ?? [], value ?? 0),\n    );\n  };\n  const handle10DlcSmsChange = (value: number) => {\n    setTenDlcSmsAmount(value);\n    setTenDlcSmsPrice(calculatePrice(TELGORITHM_10DLC_SMS_SENT ?? [], value ?? 0));\n  };\n  const handle10DlcMmsChange = (value: number) => {\n    setTenDlcMmsAmount(value);\n    setTenDlcMmsPrice(calculatePrice(TELGORITHM_10DLC_MMS_SENT ?? [], value ?? 0));\n  };\n  const handleTollFreeNumbersChange = (value: number) => {\n    setTollFreeNumbersAmount(value);\n    setTollFreeNumbersPrice(\n      calculatePrice(TELGORITHM_TOLLFREE_NUMBERS_PURCHASED ?? [], value ?? 0),\n    );\n  };\n  const handleTollFreeSmsChange = (value: number) => {\n    setTollFreeSmsAmount(value);\n    setTollFreeSmsPrice(\n      calculatePrice(TELGORITHM_TOLLFREE_SMS_SENT ?? [], value ?? 0),\n    );\n  };\n  const handleTollFreeMmsChange = (value: number) => {\n    setTollFreeMmsAmount(value);\n    setTollFreeMmsPrice(\n      calculatePrice(TELGORITHM_TOLLFREE_MMS_SENT ?? [], value ?? 0),\n    );\n  };\n\n  const ourPrice =\n    tenDlcNumbersPrice +\n    tenDlcSmsPrice +\n    tenDlcMmsPrice +\n    tollFreeNumbersPrice +\n    tollFreeSmsPrice +\n    tollFreeMmsPrice;\n\n  useEffect(() => {\n    handle10DlcNumbersChange(tenDlcNumbersAmount);\n    handle10DlcSmsChange(tenDlcSmsAmount);\n    handleTollFreeNumbersChange(tollFreeNumbersAmount);\n    handleTollFreeSmsChange(tollFreeSmsAmount);\n  }, []);\n\n  return (\n    <CalculatorBlock>\n      <CalculatorCountingSection>\n        <CalculatorNumbersSection>\n          <RangeSlider\n            value={tenDlcNumbersAmount}\n            setValue={handle10DlcNumbersChange}\n            minValue={100}\n            maxValue={10000}\n            step={100}\n          >\n            <CalculatorSliderLabel color='#4245d1'>\n              <PhoneIcon color='#4245d1'/>\n              <Text.Regular.Normal.md>10DLC Numbers</Text.Regular.Normal.md>\n            </CalculatorSliderLabel>\n          </RangeSlider>\n          <RangeSlider\n            value={tenDlcSmsAmount}\n            setValue={handle10DlcSmsChange}\n            minValue={500000}\n            maxValue={10000000}\n            step={100000}\n          >\n            <CalculatorSliderLabel>\n              <SMSIcon />\n              <Text.Regular.Normal.md>Outbound SMS</Text.Regular.Normal.md>\n            </CalculatorSliderLabel>\n          </RangeSlider>\n          <RangeSlider\n            value={tenDlcMmsAmount}\n            setValue={handle10DlcMmsChange}\n            minValue={500000}\n            maxValue={10000000}\n            step={100000}\n          >\n            <CalculatorSliderLabel>\n              <MMSIcon />\n              <Text.Regular.Normal.md>Outbound MMS</Text.Regular.Normal.md>\n            </CalculatorSliderLabel>\n          </RangeSlider>\n        </CalculatorNumbersSection>\n        <CalculatorNumbersSection>\n          <RangeSlider\n            value={tollFreeNumbersAmount}\n            setValue={handleTollFreeNumbersChange}\n            minValue={100}\n            maxValue={10000}\n            step={100}\n          >\n            <CalculatorSliderLabel color=\"#e85747\">\n              <PhoneIcon color=\"#e85747\"/>\n              <Text.Regular.Normal.md>Toll-Free Numbers</Text.Regular.Normal.md>\n            </CalculatorSliderLabel>\n          </RangeSlider>\n          <RangeSlider\n            value={tollFreeSmsAmount}\n            setValue={handleTollFreeSmsChange}\n            minValue={500000}\n            maxValue={10000000}\n            step={100000}\n          >\n            <CalculatorSliderLabel>\n              <SMSIcon />\n              <Text.Regular.Normal.md>Outbound SMS</Text.Regular.Normal.md>\n            </CalculatorSliderLabel>\n          </RangeSlider>\n          <RangeSlider\n            value={tollFreeMmsAmount}\n            setValue={handleTollFreeMmsChange}\n            minValue={500000}\n            maxValue={10000000}\n            step={100000}\n          >\n            <CalculatorSliderLabel>\n              <MMSIcon />\n              <Text.Regular.Normal.md>Outbound MMS</Text.Regular.Normal.md>\n            </CalculatorSliderLabel>\n          </RangeSlider>\n        </CalculatorNumbersSection>\n      </CalculatorCountingSection>\n      <CalculatorPriceSection>\n        <TotalPrice>\n          <Text.Regular.Normal.md>Your monthly price</Text.Regular.Normal.md>\n          <Text.Title.Bold.md>${formatPrice(ourPrice)}</Text.Title.Bold.md>\n        </TotalPrice>\n      </CalculatorPriceSection>\n    </CalculatorBlock>\n  );\n};\n\nexport default PriceCalculator;\n","import { Table } from '../common';\nimport React, { FC } from 'react';\nimport { FeeTablesFootNotes, PricingTable } from './styled';\nimport { CarrierFeesFootNotes } from '../carrier-fees/styled';\nimport { PricingItem } from '../../types';\nimport { round } from '../../utils/round';\n\ntype MonthlyRecurringTableProps = {\n  localNumbers: PricingItem[];\n  tollfreeNumbers: PricingItem[];\n};\n\nexport const MonthlyRecurringTable: FC<MonthlyRecurringTableProps> = ({ localNumbers, tollfreeNumbers}) => {\n  return (\n    <>\n      <Table.Container>\n        <Table.Wrapper>\n          <PricingTable>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>Country</Table.HeaderCell>\n                  <Table.HeaderCell>Hosting Services</Table.HeaderCell>\n                  <Table.HeaderCell>\n                    Monthly Recurring Per Number Fee (first 1,000 numbers)¹\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    Monthly Recurring Per Number Fee (above 1,000 numbers)¹\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                <Table.Row>\n                  <Table.BodyCell>United States and Canada</Table.BodyCell>\n                  <Table.BodyCell>Local Numbers</Table.BodyCell>\n                  <Table.BodyCell>${localNumbers[0].price.toFixed(4)}</Table.BodyCell>\n                  <Table.BodyCell>${localNumbers[1].price.toFixed(4)}</Table.BodyCell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.BodyCell>United States and Canada</Table.BodyCell>\n                  <Table.BodyCell>Toll-free Numbers</Table.BodyCell>\n                  <Table.BodyCell>${tollfreeNumbers[0].price.toFixed(4)}</Table.BodyCell>\n                  <Table.BodyCell>${tollfreeNumbers[1].price.toFixed(4)}</Table.BodyCell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </PricingTable>\n        </Table.Wrapper>\n      </Table.Container>\n      <FeeTablesFootNotes>\n        <p>¹Preferential and Standard Pricing.</p>\n      </FeeTablesFootNotes>\n    </>\n  );\n};\n\n\ntype CallForwardingTableProps = {\n  callForwarding: PricingItem[];\n};\n\nexport const CallForwardingTable:FC<CallForwardingTableProps> = ({callForwarding}) => (\n  <>\n    <Table.Container>\n      <Table.Wrapper>\n        <PricingTable>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Country</Table.HeaderCell>\n                <Table.HeaderCell>Call Forwarding Services</Table.HeaderCell>\n                <Table.HeaderCell>Per Minute Fee¹</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.BodyCell>United States and Canada</Table.BodyCell>\n                <Table.BodyCell>Call Forwarding on Local Numbers</Table.BodyCell>\n                <Table.BodyCell>${callForwarding[0].price.toFixed(4)}</Table.BodyCell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </PricingTable>\n      </Table.Wrapper>\n    </Table.Container>\n    <FeeTablesFootNotes>\n      <p>¹Preferential and Standard Pricing.</p>\n    </FeeTablesFootNotes>\n  </>\n);\n\ntype NumberVerificationTableProps = {\n  numberVerification: PricingItem[];\n};\n\nexport const NumberLookUpTable:FC<NumberVerificationTableProps> = ({numberVerification}) => (\n  <>\n    <Table.Container>\n      <Table.Wrapper>\n        <PricingTable>\n          <Table>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Country</Table.HeaderCell>\n                <Table.HeaderCell>Number Lookup Services</Table.HeaderCell>\n                <Table.HeaderCell>Per Number Verification Fee¹</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              <Table.Row>\n                <Table.BodyCell>United States and Canada</Table.BodyCell>\n                <Table.BodyCell>Number Verification²</Table.BodyCell>\n                <Table.BodyCell>${numberVerification[0].price.toFixed(4)}</Table.BodyCell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n        </PricingTable>\n      </Table.Wrapper>\n    </Table.Container>\n    <FeeTablesFootNotes>\n      <p>¹Preferential and Standard Pricing.</p>\n      <p>\n        ²Number Lookup includes carrier, number type, city, state, number status (active /\n        inactive).{' '}\n      </p>\n    </FeeTablesFootNotes>\n  </>\n);\n","import React from 'react';\nimport { Table } from '../common';\nimport { formatLimit } from '../../utils/format';\nimport { round } from '../../utils/round';\nimport { PricingItem } from '../../types';\nimport { FeeTablesFootNotes, PricingTable } from './styled';\n\ntype TableWIthLimitsAndPricesProps = {\n  titleHeader: string;\n  firstColumnHeader: string;\n  secondColumnHeader: string;\n  firstList: PricingItem[];\n  secondList: PricingItem[];\n  messageType: 'SMS' | 'MMS';\n};\n\nconst TableWithLimitsAndPrices = ({\n  titleHeader,\n  firstColumnHeader,\n  secondColumnHeader,\n  firstList,\n  secondList,\n  messageType,\n}: TableWIthLimitsAndPricesProps) => {\n  const limitSum = firstList.reduce((accumulator, item) => {\n    return accumulator + (item.limit ?? 0);\n  }, 0);\n  const rowCount = firstList.length;\n\n  return (\n    <>\n      <Table.Container>\n        <Table.Wrapper>\n          <PricingTable>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>{titleHeader}</Table.HeaderCell>\n                  <Table.HeaderCell>{firstColumnHeader}</Table.HeaderCell>\n                  <Table.HeaderCell>{secondColumnHeader}</Table.HeaderCell>\n                  <Table.HeaderCell>Unit</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {firstList.map((first, index) => {\n                  const second = secondList[index];\n                  const title =\n                    index === 0\n                      ? `First ${formatLimit(first.limit ?? 0)} messages`\n                      : index === rowCount - 1\n                      ? `Above ${formatLimit(limitSum)} messages`\n                      : `Next ${formatLimit(first.limit ?? 0)} messages`;\n                  const firstPrice =\n                    first.price === 0\n                      ? 'Free'\n                      : `$${round(first.price, 5).toFixed(5)} `;\n                  const secondPrice =\n                    second.price === 0\n                      ? 'Free'\n                      : `$${round(second.price, 5).toFixed(5)}`;\n\n                  return (\n                    <Table.Row key={index}>\n                      <Table.BodyCell>{title}</Table.BodyCell>\n                      <Table.BodyCell>{firstPrice}</Table.BodyCell>\n                      <Table.BodyCell>{secondPrice}</Table.BodyCell>\n                      <Table.BodyCell>Per Segment</Table.BodyCell>\n                    </Table.Row>\n                  );\n                })}\n              </Table.Body>\n            </Table>\n          </PricingTable>\n        </Table.Wrapper>\n      </Table.Container>\n      <FeeTablesFootNotes>\n        <p>¹Preferential and Standard Pricing.</p>\n      </FeeTablesFootNotes>\n    </>\n  );\n};\n\nexport default TableWithLimitsAndPrices;\n","import React from 'react';\nimport { SvgProps } from '../../../../types';\n\nconst TimerWithArrow = () => {\n  return (\n    <svg\n      width=\"20\"\n      height=\"19\"\n      viewBox=\"0 0 20 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10.5361 4.55664C10.7471 4.55664 10.9258 4.63281 11.0723 4.78516C11.2246 4.93164 11.3008 5.11035 11.3008 5.32129V11.2363L10.4834 8.73145L13.3398 12.5811C13.4863 12.7686 13.5508 12.9678 13.5332 13.1787C13.5156 13.3896 13.4189 13.5566 13.2432 13.6797C13.0498 13.8145 12.8477 13.8643 12.6367 13.8291C12.4316 13.7939 12.25 13.6738 12.0918 13.4688L9.99121 10.7002C9.91504 10.6006 9.85938 10.5039 9.82422 10.4102C9.78906 10.3105 9.77148 10.2051 9.77148 10.0938V5.32129C9.77148 5.11035 9.84473 4.93164 9.99121 4.78516C10.1436 4.63281 10.3252 4.55664 10.5361 4.55664ZM10.8701 18.7334C9.9209 18.7334 9.00098 18.584 8.11035 18.2852C7.22559 17.9922 6.4082 17.5762 5.6582 17.0371C4.91406 16.5039 4.26953 15.8857 3.72461 15.1826C3.53125 14.9482 3.44922 14.7051 3.47852 14.4531C3.50781 14.2012 3.62207 14.002 3.82129 13.8555C4.03809 13.7031 4.26367 13.6533 4.49805 13.7061C4.73242 13.7588 4.94043 13.8877 5.12207 14.0928C5.56152 14.6729 6.07715 15.1768 6.66895 15.6045C7.2666 16.0264 7.91699 16.3516 8.62012 16.5801C9.3291 16.8145 10.0791 16.9346 10.8701 16.9404C11.8779 16.9463 12.8213 16.7588 13.7002 16.3779C14.585 16.0029 15.3584 15.4844 16.0205 14.8223C16.6885 14.1543 17.21 13.3809 17.585 12.502C17.9658 11.6172 18.1562 10.668 18.1562 9.6543C18.1562 8.64648 17.9658 7.70312 17.585 6.82422C17.21 5.93945 16.6885 5.16602 16.0205 4.50391C15.3584 3.83594 14.585 3.31445 13.7002 2.93945C12.8213 2.56445 11.8779 2.37695 10.8701 2.37695C9.85645 2.37695 8.91016 2.56445 8.03125 2.93945C7.1582 3.30859 6.3877 3.82422 5.71973 4.48633C5.05176 5.14844 4.52734 5.91895 4.14648 6.79785C3.77148 7.6709 3.58105 8.61133 3.5752 9.61914H1.78223C1.78809 8.37695 2.02832 7.21094 2.50293 6.12109C2.97754 5.03125 3.63379 4.07031 4.47168 3.23828C5.30957 2.40625 6.27344 1.75586 7.36328 1.28711C8.45898 0.8125 9.62793 0.575195 10.8701 0.575195C12.1123 0.575195 13.2812 0.8125 14.377 1.28711C15.4727 1.76172 16.4365 2.41797 17.2686 3.25586C18.1064 4.08789 18.7627 5.05176 19.2373 6.14746C19.7119 7.24316 19.9492 8.41211 19.9492 9.6543C19.9492 10.8965 19.7119 12.0654 19.2373 13.1611C18.7627 14.2568 18.1064 15.2236 17.2686 16.0615C16.4365 16.8994 15.4727 17.5527 14.377 18.0215C13.2812 18.4961 12.1123 18.7334 10.8701 18.7334ZM0.727539 7.86133H5.06934C5.29199 7.86133 5.45898 7.91406 5.57031 8.01953C5.6875 8.11914 5.74316 8.24805 5.7373 8.40625C5.73145 8.55859 5.66992 8.72266 5.55273 8.89844L3.41699 11.8604C3.27051 12.0596 3.09766 12.1621 2.89844 12.168C2.69922 12.168 2.52344 12.0654 2.37109 11.8604L0.235352 8.89844C0.118164 8.72852 0.0566406 8.56445 0.0507812 8.40625C0.0449219 8.24805 0.0976562 8.11914 0.208984 8.01953C0.326172 7.91406 0.499023 7.86133 0.727539 7.86133Z\"\n        fill=\"#282A3B\"\n      />\n    </svg>\n  );\n};\n\nexport default TimerWithArrow;\n","import React from 'react';\nimport { SvgProps } from '../../../../types';\n\nconst RightSmallArrow = () => {\n  return (\n    <svg\n      width=\"20\"\n      height=\"17\"\n      viewBox=\"0 0 20 17\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M11.1865 16.8281C10.8467 16.8281 10.5625 16.7168 10.334 16.4941C10.1113 16.2715 10 15.9932 10 15.6592V12.4863H9.78027C8.70801 12.4863 7.76465 12.6006 6.9502 12.8291C6.13574 13.0576 5.4209 13.4297 4.80566 13.9453C4.19043 14.4609 3.65137 15.1523 3.18848 16.0195C3.01855 16.3359 2.82812 16.5439 2.61719 16.6436C2.41211 16.7432 2.19531 16.793 1.9668 16.793C1.66211 16.793 1.4043 16.6523 1.19336 16.3711C0.988281 16.0957 0.885742 15.6855 0.885742 15.1406C0.885742 13.5469 1.06445 12.1172 1.42188 10.8516C1.7793 9.58008 2.32129 8.49609 3.04785 7.59961C3.78027 6.70312 4.70312 6.02051 5.81641 5.55176C6.93555 5.07715 8.25684 4.83984 9.78027 4.83984H10V1.69336C10 1.35938 10.1113 1.0752 10.334 0.84082C10.5625 0.600586 10.8496 0.480469 11.1953 0.480469C11.4297 0.480469 11.6406 0.533203 11.8281 0.638672C12.0215 0.738281 12.2441 0.908203 12.4961 1.14844L19.457 7.63477C19.627 7.79297 19.7471 7.96289 19.8174 8.14453C19.8936 8.32031 19.9316 8.49023 19.9316 8.6543C19.9316 8.8125 19.8936 8.98242 19.8174 9.16406C19.7471 9.3457 19.627 9.51562 19.457 9.67383L12.4961 16.2129C12.2676 16.4297 12.0479 16.585 11.8369 16.6787C11.6318 16.7783 11.415 16.8281 11.1865 16.8281ZM11.7314 14.5869C11.7842 14.5869 11.834 14.5635 11.8809 14.5166L17.9102 8.82129C17.9453 8.78613 17.9688 8.75684 17.9805 8.7334C17.9922 8.7041 17.998 8.67773 17.998 8.6543C17.998 8.60742 17.9688 8.55469 17.9102 8.49609L11.8896 2.73047C11.8662 2.71289 11.8398 2.69824 11.8105 2.68652C11.7871 2.6748 11.7637 2.66895 11.7402 2.66895C11.6465 2.66895 11.5996 2.71289 11.5996 2.80078V6.13184C11.5996 6.3252 11.5059 6.42188 11.3184 6.42188H10.1846C9.04785 6.42188 8.05176 6.5625 7.19629 6.84375C6.34082 7.11914 5.61133 7.50879 5.00781 8.0127C4.41016 8.5166 3.9209 9.10547 3.54004 9.7793C3.16504 10.4473 2.88379 11.1738 2.69629 11.959C2.50879 12.7383 2.40039 13.5439 2.37109 14.376C2.37109 14.4404 2.3916 14.4727 2.43262 14.4727C2.45605 14.4727 2.47363 14.4668 2.48535 14.4551C2.49707 14.4375 2.50879 14.4141 2.52051 14.3848C3.04199 13.2891 3.94434 12.4365 5.22754 11.8271C6.51074 11.2119 8.16309 10.9043 10.1846 10.9043H11.3184C11.5059 10.9043 11.5996 10.998 11.5996 11.1855V14.4463C11.5996 14.54 11.6436 14.5869 11.7314 14.5869Z\"\n        fill={\"#282A3B\"}\n      />\n    </svg>\n  );\n};\n\nexport default RightSmallArrow;\n","import React from 'react';\nimport { SvgProps } from '../../../../types';\n\nconst Magnifier = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"19\"\n      viewBox=\"0 0 18 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0.316406 8.05469C0.316406 7.07031 0.500977 6.14746 0.870117 5.28613C1.24512 4.41895 1.76074 3.65723 2.41699 3.00098C3.07324 2.33887 3.83203 1.82324 4.69336 1.4541C5.56055 1.08496 6.48633 0.900391 7.4707 0.900391C8.46094 0.900391 9.38672 1.08496 10.248 1.4541C11.1152 1.82324 11.877 2.33887 12.5332 3.00098C13.1895 3.65723 13.7021 4.41895 14.0713 5.28613C14.4463 6.14746 14.6338 7.07031 14.6338 8.05469C14.6338 8.82812 14.5137 9.56348 14.2734 10.2607C14.0391 10.958 13.7139 11.5938 13.2979 12.168L17.3057 16.1934C17.4287 16.3105 17.5195 16.4482 17.5781 16.6064C17.6426 16.7646 17.6748 16.9316 17.6748 17.1074C17.6748 17.3535 17.6191 17.5762 17.5078 17.7754C17.3965 17.9746 17.2441 18.1299 17.0508 18.2412C16.8574 18.3584 16.6348 18.417 16.3828 18.417C16.207 18.417 16.0371 18.3848 15.873 18.3203C15.7148 18.2617 15.5713 18.168 15.4424 18.0391L11.4082 14.0049C10.8457 14.3799 10.2305 14.6758 9.5625 14.8926C8.90039 15.1035 8.20312 15.209 7.4707 15.209C6.48633 15.209 5.56055 15.0244 4.69336 14.6553C3.83203 14.2861 3.07324 13.7734 2.41699 13.1172C1.76074 12.4609 1.24512 11.7021 0.870117 10.8408C0.500977 9.97363 0.316406 9.04492 0.316406 8.05469ZM2.18848 8.05469C2.18848 8.78711 2.32324 9.47266 2.59277 10.1113C2.86816 10.75 3.24902 11.3125 3.73535 11.7988C4.22168 12.2793 4.78418 12.6572 5.42285 12.9326C6.06152 13.208 6.74414 13.3457 7.4707 13.3457C8.20312 13.3457 8.88867 13.208 9.52734 12.9326C10.166 12.6572 10.7256 12.2793 11.2061 11.7988C11.6924 11.3125 12.0732 10.75 12.3486 10.1113C12.624 9.47266 12.7617 8.78711 12.7617 8.05469C12.7617 7.32812 12.624 6.64551 12.3486 6.00684C12.0732 5.36816 11.6924 4.80566 11.2061 4.31934C10.7256 3.83301 10.166 3.45508 9.52734 3.18555C8.88867 2.91016 8.20312 2.77246 7.4707 2.77246C6.74414 2.77246 6.06152 2.91016 5.42285 3.18555C4.78418 3.45508 4.22168 3.83301 3.73535 4.31934C3.24902 4.80566 2.86816 5.36816 2.59277 6.00684C2.32324 6.64551 2.18848 7.32812 2.18848 8.05469Z\"\n        fill=\"#282A3B\"\n      />\n    </svg>\n  );\n};\n\nexport default Magnifier;\n","import React, { useState } from 'react';\nimport data from '../../../data/Pricing.json';\nimport { PricingCategory } from '../../types';\nimport { CallForwardingTable, MonthlyRecurringTable, NumberLookUpTable } from './Tables';\nimport { Text } from '../common/Text';\nimport TimerWithArrow from '../common/Icons/TimerWithArrow';\nimport RightSmallArrow from '../common/Icons/Arrows/RightSmallArrow';\nimport Magnifier from '../common/Icons/Magnifier';\nimport { DropdownInput } from '../common/Form';\nimport {\n  PricingSectionsDropdown,\n  PricingTab,\n  PricingTableContainer,\n  PricingTabs,\n  StyledFeesSection,\n} from './styled';\n\nexport enum PricingTabsName {\n  MonthlyRecurringFees = 'Monthly Recurring Fees',\n  CallForwardingFee = 'Call Forwarding Fee',\n  NumberLookUpFee = 'Number Look-up Fee',\n}\n\nconst RenderPricingTable = ({\n  pricingCategory,\n}: {\n  pricingCategory: PricingTabsName;\n}) => {\n  const pricingData = JSON.parse(data.code) as unknown as PricingCategory[];\n\n  const CALL_FORWARDING_10DLC_NUMBERS = pricingData.find(\n    (category) => category.categoryName === 'CALL_FORWARDING_10DLC_NUMBERS',\n  )?.pricingItems;\n\n  const NUMBER_VERIFICATION = pricingData.find(\n    (category) => category.categoryName === 'NUMBER_VERIFICATION',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_NUMBERS_PURCHASED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_NUMBERS_PURCHASED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_NUMBERS_PURCHASED',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_MMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_MMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_RECEIVED',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_SMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_10DLC_SMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_RECEIVED',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_MMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_MMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_RECEIVED',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_SMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_SENT',\n  )?.pricingItems;\n\n  const TELGORITHM_TOLLFREE_SMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_RECEIVED',\n  )?.pricingItems;\n\n  switch (pricingCategory) {\n    case PricingTabsName.MonthlyRecurringFees:\n      return (\n        <MonthlyRecurringTable\n          tollfreeNumbers={TELGORITHM_TOLLFREE_NUMBERS_PURCHASED ?? []}\n          localNumbers={TELGORITHM_10DLC_NUMBERS_PURCHASED ?? []}\n        />\n      );\n    case PricingTabsName.CallForwardingFee:\n      return <CallForwardingTable callForwarding={CALL_FORWARDING_10DLC_NUMBERS ?? []} />;\n    case PricingTabsName.NumberLookUpFee:\n      return <NumberLookUpTable numberVerification={NUMBER_VERIFICATION ?? []} />;\n    default:\n      return <></>;\n  }\n};\n\nconst FeesSection = () => {\n  const [activeTab, setActiveTab] = useState<PricingTabsName>(\n    PricingTabsName.MonthlyRecurringFees,\n  );\n\n  const activeTabNumber = Object.values(PricingTabsName).findIndex(\n    (item) => item === activeTab,\n  );\n\n  return (\n    <StyledFeesSection>\n      <PricingSectionsDropdown>\n        <DropdownInput\n          value={activeTab}\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setActiveTab(event.currentTarget.value as PricingTabsName)\n          }\n        >\n          <option value={PricingTabsName.MonthlyRecurringFees}>\n            {PricingTabsName.MonthlyRecurringFees}\n          </option>\n          <option value={PricingTabsName.CallForwardingFee}>\n            {PricingTabsName.CallForwardingFee}\n          </option>\n          <option value={PricingTabsName.NumberLookUpFee}>\n            {PricingTabsName.NumberLookUpFee}\n          </option>\n        </DropdownInput>\n      </PricingSectionsDropdown>\n      <PricingTabs activeTabNumber={activeTabNumber}>\n        <PricingTab\n          onClick={() => setActiveTab(PricingTabsName.MonthlyRecurringFees)}\n          isActive={activeTab === PricingTabsName.MonthlyRecurringFees}\n        >\n          <TimerWithArrow />\n          <Text.Regular.Normal.md>Monthly Recurring Fees</Text.Regular.Normal.md>\n        </PricingTab>\n        <PricingTab\n          onClick={() => setActiveTab(PricingTabsName.CallForwardingFee)}\n          isActive={activeTab === PricingTabsName.CallForwardingFee}\n        >\n          <RightSmallArrow />\n          <Text.Regular.Normal.md>Call Forwarding Fee</Text.Regular.Normal.md>\n        </PricingTab>\n        <PricingTab\n          onClick={() => setActiveTab(PricingTabsName.NumberLookUpFee)}\n          isActive={activeTab === PricingTabsName.NumberLookUpFee}\n        >\n          <Magnifier />\n          <Text.Regular.Normal.md>Number Look-up Fee</Text.Regular.Normal.md>\n        </PricingTab>\n      </PricingTabs>\n      <PricingTableContainer>\n        <RenderPricingTable pricingCategory={activeTab} />\n      </PricingTableContainer>\n    </StyledFeesSection>\n  );\n};\n\nexport default FeesSection;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React, { FC } from 'react';\nimport { InternalLinks } from '../../utils/links';\nimport { PrimaryButton } from '../common/Buttons/Buttons';\nimport { Container } from '../common/Container/Container';\nimport { AppContext } from '../common/Layout/Layout';\nimport { Text } from '../common/Text';\nimport {\n  HeroSection,\n  HeroInfo,\n  Wrapper,\n  LinksWrapper,\n  DesktopHeroImage,\n  MobileHeroImage,\n} from './styled';\nimport { Link } from 'gatsby';\nimport CustomLink from '../common/Link';\n\nexport const PricingPageHeroSection: FC = () => {\n  return (\n    <HeroSection>\n      <Container>\n        <HeroInfo>\n          <Wrapper>\n            <Text.Title.Bold.xl>SMS & MMS Text Messaging API Pricing</Text.Title.Bold.xl>\n            <p>\n              <Text.Regular.Normal.md>\n                Our text messaging API was developed to intuitively maximize your spend\n                for the best possible ROI, but we didn’t stop there. We offer highly\n                competitive committed usage pricing so that you can feel confident in your\n                investment.\n              </Text.Regular.Normal.md>\n            </p>\n            <ActionButtons />\n            <MobileHeroImage>\n              <StaticImage\n                src={'../../images/Pricing/office.webp'}\n                alt=\"Laptop\"\n                placeholder=\"none\"\n              ></StaticImage>\n            </MobileHeroImage>\n          </Wrapper>\n          <DesktopHeroImage>\n            <StaticImage\n              src={'../../images/Pricing/office.webp'}\n              alt=\"Laptop\"\n              placeholder=\"none\"\n            ></StaticImage>\n          </DesktopHeroImage>\n        </HeroInfo>\n      </Container>\n    </HeroSection>\n  );\n};\n\nexport const ActionButtons = () => {\n  return (\n    <LinksWrapper>\n      <Link to={InternalLinks.PaygTrial}>\n        <PrimaryButton height=\"auto\" padding=\"10px 25px\">\n          Request a Trial\n        </PrimaryButton>\n      </Link>\n      <CustomLink address={InternalLinks.Pricing + '#pricing-table'} arrow>\n        View Pricing\n      </CustomLink>\n    </LinksWrapper>\n  );\n};\n","import React from 'react';\n\nconst HeartIcon = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M8.99121 17.1533C8.88574 17.1533 8.75684 17.1182 8.60449 17.0479C8.45215 16.9775 8.31152 16.8984 8.18262 16.8105C6.54199 15.7559 5.11523 14.6484 3.90234 13.4883C2.69531 12.3281 1.76074 11.1328 1.09863 9.90234C0.442383 8.67188 0.114258 7.43262 0.114258 6.18457C0.114258 5.37598 0.243164 4.6377 0.500977 3.96973C0.758789 3.2959 1.11914 2.71582 1.58203 2.22949C2.04492 1.74316 2.57812 1.36816 3.18164 1.10449C3.79102 0.834961 4.44727 0.700195 5.15039 0.700195C6.02344 0.700195 6.78516 0.922852 7.43555 1.36816C8.08594 1.81348 8.60449 2.39355 8.99121 3.1084C9.38965 2.3877 9.91113 1.80762 10.5557 1.36816C11.2061 0.922852 11.9678 0.700195 12.8408 0.700195C13.5439 0.700195 14.2002 0.834961 14.8096 1.10449C15.4189 1.36816 15.9521 1.74316 16.4092 2.22949C16.8662 2.71582 17.2236 3.2959 17.4814 3.96973C17.7451 4.6377 17.877 5.37598 17.877 6.18457C17.877 7.43262 17.5459 8.67188 16.8838 9.90234C16.2217 11.1328 15.2871 12.3281 14.0801 13.4883C12.8789 14.6484 11.458 15.7559 9.81738 16.8105C9.68262 16.8984 9.53906 16.9775 9.38672 17.0479C9.24023 17.1182 9.1084 17.1533 8.99121 17.1533Z\"\n        fill=\"#FF4D49\"\n      />\n    </svg>\n  );\n};\n\nexport default HeartIcon;\n","import { StaticImage } from 'gatsby-plugin-image';\nimport React, { FC, useContext } from 'react';\nimport { InternalLinks } from '../../utils/links';\nimport { PrimaryButton } from '../common/Buttons/Buttons';\nimport { Container } from '../common/Container/Container';\nimport { AppContext } from '../common/Layout/Layout';\nimport LinkWithArrow from '../common/LinkWithArrow/LinkWithArrow';\nimport { Text } from '../common/Text';\nimport {\n  HeroSection,\n  HeroInfo,\n  Wrapper,\n  LinksWrapper,\n  DesktopHeroImage,\n  MobileHeroImage,\n  OurPromise,\n} from './styled';\nimport HeartIcon from '../common/Icons/HeartIcon';\nimport { Link } from 'gatsby';\n\nexport const PricingPageFooterSection: FC = () => {\n  return (\n    <HeroSection marginTop={'40px'}>\n      <Container>\n        <HeroInfo>\n          <DesktopHeroImage>\n            <StaticImage\n              src={'../../images/Pricing/manWithLaptop.webp'}\n              alt=\"Laptop\"\n              placeholder=\"none\"\n            ></StaticImage>\n          </DesktopHeroImage>\n          <Wrapper>\n            <Text.Title.Bold.md>Speak with a 10DLC expert.</Text.Title.Bold.md>\n            <p>\n              <Text.Regular.Normal.md>\n                Experience 10DLC automation and reliable message deliverability with\n                Telgorithm, the only company offering automated registration, number\n                migration, and rate limit management for the most optimal 10DLC\n                experience.\n              </Text.Regular.Normal.md>\n            </p>\n            <OurPromise>\n              <HeartIcon />\n              <p>\n                <Text.Regular.Bold.md>Our promise</Text.Regular.Bold.md>\n                <Text.Regular.Normal.md>\n                  You will receive hands-on customer support every step of the way to\n                  start sending fully-compliant 10DLC messages faster.\n                </Text.Regular.Normal.md>\n              </p>\n            </OurPromise>\n            <ActionButtons />\n            <MobileHeroImage>\n              <StaticImage\n                src={'../../images/Pricing/manWithLaptop.webp'}\n                alt=\"Laptop\"\n                placeholder=\"none\"\n              ></StaticImage>\n            </MobileHeroImage>\n          </Wrapper>\n        </HeroInfo>\n      </Container>\n    </HeroSection>\n  );\n};\n\nexport const ActionButtons = () => {\n  const appContext = useContext(AppContext);\n  return (\n    <LinksWrapper>\n      <div>\n        <Link to={InternalLinks.ContactUs}>\n          <PrimaryButton height=\"auto\" padding=\"10px 25px\">\n            Get in Touch\n          </PrimaryButton>\n        </Link>\n      </div>\n    </LinksWrapper>\n  );\n};\n","import React from 'react';\nimport { Table, Text } from '../common';\nimport {\n  FeeTablesFootNotes,\n  MessagingPricingTableContainer,\n  PricingTable,\n} from './styled';\nimport { Link } from 'gatsby-link';\nimport { InternalLinks } from '../../utils/links';\nimport data from '../../../data/Pricing.json';\nimport { PricingCategory, PricingItem } from '../../types';\nimport { round } from '../../utils/round';\n\nconst MessagingPricingTable = () => {\n  const pricingData = JSON.parse(data.code) as unknown as PricingCategory[];\n  const TELGORITHM_10DLC_MMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_SENT',\n  )?.pricingItems as PricingItem[];\n\n  const TELGORITHM_10DLC_MMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_MMS_RECEIVED',\n  )?.pricingItems as PricingItem[];\n\n  const TELGORITHM_10DLC_SMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_SENT',\n  )?.pricingItems as PricingItem[];\n\n  const TELGORITHM_10DLC_SMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_10DLC_SMS_RECEIVED',\n  )?.pricingItems as PricingItem[];\n\n  const TELGORITHM_TOLLFREE_MMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_SENT',\n  )?.pricingItems as PricingItem[];\n\n  const TELGORITHM_TOLLFREE_MMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_MMS_RECEIVED',\n  )?.pricingItems as PricingItem[];\n\n  const TELGORITHM_TOLLFREE_SMS_SENT = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_SENT',\n  )?.pricingItems as PricingItem[];\n\n  const TELGORITHM_TOLLFREE_SMS_RECEIVED = pricingData.find(\n    (category) => category.categoryName === 'TELGORITHM_TOLLFREE_SMS_RECEIVED',\n  )?.pricingItems as PricingItem[];\n\n  const renderPrice = (price: number, unitName: string) => {\n    return price === 0 ? (\n      <Text.Regular.Bold.md>Free</Text.Regular.Bold.md>\n    ) : (\n      <Text.Regular.Normal.md>{`$${round(price, 5).toFixed(\n        5,\n      )} / ${unitName}`}</Text.Regular.Normal.md>\n    );\n  };\n\n  return (\n    <MessagingPricingTableContainer>\n      <Table.Container>\n        <Table.Wrapper>\n          <PricingTable>\n            <Table>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell>\n                    <Text.Title.Bold.sm>Phone Number Types</Text.Title.Bold.sm>\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <div>\n                      <Text.Title.Bold.sm>SMS Inbound</Text.Title.Bold.sm>\n                      <Text.Regular.Normal.sm>Received</Text.Regular.Normal.sm>\n                    </div>\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <div>\n                      <Text.Title.Bold.sm>SMS Outbound</Text.Title.Bold.sm>\n                      <Text.Regular.Normal.sm>Sent</Text.Regular.Normal.sm>\n                    </div>\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <div>\n                      <Text.Title.Bold.sm>MMS Inbound</Text.Title.Bold.sm>\n                      <Text.Regular.Normal.sm>Received</Text.Regular.Normal.sm>\n                    </div>\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>\n                    <div>\n                      <Text.Title.Bold.sm>MMS Outbound</Text.Title.Bold.sm>\n                      <Text.Regular.Normal.sm>Sent</Text.Regular.Normal.sm>\n                    </div>\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                <Table.Row>\n                  <Table.BodyCell>\n                    <Text.Regular.Normal.md>\n                      10-digit Long Code (10DLC)\n                    </Text.Regular.Normal.md>\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_10DLC_SMS_RECEIVED[0].price, 'SMS')}\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_10DLC_SMS_SENT[0].price, 'SMS')}\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_10DLC_MMS_RECEIVED[0].price, 'MMS')}\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_10DLC_MMS_SENT[0].price, 'MMS')}\n                  </Table.BodyCell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.BodyCell>\n                    <Text.Regular.Normal.md>Toll-free</Text.Regular.Normal.md>\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_TOLLFREE_SMS_RECEIVED[0].price, 'SMS')}\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_TOLLFREE_SMS_SENT[0].price, 'SMS')}\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_TOLLFREE_MMS_RECEIVED[0].price, 'MMS')}\n                  </Table.BodyCell>\n                  <Table.BodyCell>\n                    {renderPrice(TELGORITHM_TOLLFREE_MMS_SENT[0].price, 'MMS')}\n                  </Table.BodyCell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </PricingTable>\n        </Table.Wrapper>\n      </Table.Container>\n      <FeeTablesFootNotes>\n        <p>\n          *SMS / MMS messages are charged per segment. Prices do not include{' '}\n          <Link to={InternalLinks.CarrierFees}>Carrier pass-through fees.</Link>\n        </p>\n      </FeeTablesFootNotes>\n    </MessagingPricingTableContainer>\n  );\n};\n\nexport default MessagingPricingTable;\n","import React from 'react';\nimport { Divider, Layout, Text } from '../components/common';\nimport {\n  FeeBreakdownBlock,\n  PricingCalculatorDescription,\n  BenefitsBlock,\n  BenefitItem,\n  PricingCalculatorSection,\n  HighVolumeMessageBannerContent,\n} from '../components/pricing/styled';\nimport { PriceCalculator } from '../components/pricing';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport { InternalLinks } from '../utils/links';\nimport FeesSection from '../components/pricing/FeesSection';\nimport { PricingPageHeroSection } from '../components/pricing/PricingHeroSection';\nimport { Link } from 'gatsby';\nimport SuccessCircleEmptyIcon from '../components/common/Icons/SuccessCircleEmptyIcon';\nimport { PrimaryButton } from '../components/common/Buttons/Buttons';\nimport { PricingPageFooterSection } from '../components/pricing/PricingFooterSection';\nimport MessagingPricingTable from '../components/pricing/MessagingPricingTable';\nimport CustomLink from '../components/common/Link';\nimport { InlineBanner } from '../components/common/styled';\n\nconst Pricing = () => {\n  return (\n    <>\n      <MetaData\n        title=\"Pricing | Telgorithm\"\n        description=\"At Telgorithm, we offer unbeatable SMS API pricing. Start saving up to 40% less on 10DLC and 20% on toll-free messaging today.\"\n      />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/pricing/\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/pricing/\" />\n      <Layout>\n        <PricingPageHeroSection />\n        <Divider />\n        <FeeBreakdownBlock id='pricing-table'>\n          <Text.Title.Bold.md>SMS / MMS Pricing & Fees</Text.Title.Bold.md>\n          <Text.Regular.Normal.md>\n            Below are Telgorithm’s prices for sending and receiving SMS & MMS messages.\n            All prices are for United States and Canada numbers. To learn about custom\n            pricing options for high volume messaging,{' '}\n            <Link to={InternalLinks.ContactUs}>contact sales.</Link>\n          </Text.Regular.Normal.md>\n        </FeeBreakdownBlock>\n        <MessagingPricingTable />\n        <InlineBanner>\n          <HighVolumeMessageBannerContent>\n            <div>\n              <Text.Title.Bold.md>High Volume Messaging</Text.Title.Bold.md>\n              <p>\n                Custom pricing options for committed high volume messaging are available.\n                Reach out to our team to learn more.\n              </p>\n            </div>\n            <div>\n              <CustomLink address={InternalLinks.ContactUs}>\n                <PrimaryButton>Talk to sales</PrimaryButton>\n              </CustomLink>\n            </div>\n          </HighVolumeMessageBannerContent>\n        </InlineBanner>\n        <FeesSection></FeesSection>\n        <Divider />\n        <PricingCalculatorSection>\n          <PricingCalculatorDescription>\n            <Text.Title.Bold.md>Pricing Calculator</Text.Title.Bold.md>\n            <Text.Regular.Normal.md>\n              We believe in transparent pricing. Use this tool to get an idea of how much\n              you will be spending per month.\n            </Text.Regular.Normal.md>\n            <Text.Regular.Normal.xs>\n              All prices are estimates and do not include{' '}\n              <Link to={InternalLinks.CarrierFees}>Carrier pass-through fees.</Link>\n            </Text.Regular.Normal.xs>\n            <BenefitsBlock>\n              <BenefitItem>\n                <SuccessCircleEmptyIcon />\n                <p>\n                  <Text.Regular.Bold.lg>Customized Contracts</Text.Regular.Bold.lg>\n                  <Text.Regular.Normal.xs>\n                    created to serve your needs\n                  </Text.Regular.Normal.xs>\n                </p>\n              </BenefitItem>\n              <BenefitItem>\n                <SuccessCircleEmptyIcon />\n                <p>\n                  <Text.Regular.Bold.lg>Contract Buyouts</Text.Regular.Bold.lg>\n                  <Text.Regular.Normal.xs>\n                    empowering you to make the best decision for your business\n                  </Text.Regular.Normal.xs>\n                </p>\n              </BenefitItem>\n              <BenefitItem>\n                <SuccessCircleEmptyIcon />\n                <p>\n                  <Text.Regular.Bold.lg>Committed-Use Discount</Text.Regular.Bold.lg>\n                  <Text.Regular.Normal.xs>\n                    when you commit to a monthly volume of messages\n                  </Text.Regular.Normal.xs>\n                </p>\n              </BenefitItem>\n            </BenefitsBlock>\n            <Link to={InternalLinks.ContactUs}>\n              <PrimaryButton height=\"auto\" padding=\"10px 25px\">\n                Talk to Sales\n              </PrimaryButton>\n            </Link>\n          </PricingCalculatorDescription>\n          <PriceCalculator />\n        </PricingCalculatorSection>\n        <Divider />\n        <PricingPageFooterSection />\n      </Layout>\n    </>\n  );\n};\n\nexport default Pricing;\n","import {round, toFixedForNumbers} from \"./round\";\n\nconst formatNumber = (value : number, digits : number) => {\n  if (value < 1_000) {\n    return round(value, digits).toString();\n  }\n\n  if (value < 1_000_000) {\n    return `${round(value / 1_000, digits)}K`;\n  }\n\n  if (value < 1_000_000_000) {\n    return `${round(value / 1_000_000, digits)}M`;\n  }\n\n  return `${round(value / 1_000_000_000, digits)}B`;\n}\n\nexport const formatPrice = (value : number) : string => {\n  // Round to 3 digits if number less than 100\n  if (value < 100) {\n    const valueRounded = Math.round((value + Number.EPSILON) * 1000) / 1000;\n    return valueRounded.toFixed(toFixedForNumbers([valueRounded])).toString();\n  }\n\n  // Round to 1 digit if number less than 10_000\n  if (value < 10_000) {\n    return round(value, 1).toString();\n  }\n\n  // Round to 1 digit for others\n  return formatNumber(value, 1);\n}\n\nexport const formatLimit = (value: number) =>\n  formatNumber(value, 0);\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    maximumFractionDigits: 1,\n  });\n  \nexport const formatNumberToCompactString = (sourceNumber: number) =>\n    formatter.format(sourceNumber);\n","export const round = (value : number, digits : number = 0) =>{\n  const multiplier = Math.pow(10, digits);\n  return Math.round(value * multiplier) / multiplier;\n};\n\nexport const toFixedForNumbers = (numbers : number[]):number => {\n  const decimalPartsLength = numbers.map(num => num.toString().split('.')[1]?.length ?? 0)\n  return Math.max(...decimalPartsLength) // counting maximum decimal part of values\n}\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","export default __webpack_public_path__ + \"static/blackOrangeGradient-a4455b7e689f432c14311402af3c5f2f.png\";","export default __webpack_public_path__ + \"static/BannerBackground-daaccb1a1fa897d29da224d9a9cad8e6.webp\";"],"names":["PrimaryButton","styled","displayName","componentId","colors","props","_props$height","height","_props$padding","padding","SecondaryButton","withConfig","_ref","color","React","width","viewBox","fill","xmlns","d","SuccessCircleEmptyIcon","address","arrow","children","external","inline","LinkElementExternal","href","target","id","shortid","rel","RightArrow","LinkElementInternal","to","_props$color","device","Link","_props$color2","StyledTemplateContent","css","NoResultsText","VideoContainer","InlineBanner","background","ArticleListContentContainer","ArticleList","MediumCards","SmallCards","MobileCardsContainer","DesktopCardsContainer","SmallCardWrapper","ReturnLink","Badge","alignSelf","HeroSection","marginTop","HeroInfo","Wrapper","LinksWrapper","DesktopHeroImage","MobileHeroImage","CalculatorBlock","CalculatorCountingSection","CalculatorNumbersSection","CalculatorPriceSection","blackOrangeGradient","TotalPrice","CalculatorSliderLabel","PricingTable","TableRow","TableHeader","TableBodyCell","TableHeaderCell","FeeBreakdownBlock","RegularNormalExtraSmall","PricingCalculatorDescription","BenefitsBlock","BenefitItem","PricingCalculatorSection","OurPromise","FeeTablesFootNotes","StyledFeesSection","PricingTab","isActive","PricingTabs","activeTabNumber","PricingTableContainer","MessagingPricingTableContainer","PricingSectionsDropdown","HighVolumeMessageBannerContent","calculatePrice","pricingList","count","sum","countLeft","i","length","current","limit","price","sliderThumbStyles","trackHeight","RangeSliderContainer","RangeSliderValue","RangeSliderHeader","RangeSlider","value","setValue","minValue","maxValue","step","sliderRef","useRef","onSliderChange","newValue","valPercent","Number","style","useEffect","Text","formatNumberToCompactString","type","min","String","max","onChange","e","currentTarget","ref","SMSIcon","MMSIcon","PriceCalculator","_priceCalculatorData$","_priceCalculatorData$2","_priceCalculatorData$3","_priceCalculatorData$4","_priceCalculatorData$5","_priceCalculatorData$6","priceCalculatorData","JSON","parse","data","TELGORITHM_10DLC_MMS_SENT","find","category","categoryName","pricingItems","TELGORITHM_10DLC_NUMBERS_PURCHASED","TELGORITHM_10DLC_SMS_SENT","TELGORITHM_TOLLFREE_MMS_SENT","TELGORITHM_TOLLFREE_NUMBERS_PURCHASED","TELGORITHM_TOLLFREE_SMS_SENT","tenDlcNumbersAmount","setTenDlcNumbersAmount","useState","tenDlcSmsAmount","setTenDlcSmsAmount","tenDlcMmsAmount","setTenDlcMmsAmount","tollFreeNumbersAmount","setTollFreeNumbersAmount","tollFreeSmsAmount","setTollFreeSmsAmount","tollFreeMmsAmount","setTollFreeMmsAmount","tenDlcNumbersPrice","setTenDlcNumbersPrice","tenDlcSmsPrice","setTenDlcSmsPrice","tenDlcMmsPrice","setTenDlcMmsPrice","tollFreeNumbersPrice","setTollFreeNumbersPrice","tollFreeSmsPrice","setTollFreeSmsPrice","tollFreeMmsPrice","setTollFreeMmsPrice","handle10DlcNumbersChange","handle10DlcSmsChange","handleTollFreeNumbersChange","handleTollFreeSmsChange","ourPrice","PhoneIcon","formatPrice","MonthlyRecurringTable","localNumbers","tollfreeNumbers","Table","toFixed","CallForwardingTable","_ref2","callForwarding","NumberLookUpTable","_ref3","numberVerification","TimerWithArrow","RightSmallArrow","Magnifier","PricingTabsName","RenderPricingTable","_pricingData$find","_pricingData$find2","_pricingData$find3","_pricingData$find4","_pricingData$find5","_pricingData$find6","_pricingData$find7","_pricingData$find8","_pricingData$find9","_pricingData$find10","_pricingData$find11","_pricingData$find12","pricingCategory","pricingData","CALL_FORWARDING_10DLC_NUMBERS","NUMBER_VERIFICATION","MonthlyRecurringFees","CallForwardingFee","NumberLookUpFee","FeesSection","activeTab","setActiveTab","Object","values","findIndex","item","DropdownInput","event","onClick","PricingPageHeroSection","Container","ActionButtons","StaticImage","src","alt","placeholder","__imageData","require","InternalLinks","CustomLink","HeartIcon","PricingPageFooterSection","useContext","AppContext","MessagingPricingTable","TELGORITHM_10DLC_MMS_RECEIVED","TELGORITHM_10DLC_SMS_RECEIVED","TELGORITHM_TOLLFREE_MMS_RECEIVED","TELGORITHM_TOLLFREE_SMS_RECEIVED","renderPrice","unitName","round","Pricing","MetaData","title","description","TopLevelPageJSONLDSchemas","url","GatsbySeoComponent","canonicalUrl","Layout","Divider","formatNumber","digits","toString","valueRounded","Math","EPSILON","toFixedForNumbers","formatter","Intl","NumberFormat","notation","maximumFractionDigits","sourceNumber","format","multiplier","pow","numbers","decimalPartsLength","map","num","_num$toString$split$","_num$toString$split$2","split","apply","_toConsumableArray","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","filter","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","number","done","loopCounter","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","_seed_","mask","log","LN2"],"sourceRoot":""}