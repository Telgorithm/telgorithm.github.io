{"version":3,"file":"component---src-pages-get-demo-tsx-c7a19c2e4e0ddc5303de.js","mappings":"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","sources":["webpack://landing/./src/components/common/Table/index.tsx","webpack://landing/./src/components/common/Table/styled.ts","webpack://landing/./src/components/common/Divider/index.tsx","webpack://landing/./src/components/common/NumberInput/index.tsx","webpack://landing/./src/components/get-demo/styled.ts","webpack://landing/./src/components/get-demo/index.tsx","webpack://landing/./src/pages/get-demo.tsx"],"sourcesContent":["import React, {PropsWithChildren} from 'react';\nimport {Table, TableHeader, TableBody, TableRow, TableHeaderCell, TableBodyCell, TableContainer, TableWrapper} from \"./styled\";\n\ntype TableProps = PropsWithChildren<{}>;\n\ntype SubComponents = {\n  Header: typeof TableHeader;\n  Body: typeof TableBody;\n  Row: typeof TableRow;\n  HeaderCell: typeof TableHeaderCell;\n  BodyCell: typeof TableBodyCell;\n  Container: typeof TableContainer;\n  Wrapper: typeof TableWrapper;\n};\n\nconst TableComponent: React.FC<TableProps> & SubComponents = ({children}: TableProps) => {\n  return (\n    <Table>\n      {children}\n    </Table>\n  );\n};\n\nTableComponent.Header = TableHeader;\nTableComponent.Body = TableBody;\nTableComponent.Row = TableRow;\nTableComponent.HeaderCell = TableHeaderCell;\nTableComponent.BodyCell = TableBodyCell;\nTableComponent.Container = TableContainer;\nTableComponent.Wrapper = TableWrapper;\n\nexport default TableComponent;\n","import styled from \"styled-components\";\nimport { device } from \"../../../utils/layoutBreakpoints\";\nimport { colors, opacityToHex } from \"../../../utils/colors\";\n\nexport const TableHeaderCell = styled.th`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 600;\n  line-height: 22px;\n  text-align: left;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableBodyCell = styled.td`\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  vertical-align: middle;\n\n  @media ${device.laptop} {\n    font-size: 18px;\n    line-height: 24px;\n  }\n`;\n\nexport const TableRow = styled.tr`\n  ${TableBodyCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n      border-top-left-radius: 8px;\n      border-bottom-left-radius: 8px;\n    }\n\n    &:last-child {\n      padding-right: 24px;\n      border-top-right-radius: 8px;\n      border-bottom-right-radius: 8px;\n    }\n  }\n\n  ${TableHeaderCell} {\n    padding: 9px 9px 9px 0px;\n\n    &:first-child {\n      padding-left: 24px;\n    }\n  }\n`;\n\nexport const TableHeader = styled.thead``;\n\nexport const TableBody = styled.tbody`\n  ${TableRow}:nth-child(2n+1) {\n    background-color: ${colors.primary.blue + opacityToHex[\"0.1\"]};\n  }\n`;\n\nexport const Table = styled.table`\n  table-layout: fixed;\n\n  @media ${device.laptop} {\n    margin: 0;\n    width: 100%;\n  }\n`;\n\nexport const TableContainer = styled.div`\n  overflow-x: hidden;\n  position: relative;\n  @media ${device.tablet} {\n    width: auto;\n  }\n  @supports (-webkit-touch-callout: none) {\n    &::after {\n      position: absolute;\n      content: \"\";\n      display: block;\n      bottom: 2px;\n      left: 0;\n      width: 100%;\n      height: 5px;\n      background-color: ${colors.primary.gray500};\n      border-radius: 5px;\n      z-index: -1;\n      @media ${device.tablet} {\n        display: none;\n      }\n    }\n  }\n`;\n\nexport const TableWrapper = styled.div`\n  overflow-x: scroll;\n  scrollbar-color: ${colors.secondary.gray700};\n  padding-bottom: 10px;\n\n  /* Chrome, Edge, and Safari */\n  &::-webkit-scrollbar {\n    width: 12px;\n    height: 10px !important;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: ${colors.secondary.gray300};\n    border-radius: 5px;\n    height: 5px !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n    border-radius: 10px;\n    height: 5px !important;\n  }\n  &:hover::-webkit-scrollbar-thumb {\n    background-color: ${colors.primary.gray500};\n  }\n\n  @media ${device.tablet} {\n    overflow-x: auto;\n    table {\n      min-width: auto;\n    }\n  }\n  table {\n    min-width: 850px;\n    width: 100%;\n    table-layout: auto;\n  }\n`;\n","import styled from 'styled-components';\nimport {colors} from \"../../../utils/colors\";\n\nconst Divider = styled.div`\n  width: 100%;\n  border-bottom: 1px solid ${colors.secondary.gray300};\n`;\n\nexport default Divider;\n","import React, {useState} from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../../utils/colors\";\n\nconst Input = styled.input<{textAlign?: string}>`\n  color: ${colors.primary.black};\n  font-size: 16px;\n  font-family: \"Rubik\";\n  font-weight: 400;\n  line-height: 22px;\n  width: calc(100% - 24px);\n  padding: 6px 12px;\n  text-align: ${props => props.textAlign ?? \"left\"};\n  border: 1px solid #C3C5CD;\n  border-radius: 8px;\n`;\n\ntype NumberInputProps = {\n  onChange?: (value : number | null) => void;\n  initialValue?: number;\n};\n\nconst NumberInput = ({onChange, initialValue} : NumberInputProps) => {\n  const [value, setValue] = useState<string | null>(initialValue ? String(initialValue) : '0');\n\n  const addCommas = (num: number) => {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  const removeNonNumeric = (num: string) =>\n    num.toString().replace(/[^0-9]/g, \"\");\n\n  const handleChange = (event : React.FormEvent<HTMLInputElement>) => {\n    const stringValue = removeNonNumeric(event.currentTarget.value);\n\n    if (!isNaN(Number(stringValue))) {\n      const number = Number(stringValue);\n      setValue(addCommas(number));\n      onChange && onChange(number);\n    } else {\n      setValue(null);\n      onChange && onChange(null);\n    }\n  }\n\n  return (\n    <Input\n      type=\"text\"\n      value={value ?? ''}\n      onInput={handleChange}\n      maxLength={13}\n      onFocus={(e) => e.currentTarget.select()}\n    />\n  );\n};\n\nexport default NumberInput;\n","import styled from 'styled-components';\r\nimport { colors } from '../../utils/colors';\r\nimport { device } from '../../utils/layoutBreakpoints';\r\n\r\nexport const StyledGetDemoFormContainer = styled.div`\r\n  font-size: 0.8rem;\r\n  line-height: 1.1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 15px;\r\n  width: 100%;\r\n  label {\r\n    font-weight: 500;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 5px;\r\n    width: 100%;\r\n  }\r\n\r\n  input,\r\n  textarea {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    background-color: ${colors.primary.white};\r\n    color: ${colors.primary.black};\r\n    border: 1px solid ${colors.secondary.gray300};\r\n    font-family: 'Rubik';\r\n    border-radius: 5px;\r\n    &::placeholder {\r\n      color: ${colors.primary.gray500};\r\n      font-family: 'Rubik';\r\n    }\r\n    &:focus {\r\n      outline: none;\r\n      border: 1px solid ${colors.primary.blue};\r\n    }\r\n  }\r\n\r\n  input {\r\n    height: 36px;\r\n    padding: 10px 15px;\r\n  }\r\n\r\n  textarea {\r\n    height: 100px;\r\n    padding: 10px 15px;\r\n    resize: none;\r\n  }\r\n\r\n  fieldset {\r\n    margin-bottom: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    gap: 10px;\r\n    legend {\r\n      font-weight: 500;\r\n      margin-bottom: 10px;\r\n    }\r\n    label {\r\n      cursor: pointer;\r\n      background: ${colors.primary.white};\r\n      border: 1px solid ${colors.secondary.gray300};\r\n      border-radius: 8px;\r\n      padding: 10px 15px;\r\n      text-align: center;\r\n      box-sizing: border-box;\r\n    }\r\n    input {\r\n      display: none;\r\n      &:checked + label {\r\n        color: ${colors.primary.white};\r\n        background-color: ${colors.primary.blue};\r\n      }\r\n    }\r\n\r\n    @media ${device.tablet} {\r\n      flex-direction: row;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledGetDemoContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  background-color: ${colors.secondary.gray100};\r\n  border-radius: 16px;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 20px;\r\n  position: relative;\r\n  z-index: 2;\r\n  min-height: 580px;\r\n\r\n  & > div:first-child {\r\n    padding: 25px 25px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  @media ${device.tablet} {\r\n    & > div:first-child {\r\n      padding: 50px 50px;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const GetDemoBackgroundImagesWrapper = styled.div`\r\n  display: none;\r\n  width: 50%;\r\n  height: 100%;\r\n  @media ${device.laptop} {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const GetDemoBackgroundImages = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  & > div {\r\n    max-width: 300px;\r\n    height: auto;\r\n    position: absolute;\r\n    &:first-child {\r\n      right: 200px;\r\n    }\r\n    &:nth-child(2) {\r\n      right: -40px;\r\n      top: 250px;\r\n    }\r\n    &:nth-child(3) {\r\n      top: 300px;\r\n      left: -100px;\r\n      z-index: 1;\r\n    }\r\n    &:nth-child(4) {\r\n      right: 80px;\r\n      top: 580px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GetDemoPageWrapper = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  height: 100%;\r\n  background-color: ${colors.secondary.azureishWhite};\r\n`;\r\n\r\nexport const GetDemoContentContainer = styled.div`\r\n  max-width: 1268px;\r\n  margin: auto;\r\n  padding: 30px 40px 80px;\r\n  display: flex;\r\n  height: 100%;\r\n  & > div:first-child {\r\n    width: 100%;\r\n    @media ${device.laptop} {\r\n        width: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GetDemoPageHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  @media ${device.laptop} {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n","import { StaticImage } from 'gatsby-plugin-image';\r\nimport {\r\n  GetDemoBackgroundImagesWrapper,\r\n  GetDemoBackgroundImages,\r\n  StyledGetDemoFormContainer,\r\n} from './styled';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport useFetchHubSpotForms from '../../hooks/useFetchHubSpotForms';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport { colors } from '../../utils/colors';\r\nimport { AppContext } from '../common/Layout/Layout';\r\n\r\nexport const BackgroundImages = () => {\r\n  return (\r\n    <GetDemoBackgroundImagesWrapper>\r\n      <GetDemoBackgroundImages>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/automatedNumberPorting.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/messageTimeRouting.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/phoneNumberVerification.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n        <div>\r\n          <StaticImage\r\n            src=\"../../images/GetDemo/advancedErrorReporting.png\"\r\n            placeholder=\"none\"\r\n            alt=\"\"\r\n          ></StaticImage>\r\n        </div>\r\n      </GetDemoBackgroundImages>\r\n    </GetDemoBackgroundImagesWrapper>\r\n  );\r\n};\r\n\r\nexport const GetDemoForm = () => {\r\n  const appContext = useContext(AppContext);\r\n\r\n  useFetchHubSpotForms(\r\n    [appContext.hubSpot.isHubSpotFormsLoaded],\r\n    !appContext.hubSpot.isHubSpotFormsLoaded,\r\n    appContext.hubSpot.setIsHubSpotFormsLoaded,\r\n  );\r\n\r\n  useEffect(() => {\r\n    //@ts-ignore\r\n    window.hbspt?.forms.create({\r\n      region: 'na1',\r\n      portalId: '21630623',\r\n      formId: '26faf862-980b-40dc-b461-f4cda7841e47',\r\n      target: '#hubSpotGetADemoForm',\r\n      onFormSubmit: function () {\r\n        //@ts-ignore\r\n        gtag_report_conversion();\r\n      },\r\n    });\r\n  }, [appContext.hubSpot.isHubSpotFormsLoaded]);\r\n\r\n  return (\r\n    <StyledGetDemoFormContainer id=\"hubSpotGetADemoForm\">\r\n      {!appContext.hubSpot.isHubSpotFormsLoaded && (\r\n        <ClipLoader color={colors.primary.lightOrange} />\r\n      )}\r\n    </StyledGetDemoFormContainer>\r\n  );\r\n};\r\n","import * as React from 'react';\nimport { Layout, Text } from '../components/common';\nimport {\n  GatsbySeoComponent,\n  MetaData,\n  TopLevelPageJSONLDSchemas,\n} from '../components/common/SEO';\nimport { useInView } from 'react-cool-inview';\nimport {\n  GetDemoContentContainer,\n  GetDemoPageHeader,\n  GetDemoPageWrapper,\n  StyledGetDemoContainer,\n} from '../components/get-demo/styled';\nimport { BackgroundImages, GetDemoForm } from '../components/get-demo';\n\nconst GetDemoPage = () => {\n  const { observe, inView } = useInView({});\n  return (\n    <>\n      <MetaData title=\"Get Demo | Telgorithm\" description=\"Demo Our SMS & MMS APIs\" />\n      <GatsbySeoComponent canonicalUrl=\"https://www.telgorithm.com/get-demo/\" />\n      <TopLevelPageJSONLDSchemas url=\"https://www.telgorithm.com/get-demo/\" />\n      <Layout disabledContainer>\n        <GetDemoPageWrapper>\n          <GetDemoContentContainer>\n            <div>\n              <GetDemoPageHeader>\n                <Text.Title.Bold.xl>Demo Our SMS & MMS APIs</Text.Title.Bold.xl>\n                <Text.Regular.Bold.md>\n                  Complete the form below to request a free demo.\n                </Text.Regular.Bold.md>\n              </GetDemoPageHeader>\n              <StyledGetDemoContainer ref={observe}>\n                <div>\n                  <GetDemoForm></GetDemoForm>\n                </div>\n              </StyledGetDemoContainer>\n            </div>\n            <BackgroundImages />\n          </GetDemoContentContainer>\n        </GetDemoPageWrapper>\n      </Layout>\n    </>\n  );\n};\n\nexport default GetDemoPage;\n"],"names":["TableComponent","_ref","children","React","Table","Header","TableHeader","Body","TableBody","Row","TableRow","HeaderCell","TableHeaderCell","BodyCell","TableBodyCell","Container","TableContainer","Wrapper","TableWrapper","styled","displayName","componentId","device","colors","opacityToHex","props","_props$textAlign","textAlign","StyledGetDemoFormContainer","StyledGetDemoContainer","GetDemoBackgroundImagesWrapper","GetDemoBackgroundImages","GetDemoPageWrapper","GetDemoContentContainer","GetDemoPageHeader","BackgroundImages","StaticImage","src","placeholder","alt","__imageData","require","GetDemoForm","appContext","useContext","AppContext","useFetchHubSpotForms","hubSpot","isHubSpotFormsLoaded","setIsHubSpotFormsLoaded","useEffect","_window$hbspt","window","hbspt","forms","create","region","portalId","formId","target","onFormSubmit","gtag_report_conversion","id","ClipLoader","color","GetDemoPage","observe","inView","useInView","MetaData","title","description","GatsbySeoComponent","canonicalUrl","TopLevelPageJSONLDSchemas","url","Layout","disabledContainer","Text","ref"],"sourceRoot":""}